; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_edgewise.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_edgewise.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app\inc -IF:\LuckyXRQ\CleanCar\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_edgewise.crf ..\..\User\app\src\bsp_Edgewise.c]
                          THUMB

                          AREA ||i.bsp_EdgewiseAct||, CODE, READONLY, ALIGN=2

                  bsp_EdgewiseAct PROC
;;;23     
;;;24     void bsp_EdgewiseAct(void)
000000  b570              PUSH     {r4-r6,lr}
;;;25     {
;;;26     	float voltage;
;;;27     	Collision collision;
;;;28     	
;;;29     //	if(!edgewise.isRunning)
;;;30     //	{
;;;31     //		return ;
;;;32     //	}
;;;33     	
;;;34     	/*
;;;35     		往右边靠，从低到波峰，则直接沿边
;;;36     		如果右边撞到了，则后退同时向左转向，转一个固定的角度
;;;37     		现在则开始进行沿边，从波峰的左边向右锁住波峰
;;;38     	*/
;;;39     	switch(edgewise.action)
000002  4873              LDR      r0,|L1.464|
000004  7840              LDRB     r0,[r0,#1]  ; edgewise
000006  2802              CMP      r0,#2
000008  d042              BEQ      |L1.144|
00000a  dc03              BGT      |L1.20|
00000c  b138              CBZ      r0,|L1.30|
00000e  2801              CMP      r0,#1
                  |L1.16|
000010  d128              BNE      |L1.100|
000012  e028              B        |L1.102|
                  |L1.20|
000014  2803              CMP      r0,#3
000016  d058              BEQ      |L1.202|
000018  280a              CMP      r0,#0xa
00001a  d1f9              BNE      |L1.16|
00001c  e06f              B        |L1.254|
                  |L1.30|
;;;40     	{
;;;41     		case 0:/*判断是否进入沿边模式*/
;;;42     		{
;;;43     			voltage = bsp_GetInfraredVoltageRight();
00001e  f7fffffe          BL       bsp_GetInfraredVoltageRight
000022  4605              MOV      r5,r0
;;;44     			collision = bsp_CollisionScan();
000024  f7fffffe          BL       bsp_CollisionScan
000028  4604              MOV      r4,r0
;;;45     			
;;;46     			/*撞到了，优先判断，后退同时转向*/
;;;47     			if(collision == CollisionRight)
00002a  2c01              CMP      r4,#1
00002c  d10b              BNE      |L1.70|
;;;48     			{
;;;49     				bsp_MotorBrake(MotorLeft);
00002e  2000              MOVS     r0,#0
000030  f7fffffe          BL       bsp_MotorBrake
;;;50     				bsp_MotorBrake(MotorRight);
000034  2001              MOVS     r0,#1
000036  f7fffffe          BL       bsp_MotorBrake
;;;51     				edgewise.action++ ;
00003a  4865              LDR      r0,|L1.464|
00003c  7840              LDRB     r0,[r0,#1]  ; edgewise
00003e  1c40              ADDS     r0,r0,#1
000040  4963              LDR      r1,|L1.464|
000042  7048              STRB     r0,[r1,#1]
000044  e00e              B        |L1.100|
                  |L1.70|
;;;52     			}
;;;53     			/*从左边到波峰，减速，沿边*/
;;;54     			else if(voltage >= CONSTANT)
000046  f04f517e          MOV      r1,#0x3f800000
00004a  4628              MOV      r0,r5
00004c  f7fffffe          BL       __aeabi_cfrcmple
000050  d808              BHI      |L1.100|
;;;55     			{
;;;56     				bsp_MotorBrake(MotorLeft);
000052  2000              MOVS     r0,#0
000054  f7fffffe          BL       bsp_MotorBrake
;;;57     				bsp_MotorBrake(MotorRight);
000058  2001              MOVS     r0,#1
00005a  f7fffffe          BL       bsp_MotorBrake
;;;58     				edgewise.action = 10;
00005e  200a              MOVS     r0,#0xa
000060  495b              LDR      r1,|L1.464|
000062  7048              STRB     r0,[r1,#1]
                  |L1.100|
;;;59     			}
;;;60     			
;;;61     		};break;
000064  e0b2              B        |L1.460|
                  |L1.102|
;;;62     		
;;;63     		case 1:/*撞到了，优先判断，后退*/
;;;64     		{
;;;65     			bsp_SetMotorPWM(MotorLeft,Backward, SLOW_SPEED);
000066  f2417270          MOV      r2,#0x1770
00006a  2101              MOVS     r1,#1
00006c  2000              MOVS     r0,#0
00006e  f7fffffe          BL       bsp_SetMotorPWM
;;;66     			bsp_SetMotorPWM(MotorRight,Backward,SLOW_SPEED);
000072  f2417270          MOV      r2,#0x1770
000076  2101              MOVS     r1,#1
000078  4608              MOV      r0,r1
00007a  f7fffffe          BL       bsp_SetMotorPWM
;;;67     			edgewise.delay = xTaskGetTickCount();
00007e  f7fffffe          BL       xTaskGetTickCount
000082  4953              LDR      r1,|L1.464|
000084  6048              STR      r0,[r1,#4]  ; edgewise
;;;68     			edgewise.action++ ;
000086  4608              MOV      r0,r1
000088  7840              LDRB     r0,[r0,#1]  ; edgewise
00008a  1c40              ADDS     r0,r0,#1
00008c  7048              STRB     r0,[r1,#1]
;;;69     		};break;
00008e  e09d              B        |L1.460|
                  |L1.144|
;;;70     		
;;;71     		case 2:/*撞到了，优先判断，原地转向*/
;;;72     		{
;;;73     			if(xTaskGetTickCount() - edgewise.delay >= 600)
000090  f7fffffe          BL       xTaskGetTickCount
000094  494e              LDR      r1,|L1.464|
000096  6849              LDR      r1,[r1,#4]  ; edgewise
000098  1a40              SUBS     r0,r0,r1
00009a  f5b07f16          CMP      r0,#0x258
00009e  d313              BCC      |L1.200|
;;;74     			{
;;;75     				bsp_SetMotorPWM(MotorLeft,Backward, SLOW_SPEED);
0000a0  f2417270          MOV      r2,#0x1770
0000a4  2101              MOVS     r1,#1
0000a6  2000              MOVS     r0,#0
0000a8  f7fffffe          BL       bsp_SetMotorPWM
;;;76     				bsp_SetMotorPWM(MotorRight,Forward,SLOW_SPEED);
0000ac  f2417270          MOV      r2,#0x1770
0000b0  2100              MOVS     r1,#0
0000b2  2001              MOVS     r0,#1
0000b4  f7fffffe          BL       bsp_SetMotorPWM
;;;77     				edgewise.delay = xTaskGetTickCount();
0000b8  f7fffffe          BL       xTaskGetTickCount
0000bc  4944              LDR      r1,|L1.464|
0000be  6048              STR      r0,[r1,#4]  ; edgewise
;;;78     				edgewise.action++ ;
0000c0  4608              MOV      r0,r1
0000c2  7840              LDRB     r0,[r0,#1]  ; edgewise
0000c4  1c40              ADDS     r0,r0,#1
0000c6  7048              STRB     r0,[r1,#1]
                  |L1.200|
;;;79     			}
;;;80     		}break;
0000c8  e080              B        |L1.460|
                  |L1.202|
;;;81     		
;;;82     		case 3:/*撞到了，优先判断，继续前进*/
;;;83     		{
;;;84     			if(xTaskGetTickCount() - edgewise.delay >= 200)
0000ca  f7fffffe          BL       xTaskGetTickCount
0000ce  4940              LDR      r1,|L1.464|
0000d0  6849              LDR      r1,[r1,#4]  ; edgewise
0000d2  1a40              SUBS     r0,r0,r1
0000d4  28c8              CMP      r0,#0xc8
0000d6  d311              BCC      |L1.252|
;;;85     			{
;;;86     				bsp_SetMotorPWM(MotorLeft,Forward, SLOW_SPEED);
0000d8  f2417270          MOV      r2,#0x1770
0000dc  2100              MOVS     r1,#0
0000de  4608              MOV      r0,r1
0000e0  f7fffffe          BL       bsp_SetMotorPWM
;;;87     				bsp_SetMotorPWM(MotorRight,Forward,SLOW_SPEED);
0000e4  f2417270          MOV      r2,#0x1770
0000e8  2100              MOVS     r1,#0
0000ea  2001              MOVS     r0,#1
0000ec  f7fffffe          BL       bsp_SetMotorPWM
;;;88     				edgewise.delay = xTaskGetTickCount();
0000f0  f7fffffe          BL       xTaskGetTickCount
0000f4  4936              LDR      r1,|L1.464|
0000f6  6048              STR      r0,[r1,#4]  ; edgewise
;;;89     				edgewise.action = 0 ;
0000f8  2000              MOVS     r0,#0
0000fa  7048              STRB     r0,[r1,#1]
                  |L1.252|
;;;90     			}
;;;91     		}break;
0000fc  e066              B        |L1.460|
                  |L1.254|
;;;92     		
;;;93     		
;;;94     		
;;;95     		case 10:
;;;96     		{
;;;97     			collision = bsp_CollisionScan();
0000fe  f7fffffe          BL       bsp_CollisionScan
000102  4604              MOV      r4,r0
;;;98     			
;;;99     			/*撞到了，优先判断，后退同时转向*/
;;;100    			if(collision == CollisionRight)
000104  2c01              CMP      r4,#1
000106  d109              BNE      |L1.284|
;;;101    			{
;;;102    				bsp_MotorBrake(MotorLeft);
000108  2000              MOVS     r0,#0
00010a  f7fffffe          BL       bsp_MotorBrake
;;;103    				bsp_MotorBrake(MotorRight);
00010e  2001              MOVS     r0,#1
000110  f7fffffe          BL       bsp_MotorBrake
;;;104    				edgewise.action = 1 ;
000114  2001              MOVS     r0,#1
000116  492e              LDR      r1,|L1.464|
000118  7048              STRB     r0,[r1,#1]
00011a  e056              B        |L1.458|
                  |L1.284|
;;;105    			}
;;;106    			else
;;;107    			{
;;;108    				voltage = bsp_GetInfraredVoltageRight();
00011c  f7fffffe          BL       bsp_GetInfraredVoltageRight
000120  4605              MOV      r5,r0
;;;109    				
;;;110    				if(voltage >= 1.2F)/*套靠近了，向左偏移*/
000122  492c              LDR      r1,|L1.468|
000124  4628              MOV      r0,r5
000126  f7fffffe          BL       __aeabi_cfrcmple
00012a  d80c              BHI      |L1.326|
;;;111    				{
;;;112    					bsp_SetMotorPWM(MotorLeft,Forward, SLOW_SPEED);
00012c  f2417270          MOV      r2,#0x1770
000130  2100              MOVS     r1,#0
000132  4608              MOV      r0,r1
000134  f7fffffe          BL       bsp_SetMotorPWM
;;;113    					bsp_SetMotorPWM(MotorRight,Forward,SLOW_SPEED+INTERVAL);
000138  f6413258          MOV      r2,#0x1b58
00013c  2100              MOVS     r1,#0
00013e  2001              MOVS     r0,#1
000140  f7fffffe          BL       bsp_SetMotorPWM
000144  e041              B        |L1.458|
                  |L1.326|
;;;114    				}
;;;115    				else if(voltage >= 1.1F) /*太远了，向右偏移*/
000146  4924              LDR      r1,|L1.472|
000148  4628              MOV      r0,r5
00014a  f7fffffe          BL       __aeabi_cfrcmple
00014e  d80c              BHI      |L1.362|
;;;116    				{
;;;117    					bsp_SetMotorPWM(MotorLeft,Forward, SLOW_SPEED);
000150  f2417270          MOV      r2,#0x1770
000154  2100              MOVS     r1,#0
000156  4608              MOV      r0,r1
000158  f7fffffe          BL       bsp_SetMotorPWM
;;;118    					bsp_SetMotorPWM(MotorRight,Forward,SLOW_SPEED+500);
00015c  f6411264          MOV      r2,#0x1964
000160  2100              MOVS     r1,#0
000162  2001              MOVS     r0,#1
000164  f7fffffe          BL       bsp_SetMotorPWM
000168  e02f              B        |L1.458|
                  |L1.362|
;;;119    				}
;;;120    				else if(voltage <= 0.8F) /*太远了，向右偏移*/
00016a  491c              LDR      r1,|L1.476|
00016c  4628              MOV      r0,r5
00016e  f7fffffe          BL       __aeabi_cfcmple
000172  d80c              BHI      |L1.398|
;;;121    				{
;;;122    					bsp_SetMotorPWM(MotorLeft,Forward, SLOW_SPEED+500);
000174  f6411264          MOV      r2,#0x1964
000178  2100              MOVS     r1,#0
00017a  4608              MOV      r0,r1
00017c  f7fffffe          BL       bsp_SetMotorPWM
;;;123    					bsp_SetMotorPWM(MotorRight,Forward,SLOW_SPEED);
000180  f2417270          MOV      r2,#0x1770
000184  2100              MOVS     r1,#0
000186  2001              MOVS     r0,#1
000188  f7fffffe          BL       bsp_SetMotorPWM
00018c  e01d              B        |L1.458|
                  |L1.398|
;;;124    				}
;;;125    				else if(voltage <= 0.9F) /*太远了，向右偏移*/
00018e  4914              LDR      r1,|L1.480|
000190  4628              MOV      r0,r5
000192  f7fffffe          BL       __aeabi_cfcmple
000196  d80c              BHI      |L1.434|
;;;126    				{
;;;127    					bsp_SetMotorPWM(MotorLeft,Forward, SLOW_SPEED+INTERVAL);
000198  f6413258          MOV      r2,#0x1b58
00019c  2100              MOVS     r1,#0
00019e  4608              MOV      r0,r1
0001a0  f7fffffe          BL       bsp_SetMotorPWM
;;;128    					bsp_SetMotorPWM(MotorRight,Forward,SLOW_SPEED);
0001a4  f2417270          MOV      r2,#0x1770
0001a8  2100              MOVS     r1,#0
0001aa  2001              MOVS     r0,#1
0001ac  f7fffffe          BL       bsp_SetMotorPWM
0001b0  e00b              B        |L1.458|
                  |L1.434|
;;;129    				}
;;;130    				else
;;;131    				{
;;;132    					bsp_SetMotorPWM(MotorLeft,Forward, SLOW_SPEED);
0001b2  f2417270          MOV      r2,#0x1770
0001b6  2100              MOVS     r1,#0
0001b8  4608              MOV      r0,r1
0001ba  f7fffffe          BL       bsp_SetMotorPWM
;;;133    					bsp_SetMotorPWM(MotorRight,Forward,SLOW_SPEED);
0001be  f2417270          MOV      r2,#0x1770
0001c2  2100              MOVS     r1,#0
0001c4  2001              MOVS     r0,#1
0001c6  f7fffffe          BL       bsp_SetMotorPWM
                  |L1.458|
;;;134    				}
;;;135    			}
;;;136    		}break;
0001ca  bf00              NOP      
                  |L1.460|
0001cc  bf00              NOP                            ;61
;;;137    		
;;;138    	}
;;;139    }
0001ce  bd70              POP      {r4-r6,pc}
;;;140    
                          ENDP

                  |L1.464|
                          DCD      edgewise
                  |L1.468|
                          DCD      0x3f99999a
                  |L1.472|
                          DCD      0x3f8ccccd
                  |L1.476|
                          DCD      0x3f4ccccd
                  |L1.480|
                          DCD      0x3f666666

                          AREA ||.data||, DATA, ALIGN=2

                  edgewise
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_Edgewise.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_bsp_Edgewise_c_5c3acc48____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_bsp_Edgewise_c_5c3acc48____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_bsp_Edgewise_c_5c3acc48____REVSH|
#line 128
|__asm___14_bsp_Edgewise_c_5c3acc48____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
