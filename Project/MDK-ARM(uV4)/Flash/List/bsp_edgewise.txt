; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_edgewise.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_edgewise.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app\inc -IF:\LuckyXRQ\CleanCar\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_edgewise.crf ..\..\User\app\src\bsp_Edgewise.c]
                          THUMB

                          AREA ||i.bsp_EdgewiseAct||, CODE, READONLY, ALIGN=2

                  bsp_EdgewiseAct PROC
;;;23     
;;;24     void bsp_EdgewiseAct(void)
000000  b510              PUSH     {r4,lr}
;;;25     {
;;;26     	Collision collision;
;;;27     	
;;;28     
;;;29     	switch(edgewise.action)
000002  4849              LDR      r0,|L1.296|
000004  7840              LDRB     r0,[r0,#1]  ; edgewise
000006  2802              CMP      r0,#2
000008  d048              BEQ      |L1.156|
00000a  dc03              BGT      |L1.20|
00000c  b138              CBZ      r0,|L1.30|
00000e  2801              CMP      r0,#1
                  |L1.16|
000010  d130              BNE      |L1.116|
000012  e030              B        |L1.118|
                  |L1.20|
000014  2803              CMP      r0,#3
000016  d054              BEQ      |L1.194|
000018  280a              CMP      r0,#0xa
00001a  d1f9              BNE      |L1.16|
00001c  e064              B        |L1.232|
                  |L1.30|
;;;30     	{
;;;31     		case 0:/*判断是否进入沿边模式*/
;;;32     		{
;;;33     			collision = bsp_CollisionScan();
00001e  f7fffffe          BL       bsp_CollisionScan
000022  4604              MOV      r4,r0
;;;34     			
;;;35     			/*撞到了，优先判断，后退同时转向*/
;;;36     			if(collision == CollisionLeft)
000024  b95c              CBNZ     r4,|L1.62|
;;;37     			{
;;;38     				bsp_StopRunStable();
000026  f7fffffe          BL       bsp_StopRunStable
;;;39     				bsp_MotorBrake(MotorLeft);
00002a  2000              MOVS     r0,#0
00002c  f7fffffe          BL       bsp_MotorBrake
;;;40     				bsp_MotorBrake(MotorRight);
000030  2001              MOVS     r0,#1
000032  f7fffffe          BL       bsp_MotorBrake
;;;41     				edgewise.action = 2 ;
000036  2002              MOVS     r0,#2
000038  493b              LDR      r1,|L1.296|
00003a  7048              STRB     r0,[r1,#1]
00003c  e01a              B        |L1.116|
                  |L1.62|
;;;42     			}
;;;43     			/*撞到了，优先判断，后退同时转向*/
;;;44     			else if(collision == CollisionRight)
00003e  2c01              CMP      r4,#1
000040  d10b              BNE      |L1.90|
;;;45     			{
;;;46     				bsp_StopRunStable();
000042  f7fffffe          BL       bsp_StopRunStable
;;;47     				bsp_MotorBrake(MotorLeft);
000046  2000              MOVS     r0,#0
000048  f7fffffe          BL       bsp_MotorBrake
;;;48     				bsp_MotorBrake(MotorRight);
00004c  2001              MOVS     r0,#1
00004e  f7fffffe          BL       bsp_MotorBrake
;;;49     				edgewise.action = 3 ;
000052  2003              MOVS     r0,#3
000054  4934              LDR      r1,|L1.296|
000056  7048              STRB     r0,[r1,#1]
000058  e00c              B        |L1.116|
                  |L1.90|
;;;50     			}
;;;51     			/*撞到了，优先判断，后退同时转向*/
;;;52     			else if(collision == CollisionAll)
00005a  2c02              CMP      r4,#2
00005c  d10a              BNE      |L1.116|
;;;53     			{
;;;54     				bsp_StopRunStable();
00005e  f7fffffe          BL       bsp_StopRunStable
;;;55     				bsp_MotorBrake(MotorLeft);
000062  2000              MOVS     r0,#0
000064  f7fffffe          BL       bsp_MotorBrake
;;;56     				bsp_MotorBrake(MotorRight);
000068  2001              MOVS     r0,#1
00006a  f7fffffe          BL       bsp_MotorBrake
;;;57     				edgewise.action = 1 ;
00006e  2001              MOVS     r0,#1
000070  492d              LDR      r1,|L1.296|
000072  7048              STRB     r0,[r1,#1]
                  |L1.116|
;;;58     			}
;;;59     			
;;;60     			
;;;61     		};break;
000074  e056              B        |L1.292|
                  |L1.118|
;;;62     		
;;;63     		
;;;64     		
;;;65     		
;;;66     		case 1:
;;;67     		{
;;;68     			bsp_SetMotorPWM(MotorLeft,Backward, SLOW_SPEED);
000076  f2417270          MOV      r2,#0x1770
00007a  2101              MOVS     r1,#1
00007c  2000              MOVS     r0,#0
00007e  f7fffffe          BL       bsp_SetMotorPWM
;;;69     			bsp_SetMotorPWM(MotorRight,Backward,SLOW_SPEED);
000082  f2417270          MOV      r2,#0x1770
000086  2101              MOVS     r1,#1
000088  4608              MOV      r0,r1
00008a  f7fffffe          BL       bsp_SetMotorPWM
;;;70     			edgewise.delay = xTaskGetTickCount();
00008e  f7fffffe          BL       xTaskGetTickCount
000092  4925              LDR      r1,|L1.296|
000094  6048              STR      r0,[r1,#4]  ; edgewise
;;;71     			edgewise.action = 10 ;
000096  200a              MOVS     r0,#0xa
000098  7048              STRB     r0,[r1,#1]
;;;72     		}break;
00009a  e043              B        |L1.292|
                  |L1.156|
;;;73     		
;;;74     		
;;;75     		case 2:
;;;76     		{
;;;77     			bsp_SetMotorPWM(MotorLeft,Backward, SLOW_SPEED-500);
00009c  f241527c          MOV      r2,#0x157c
0000a0  2101              MOVS     r1,#1
0000a2  2000              MOVS     r0,#0
0000a4  f7fffffe          BL       bsp_SetMotorPWM
;;;78     			bsp_SetMotorPWM(MotorRight,Backward,SLOW_SPEED+500);
0000a8  f6411264          MOV      r2,#0x1964
0000ac  2101              MOVS     r1,#1
0000ae  4608              MOV      r0,r1
0000b0  f7fffffe          BL       bsp_SetMotorPWM
;;;79     			edgewise.delay = xTaskGetTickCount();
0000b4  f7fffffe          BL       xTaskGetTickCount
0000b8  491b              LDR      r1,|L1.296|
0000ba  6048              STR      r0,[r1,#4]  ; edgewise
;;;80     			edgewise.action = 10 ;
0000bc  200a              MOVS     r0,#0xa
0000be  7048              STRB     r0,[r1,#1]
;;;81     		}break;
0000c0  e030              B        |L1.292|
                  |L1.194|
;;;82     		
;;;83     		
;;;84     		case 3:
;;;85     		{
;;;86     			bsp_SetMotorPWM(MotorLeft,Backward, SLOW_SPEED+500);
0000c2  f6411264          MOV      r2,#0x1964
0000c6  2101              MOVS     r1,#1
0000c8  2000              MOVS     r0,#0
0000ca  f7fffffe          BL       bsp_SetMotorPWM
;;;87     			bsp_SetMotorPWM(MotorRight,Backward,SLOW_SPEED-500);
0000ce  f241527c          MOV      r2,#0x157c
0000d2  2101              MOVS     r1,#1
0000d4  4608              MOV      r0,r1
0000d6  f7fffffe          BL       bsp_SetMotorPWM
;;;88     			edgewise.delay = xTaskGetTickCount();
0000da  f7fffffe          BL       xTaskGetTickCount
0000de  4912              LDR      r1,|L1.296|
0000e0  6048              STR      r0,[r1,#4]  ; edgewise
;;;89     			edgewise.action = 10 ;
0000e2  200a              MOVS     r0,#0xa
0000e4  7048              STRB     r0,[r1,#1]
;;;90     		}break;
0000e6  e01d              B        |L1.292|
                  |L1.232|
;;;91     		
;;;92     		case 10:
;;;93     		{
;;;94     			if(xTaskGetTickCount() - edgewise.delay >= 1000)
0000e8  f7fffffe          BL       xTaskGetTickCount
0000ec  490e              LDR      r1,|L1.296|
0000ee  6849              LDR      r1,[r1,#4]  ; edgewise
0000f0  1a40              SUBS     r0,r0,r1
0000f2  f5b07f7a          CMP      r0,#0x3e8
0000f6  d314              BCC      |L1.290|
;;;95     			{
;;;96     				bsp_MotorBrake(MotorLeft);
0000f8  2000              MOVS     r0,#0
0000fa  f7fffffe          BL       bsp_MotorBrake
;;;97     				bsp_MotorBrake(MotorRight);
0000fe  2001              MOVS     r0,#1
000100  f7fffffe          BL       bsp_MotorBrake
;;;98     				edgewise.delay = xTaskGetTickCount();
000104  f7fffffe          BL       xTaskGetTickCount
000108  4907              LDR      r1,|L1.296|
00010a  6048              STR      r0,[r1,#4]  ; edgewise
;;;99     				edgewise.action++;
00010c  4608              MOV      r0,r1
00010e  7840              LDRB     r0,[r0,#1]  ; edgewise
000110  1c40              ADDS     r0,r0,#1
000112  7048              STRB     r0,[r1,#1]
;;;100    				
;;;101    				bsp_StartRunStable();
000114  f7fffffe          BL       bsp_StartRunStable
;;;102    				
;;;103    //				bsp_SetMotorPWM(MotorLeft,Forward, 7000);
;;;104    //				bsp_SetMotorPWM(MotorRight,Forward,7000);
;;;105    				
;;;106    				flgdec = 0 ;
000118  2000              MOVS     r0,#0
00011a  4904              LDR      r1,|L1.300|
00011c  7008              STRB     r0,[r1,#0]
;;;107    				edgewise.action = 0 ;
00011e  4902              LDR      r1,|L1.296|
000120  7048              STRB     r0,[r1,#1]
                  |L1.290|
;;;108    			}
;;;109    		}break;
000122  bf00              NOP      
                  |L1.292|
000124  bf00              NOP                            ;61
;;;110    		
;;;111    		
;;;112    
;;;113    	}	
;;;114    }
000126  bd10              POP      {r4,pc}
;;;115    
                          ENDP

                  |L1.296|
                          DCD      edgewise
                  |L1.300|
                          DCD      flgdec

                          AREA ||.data||, DATA, ALIGN=2

                  edgewise
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_Edgewise.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_bsp_Edgewise_c_5c3acc48____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_bsp_Edgewise_c_5c3acc48____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_bsp_Edgewise_c_5c3acc48____REVSH|
#line 128
|__asm___14_bsp_Edgewise_c_5c3acc48____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
