; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app\inc -IF:\LuckyXRQ\CleanCar\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp.crf ..\..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=2

                  bsp_Init PROC
;;;30     */
;;;31     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t ret;
;;;34     	/*
;;;35     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;36     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;37     
;;;38     		系统时钟缺省配置为72MHz，如果需要更改，可以修改 system_stm32f10x.c 文件
;;;39     	*/
;;;40     	
;;;41     	/* 优先级分组设置为4，可配置0-15级抢占式优先级，0级子优先级，即不存在子优先级。*/
;;;42     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
000002  f44f7040          MOV      r0,#0x300
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;43     	bsp_InitDWT();
00000a  f7fffffe          BL       bsp_InitDWT
;;;44     	bsp_InitUart(); 	/* 初始化串口 */
00000e  f7fffffe          BL       bsp_InitUart
;;;45     	bsp_InitSW();		/* 开机打开其他外设电源使能引脚 */
000012  f7fffffe          BL       bsp_InitSW
;;;46     	bsp_InitLed();      /* 初始化LED */
000016  f7fffffe          BL       bsp_InitLed
;;;47     	bsp_InitKey();      /* 初始化按键 */
00001a  f7fffffe          BL       bsp_InitKey
;;;48     	bsp_InitHardTimer();/* 初始化硬件定时器 */
00001e  f7fffffe          BL       bsp_InitHardTimer
;;;49     	bsp_InitDC_Motor(); /* 初始化直流电机 */
000022  f7fffffe          BL       bsp_InitDC_Motor
;;;50     	bsp_InitEncoder();  /*初始化编码器引脚，用于统计脉冲的定时器*/
000026  f7fffffe          BL       bsp_InitEncoder
;;;51     	bsp_InitCollision();/*初始化碰撞检测，触动开关*/
00002a  f7fffffe          BL       bsp_InitCollision
;;;52     	
;;;53     	/* 初始化IO拓展芯片 */	
;;;54     	do{
00002e  bf00              NOP      
                  |L1.48|
;;;55     		ret = bsp_InitAW9523B();		
000030  f7fffffe          BL       bsp_InitAW9523B
000034  4604              MOV      r4,r0
;;;56     		if(!ret) 
000036  b92c              CBNZ     r4,|L1.68|
;;;57     		{
;;;58     			WARNING("AW9523B Init Error\r\n");
000038  a005              ADR      r0,|L1.80|
00003a  f7fffffe          BL       __2printf
;;;59     			bsp_DelayMS(100);
00003e  2064              MOVS     r0,#0x64
000040  f7fffffe          BL       bsp_DelayMS
                  |L1.68|
;;;60     		}
;;;61     	}while(!ret);
000044  2c00              CMP      r4,#0
000046  d0f3              BEQ      |L1.48|
;;;62     	bsp_InitDetectAct();/* 初始化红外扫描轮询 */	
000048  f7fffffe          BL       bsp_InitDetectAct
;;;63     }
00004c  bd10              POP      {r4,pc}
;;;64     
                          ENDP

00004e  0000              DCW      0x0000
                  |L1.80|
000050  41573935          DCB      "AW9523B Init Error\r\n",0
000054  32334220
000058  496e6974
00005c  20457272
000060  6f720d0a
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 128
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
