L 1 "..\..\User\app\src\paste.c"
N//#include "bsp.h"
N
N//typedef enum
N//{
N//	eMotorLeft = 0 , /*左轮机*/
N//	eMotorRight,     /*右轮机*/
N//	eVacuum,		 /*吸尘器*/
N//	eRollingBrush,   /*滚刷*/
N//	eSideBrush,      /*边刷*/
N//	eBatteryVoltage, /*电池电压*/
N//	eBatteryCurrent  /*充电电流*/
N//}FeedbackSN;
N
N///*
N//*********************************************************************************************************
N//*	函 数 名: bsp_InitCurrentFeedbackADC
N//*	功能说明: 配置电机电流反馈
N//*	形    参：无
N//*	返 回 值: 无
N//*********************************************************************************************************
N//*/
N//void bsp_InitCurrentFeedbackADC(void)
N//{
N//	ADC_InitTypeDef ADC_InitStructure; 
N//	GPIO_InitTypeDef GPIO_InitStructure;
N
N//	/*左轮机*/
N//	{
N//		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB |RCC_APB2Periph_ADC2, ENABLE );
N// 
N//		/*设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M*/
N//		RCC_ADCCLKConfig(RCC_PCLK2_Div6);
N//                  
N//		/*配置引脚为模拟输入模式*/
N//		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
N//		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
N//		GPIO_Init(GPIOB, &GPIO_InitStructure);	
N
N//		/*复位ADC*/
N//		ADC_DeInit(ADC2);
N
N//		ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
N//		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
N//		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
N//		ADC_InitStructure.ADC_NbrOfChannel = 1;
N//		ADC_Init(ADC2, &ADC_InitStructure);  
N
N//		/*使能指定的ADC*/
N//		ADC_Cmd(ADC2, ENABLE);
N//		
N//		/*使能复位校准 */
N//		ADC_ResetCalibration(ADC2);
N//		 
N//		/*等待复位校准结束*/
N//		while(ADC_GetResetCalibrationStatus(ADC2));
N//		
N//		/*开启AD校准*/
N//		ADC_StartCalibration(ADC2);
N//	 
N//		/*等待校准结束*/
N//		while(ADC_GetCalibrationStatus(ADC2));
N//		
N//		/*ADC,ADC通道,采样时间为239.5周期*/
N//		ADC_RegularChannelConfig(ADC2, ADC_Channel_9, 1, ADC_SampleTime_239Cycles5 );
N//	}
N//	
N//	/*右轮机*/
N//	{
N//		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF |RCC_APB2Periph_ADC3, ENABLE );
N// 
N//		/*设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M*/
N//		RCC_ADCCLKConfig(RCC_PCLK2_Div6);
N//                  
N//		/*配置引脚为模拟输入模式*/
N//		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
N//		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
N//		GPIO_Init(GPIOF, &GPIO_InitStructure);	
N
N//		/*复位ADC*/
N//		ADC_DeInit(ADC3);
N
N//		ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
N//		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
N//		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
N//		ADC_InitStructure.ADC_NbrOfChannel = 1;
N//		ADC_Init(ADC3, &ADC_InitStructure);  
N
N//		/*使能指定的ADC*/
N//		ADC_Cmd(ADC3, ENABLE);
N//		
N//		/*使能复位校准 */
N//		ADC_ResetCalibration(ADC3);
N//		 
N//		/*等待复位校准结束*/
N//		while(ADC_GetResetCalibrationStatus(ADC3));
N//		
N//		/*开启AD校准*/
N//		ADC_StartCalibration(ADC3);
N//	 
N//		/*等待校准结束*/
N//		while(ADC_GetCalibrationStatus(ADC3));
N//		
N//		/*ADC,ADC通道,采样时间为239.5周期*/
N//		ADC_RegularChannelConfig(ADC3, ADC_Channel_8, 1, ADC_SampleTime_239Cycles5 );
N//	}	
N//	
N//	
N//	/*吸尘*/
N//	{
N//		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC |RCC_APB2Periph_ADC2, ENABLE );
N// 
N//		/*设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M*/
N//		RCC_ADCCLKConfig(RCC_PCLK2_Div6);
N//                  
N//		/*配置引脚为模拟输入模式*/
N//		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
N//		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
N//		GPIO_Init(GPIOC, &GPIO_InitStructure);	
N
N//		/*复位ADC*/
N//		ADC_DeInit(ADC2);
N
N//		ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
N//		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
N//		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
N//		ADC_InitStructure.ADC_NbrOfChannel = 1;
N//		ADC_Init(ADC2, &ADC_InitStructure);  
N
N//		/*使能指定的ADC*/
N//		ADC_Cmd(ADC2, ENABLE);
N//		
N//		/*使能复位校准 */
N//		ADC_ResetCalibration(ADC2);
N//		 
N//		/*等待复位校准结束*/
N//		while(ADC_GetResetCalibrationStatus(ADC2));
N//		
N//		/*开启AD校准*/
N//		ADC_StartCalibration(ADC2);
N//	 
N//		/*等待校准结束*/
N//		while(ADC_GetCalibrationStatus(ADC2));
N//		
N//		/*ADC,ADC通道,采样时间为239.5周期*/
N//		ADC_RegularChannelConfig(ADC2, ADC_Channel_12, 1, ADC_SampleTime_239Cycles5 );
N//	}
N//	
N//	/*滚刷*/
N//	{
N//		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC |RCC_APB2Periph_ADC2, ENABLE );
N// 
N//		/*设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M*/
N//		RCC_ADCCLKConfig(RCC_PCLK2_Div6);
N//                  
N//		/*配置引脚为模拟输入模式*/
N//		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
N//		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
N//		GPIO_Init(GPIOC, &GPIO_InitStructure);	
N
N//		/*复位ADC*/
N//		ADC_DeInit(ADC2);
N
N//		ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
N//		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
N//		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
N//		ADC_InitStructure.ADC_NbrOfChannel = 1;
N//		ADC_Init(ADC2, &ADC_InitStructure);  
N
N//		/*使能指定的ADC*/
N//		ADC_Cmd(ADC2, ENABLE);
N//		
N//		/*使能复位校准 */
N//		ADC_ResetCalibration(ADC2);
N//		 
N//		/*等待复位校准结束*/
N//		while(ADC_GetResetCalibrationStatus(ADC2));
N//		
N//		/*开启AD校准*/
N//		ADC_StartCalibration(ADC2);
N//	 
N//		/*等待校准结束*/
N//		while(ADC_GetCalibrationStatus(ADC2));
N//		
N//		/*ADC,ADC通道,采样时间为239.5周期*/
N//		ADC_RegularChannelConfig(ADC2, ADC_Channel_10, 1, ADC_SampleTime_239Cycles5 );
N//	}
N// 
N//	/*边刷*/
N//	{
N//		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC |RCC_APB2Periph_ADC2, ENABLE );
N// 
N//		/*设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M*/
N//		RCC_ADCCLKConfig(RCC_PCLK2_Div6);
N//                  
N//		/*配置引脚为模拟输入模式*/
N//		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
N//		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
N//		GPIO_Init(GPIOC, &GPIO_InitStructure);	
N
N//		/*复位ADC*/
N//		ADC_DeInit(ADC2);
N
N//		ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
N//		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
N//		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
N//		ADC_InitStructure.ADC_NbrOfChannel = 1;
N//		ADC_Init(ADC2, &ADC_InitStructure);  
N
N//		/*使能指定的ADC*/
N//		ADC_Cmd(ADC2, ENABLE);
N//		
N//		/*使能复位校准 */
N//		ADC_ResetCalibration(ADC2);
N//		 
N//		/*等待复位校准结束*/
N//		while(ADC_GetResetCalibrationStatus(ADC2));
N//		
N//		/*开启AD校准*/
N//		ADC_StartCalibration(ADC2);
N//	 
N//		/*等待校准结束*/
N//		while(ADC_GetCalibrationStatus(ADC2));
N//		
N//		/*ADC,ADC通道,采样时间为239.5周期*/
N//		ADC_RegularChannelConfig(ADC2, ADC_Channel_11, 1, ADC_SampleTime_239Cycles5 );
N//	}
N//	
N//	
N//	/*电池电压*/
N//	{
N//		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB |RCC_APB2Periph_ADC2, ENABLE );
N// 
N//		/*设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M*/
N//		RCC_ADCCLKConfig(RCC_PCLK2_Div6);
N//                  
N//		/*配置引脚为模拟输入模式*/
N//		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
N//		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
N//		GPIO_Init(GPIOB, &GPIO_InitStructure);	
N
N//		/*复位ADC*/
N//		ADC_DeInit(ADC2);
N
N//		ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
N//		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
N//		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
N//		ADC_InitStructure.ADC_NbrOfChannel = 1;
N//		ADC_Init(ADC2, &ADC_InitStructure);  
N
N//		/*使能指定的ADC*/
N//		ADC_Cmd(ADC2, ENABLE);
N//		
N//		/*使能复位校准 */
N//		ADC_ResetCalibration(ADC2);
N//		 
N//		/*等待复位校准结束*/
N//		while(ADC_GetResetCalibrationStatus(ADC2));
N//		
N//		/*开启AD校准*/
N//		ADC_StartCalibration(ADC2);
N//	 
N//		/*等待校准结束*/
N//		while(ADC_GetCalibrationStatus(ADC2));
N//		
N//		/*ADC,ADC通道,采样时间为239.5周期*/
N//		ADC_RegularChannelConfig(ADC2, ADC_Channel_8, 1, ADC_SampleTime_239Cycles5 );
N//	}
N//	
N//	/*充电电流*/
N//	{
N//		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF |RCC_APB2Periph_ADC3, ENABLE );
N// 
N//		/*设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M*/
N//		RCC_ADCCLKConfig(RCC_PCLK2_Div6);
N//                  
N//		/*配置引脚为模拟输入模式*/
N//		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
N//		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
N//		GPIO_Init(GPIOF, &GPIO_InitStructure);	
N
N//		/*复位ADC*/
N//		ADC_DeInit(ADC3);
N
N//		ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
N//		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
N//		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
N//		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
N//		ADC_InitStructure.ADC_NbrOfChannel = 1;
N//		ADC_Init(ADC3, &ADC_InitStructure);  
N
N//		/*使能指定的ADC*/
N//		ADC_Cmd(ADC3, ENABLE);
N//		
N//		/*使能复位校准 */
N//		ADC_ResetCalibration(ADC3);
N//		 
N//		/*等待复位校准结束*/
N//		while(ADC_GetResetCalibrationStatus(ADC3));
N//		
N//		/*开启AD校准*/
N//		ADC_StartCalibration(ADC3);
N//	 
N//		/*等待校准结束*/
N//		while(ADC_GetCalibrationStatus(ADC3));
N//		
N//		/*ADC,ADC通道,采样时间为239.5周期*/
N//		ADC_RegularChannelConfig(ADC3, ADC_Channel_4, 1, ADC_SampleTime_239Cycles5 );
N//	}
N//	
N//}
N
