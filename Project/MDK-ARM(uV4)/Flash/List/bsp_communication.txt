; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_communication.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_communication.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app\inc -IF:\LuckyXRQ\CleanCar\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_communication.crf ..\..\User\app\src\bsp_communication.c]
                          THUMB

                          AREA ||i.bsp_CalcChk||, CODE, READONLY, ALIGN=1

                  bsp_CalcChk PROC
;;;236    */
;;;237    static uint16_t bsp_CalcChk(uint8_t *buf, uint8_t len)
000000  b530              PUSH     {r4,r5,lr}
;;;238    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;239    	uint8_t  i;
;;;240    	uint16_t rx_sum1=0x00FFu;
000006  21ff              MOVS     r1,#0xff
;;;241    	uint16_t rx_sum2=0x00FFu;
000008  22ff              MOVS     r2,#0xff
;;;242    	
;;;243    	for(i=0; i<len; i++)
00000a  2300              MOVS     r3,#0
00000c  e007              B        |L1.30|
                  |L1.14|
;;;244    	{
;;;245    		rx_sum2 += rx_sum1 += buf[i];
00000e  5ce0              LDRB     r0,[r4,r3]
000010  4408              ADD      r0,r0,r1
000012  b280              UXTH     r0,r0
000014  4601              MOV      r1,r0
000016  4410              ADD      r0,r0,r2
000018  b282              UXTH     r2,r0
00001a  1c58              ADDS     r0,r3,#1              ;243
00001c  b2c3              UXTB     r3,r0                 ;243
                  |L1.30|
00001e  42ab              CMP      r3,r5                 ;243
000020  dbf5              BLT      |L1.14|
;;;246    	}
;;;247    	
;;;248    	rx_sum1 = (rx_sum1&0x00FFu) + (rx_sum1>>8);
000022  b2c8              UXTB     r0,r1
000024  eb002121          ADD      r1,r0,r1,ASR #8
;;;249    	rx_sum2 = (rx_sum2&0x00FFu) + (rx_sum2>>8);
000028  b2d0              UXTB     r0,r2
00002a  eb002222          ADD      r2,r0,r2,ASR #8
;;;250    	
;;;251    	return rx_sum2<<8|rx_sum1;
00002e  ea412002          ORR      r0,r1,r2,LSL #8
000032  b280              UXTH     r0,r0
;;;252    }
000034  bd30              POP      {r4,r5,pc}
;;;253    
                          ENDP


                          AREA ||i.bsp_ComAnalysis||, CODE, READONLY, ALIGN=2

                  bsp_ComAnalysis PROC
;;;51     */
;;;52     void bsp_ComAnalysis(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;53     {
000004  b08f              SUB      sp,sp,#0x3c
;;;54     	COM_PORT_E port ; 
;;;55     	uint8_t ch = 0 ;
000006  2000              MOVS     r0,#0
000008  900d              STR      r0,[sp,#0x34]
;;;56     	uint16_t index = 0 ;
00000a  2400              MOVS     r4,#0
;;;57     	
;;;58     	/*选定串口*/
;;;59     	port = COM4;
00000c  2003              MOVS     r0,#3
00000e  900e              STR      r0,[sp,#0x38]
                  |L2.16|
;;;60     	
;;;61     	while(comGetChar(port, &ch))
000010  e0ee              B        |L2.496|
                  |L2.18|
;;;62     	{
;;;63     		/*依次获取串口缓冲区每个字节*/
;;;64     		analysisBuf[index % MAX_ANALYSIS_LEN] = ch ;
000012  f89d1034          LDRB     r1,[sp,#0x34]
000016  4620              MOV      r0,r4
000018  17e2              ASRS     r2,r4,#31
00001a  eb0452d2          ADD      r2,r4,r2,LSR #23
00001e  1252              ASRS     r2,r2,#9
000020  eba42242          SUB      r2,r4,r2,LSL #9
000024  4b7a              LDR      r3,|L2.528|
000026  5499              STRB     r1,[r3,r2]
;;;65     		index++;
000028  1c60              ADDS     r0,r4,#1
00002a  b284              UXTH     r4,r0
;;;66     		
;;;67     		if(index == 1)    /*前面3个是帧头*/
00002c  2c01              CMP      r4,#1
00002e  d105              BNE      |L2.60|
;;;68     		{
;;;69     			if(ch != 0xAA)
000030  f89d0034          LDRB     r0,[sp,#0x34]
000034  28aa              CMP      r0,#0xaa
000036  d0eb              BEQ      |L2.16|
;;;70     			{
;;;71     				index = 0 ;
000038  2400              MOVS     r4,#0
00003a  e0d9              B        |L2.496|
                  |L2.60|
;;;72     			}
;;;73     		}
;;;74     		else if(index == 2)/*前面3个是帧头*/
00003c  2c02              CMP      r4,#2
00003e  d105              BNE      |L2.76|
;;;75     		{
;;;76     			if(ch != 0xAA)
000040  f89d0034          LDRB     r0,[sp,#0x34]
000044  28aa              CMP      r0,#0xaa
000046  d0e3              BEQ      |L2.16|
;;;77     			{
;;;78     				index = 0 ;
000048  2400              MOVS     r4,#0
00004a  e0d1              B        |L2.496|
                  |L2.76|
;;;79     			}
;;;80     		}
;;;81     		else if(index == 3)/*前面3个是帧头*/
00004c  2c03              CMP      r4,#3
00004e  d105              BNE      |L2.92|
;;;82     		{
;;;83     			if(ch != 0xAA)
000050  f89d0034          LDRB     r0,[sp,#0x34]
000054  28aa              CMP      r0,#0xaa
000056  d0db              BEQ      |L2.16|
;;;84     			{
;;;85     				index = 0 ;
000058  2400              MOVS     r4,#0
00005a  e0c9              B        |L2.496|
                  |L2.92|
;;;86     			}
;;;87     		}
;;;88     		else if(index == 4)/*消息ID*/
00005c  2c04              CMP      r4,#4
00005e  d111              BNE      |L2.132|
;;;89     		{
;;;90     			routeAnalysis.msgID = ch;
000060  f89d0034          LDRB     r0,[sp,#0x34]
000064  496b              LDR      r1,|L2.532|
000066  7288              STRB     r0,[r1,#0xa]
;;;91     			if(ch != CMD_ID_SPEED && ch != CMD_ID_DISTANCE && ch != CMD_ID_ANGLE)
000068  f89d0034          LDRB     r0,[sp,#0x34]
00006c  2825              CMP      r0,#0x25
00006e  d0cf              BEQ      |L2.16|
000070  f89d0034          LDRB     r0,[sp,#0x34]
000074  2835              CMP      r0,#0x35
000076  d0cb              BEQ      |L2.16|
000078  f89d0034          LDRB     r0,[sp,#0x34]
00007c  2845              CMP      r0,#0x45
00007e  d0c7              BEQ      |L2.16|
;;;92     			{
;;;93     				index = 0 ;
000080  2400              MOVS     r4,#0
000082  e0b5              B        |L2.496|
                  |L2.132|
;;;94     			}
;;;95     		}
;;;96     		else if(index == 5)/*帧长度*/
000084  2c05              CMP      r4,#5
000086  d104              BNE      |L2.146|
;;;97     		{
;;;98     			routeAnalysis.len = ch;
000088  f89d0034          LDRB     r0,[sp,#0x34]
00008c  4961              LDR      r1,|L2.532|
00008e  8108              STRH     r0,[r1,#8]
000090  e0ae              B        |L2.496|
                  |L2.146|
;;;99     		}
;;;100    		else if(index >= (routeAnalysis.len+ 8))/*数据接收完毕（帧头帧尾4，检验2，ID 1，长度1）*/
000092  4860              LDR      r0,|L2.532|
000094  8900              LDRH     r0,[r0,#8]  ; routeAnalysis
000096  3008              ADDS     r0,r0,#8
000098  42a0              CMP      r0,r4
00009a  dcb9              BGT      |L2.16|
;;;101    		{
;;;102    			uint16_t calcChk = bsp_CalcChk(analysisBuf+3,index-6); /*计算校验数据，用于校验的数据不包括前面的3个帧头和后面的1个帧尾，2个校验字节*/
00009c  1fa0              SUBS     r0,r4,#6
00009e  b2c1              UXTB     r1,r0
0000a0  485b              LDR      r0,|L2.528|
0000a2  1cc0              ADDS     r0,r0,#3
0000a4  f7fffffe          BL       bsp_CalcChk
0000a8  900c              STR      r0,[sp,#0x30]
;;;103    			uint16_t rxChk   = analysisBuf[index-1-2] << 8 | analysisBuf[index-1-1];
0000aa  1ea0              SUBS     r0,r4,#2
0000ac  4958              LDR      r1,|L2.528|
0000ae  5c09              LDRB     r1,[r1,r0]
0000b0  1ee0              SUBS     r0,r4,#3
0000b2  4a57              LDR      r2,|L2.528|
0000b4  5c10              LDRB     r0,[r2,r0]
0000b6  ea412000          ORR      r0,r1,r0,LSL #8
0000ba  900b              STR      r0,[sp,#0x2c]
;;;104    			
;;;105    			if(analysisBuf[index-1] != 0x55 || calcChk != rxChk)
0000bc  1e60              SUBS     r0,r4,#1
0000be  4611              MOV      r1,r2
0000c0  5c08              LDRB     r0,[r1,r0]
0000c2  2855              CMP      r0,#0x55
0000c4  d103              BNE      |L2.206|
0000c6  e9dd100b          LDRD     r1,r0,[sp,#0x2c]
0000ca  4288              CMP      r0,r1
0000cc  d001              BEQ      |L2.210|
                  |L2.206|
;;;106    			{
;;;107    				index = 0 ;
0000ce  2400              MOVS     r4,#0
0000d0  e08d              B        |L2.494|
                  |L2.210|
;;;108    			}
;;;109    			else /*获得了正确的解析数据*/
;;;110    			{
;;;111    				if(routeAnalysis.msgID == CMD_ID_SPEED)
0000d2  4850              LDR      r0,|L2.532|
0000d4  7a80              LDRB     r0,[r0,#0xa]  ; routeAnalysis
0000d6  2825              CMP      r0,#0x25
0000d8  d17e              BNE      |L2.472|
;;;112    				{
;;;113    					int16_t linearVelocity  = analysisBuf[5]<<8 | analysisBuf[6];
0000da  484d              LDR      r0,|L2.528|
0000dc  7980              LDRB     r0,[r0,#6]  ; analysisBuf
0000de  494c              LDR      r1,|L2.528|
0000e0  7949              LDRB     r1,[r1,#5]  ; analysisBuf
0000e2  ea402001          ORR      r0,r0,r1,LSL #8
0000e6  fa0ff980          SXTH     r9,r0
;;;114    					int16_t angularVelocity = analysisBuf[7]<<8 | analysisBuf[8];
0000ea  4849              LDR      r0,|L2.528|
0000ec  7a00              LDRB     r0,[r0,#8]  ; analysisBuf
0000ee  4948              LDR      r1,|L2.528|
0000f0  79c9              LDRB     r1,[r1,#7]  ; analysisBuf
0000f2  ea402001          ORR      r0,r0,r1,LSL #8
0000f6  b200              SXTH     r0,r0
0000f8  900a              STR      r0,[sp,#0x28]
;;;115    					
;;;116    					/*计算出速度，单位MM/S */
;;;117    					int16_t leftVelocity = (int16_t)((0.5*(2*linearVelocity*0.001 - Deg2Rad(angularVelocity)*WHEEL_LENGTH))* 1000);
0000fa  980a              LDR      r0,[sp,#0x28]
0000fc  f7fffffe          BL       __aeabi_i2f
000100  4945              LDR      r1,|L2.536|
000102  9000              STR      r0,[sp,#0]
000104  f7fffffe          BL       __aeabi_fmul
000108  4944              LDR      r1,|L2.540|
00010a  9001              STR      r0,[sp,#4]
00010c  f7fffffe          BL       __aeabi_fdiv
000110  4680              MOV      r8,r0
000112  4943              LDR      r1,|L2.544|
000114  f7fffffe          BL       __aeabi_fmul
000118  4607              MOV      r7,r0
00011a  f7fffffe          BL       __aeabi_f2d
00011e  e9cd0104          STRD     r0,r1,[sp,#0x10]
000122  ea4f0049          LSL      r0,r9,#1
000126  f7fffffe          BL       __aeabi_i2d
00012a  4607              MOV      r7,r0
00012c  4a3d              LDR      r2,|L2.548|
00012e  4b3e              LDR      r3,|L2.552|
000130  f7fffffe          BL       __aeabi_dmul
000134  e9cd0102          STRD     r0,r1,[sp,#8]
000138  e9dd2304          LDRD     r2,r3,[sp,#0x10]
00013c  f7fffffe          BL       __aeabi_dsub
000140  2200              MOVS     r2,#0
000142  4b3a              LDR      r3,|L2.556|
000144  e9cd0106          STRD     r0,r1,[sp,#0x18]
000148  f7fffffe          BL       __aeabi_dmul
00014c  4605              MOV      r5,r0
00014e  2200              MOVS     r2,#0
000150  4b37              LDR      r3,|L2.560|
000152  f7fffffe          BL       __aeabi_dmul
000156  4682              MOV      r10,r0
000158  f7fffffe          BL       __aeabi_d2iz
00015c  b200              SXTH     r0,r0
00015e  9009              STR      r0,[sp,#0x24]
;;;118    					int16_t rightVelocity = (int16_t)((0.5*(2*linearVelocity*0.001 + Deg2Rad(angularVelocity)*WHEEL_LENGTH))* 1000);
000160  980a              LDR      r0,[sp,#0x28]
000162  f7fffffe          BL       __aeabi_i2f
000166  492c              LDR      r1,|L2.536|
000168  9000              STR      r0,[sp,#0]
00016a  f7fffffe          BL       __aeabi_fmul
00016e  492b              LDR      r1,|L2.540|
000170  9001              STR      r0,[sp,#4]
000172  f7fffffe          BL       __aeabi_fdiv
000176  4683              MOV      r11,r0
000178  4929              LDR      r1,|L2.544|
00017a  f7fffffe          BL       __aeabi_fmul
00017e  4682              MOV      r10,r0
000180  f7fffffe          BL       __aeabi_f2d
000184  e9cd0104          STRD     r0,r1,[sp,#0x10]
000188  ea4f0049          LSL      r0,r9,#1
00018c  f7fffffe          BL       __aeabi_i2d
000190  4682              MOV      r10,r0
000192  4a24              LDR      r2,|L2.548|
000194  4b24              LDR      r3,|L2.552|
000196  f7fffffe          BL       __aeabi_dmul
00019a  e9cd0102          STRD     r0,r1,[sp,#8]
00019e  e9dd2304          LDRD     r2,r3,[sp,#0x10]
0001a2  f7fffffe          BL       __aeabi_dadd
0001a6  4605              MOV      r5,r0
0001a8  2200              MOVS     r2,#0
0001aa  4b20              LDR      r3,|L2.556|
0001ac  f7fffffe          BL       __aeabi_dmul
0001b0  4607              MOV      r7,r0
0001b2  2200              MOVS     r2,#0
0001b4  4b1e              LDR      r3,|L2.560|
0001b6  f7fffffe          BL       __aeabi_dmul
0001ba  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001be  f7fffffe          BL       __aeabi_d2iz
0001c2  b200              SXTH     r0,r0
0001c4  9008              STR      r0,[sp,#0x20]
;;;119    					
;;;120    					/*设定速度*/
;;;121    					bsp_SetMotorSpeed(MotorLeft,bsp_MotorSpeedMM2Pulse(leftVelocity));
0001c6  9809              LDR      r0,[sp,#0x24]
0001c8  f7fffffe          BL       bsp_MotorSpeedMM2Pulse
0001cc  4605              MOV      r5,r0
0001ce  4629              MOV      r1,r5
0001d0  2000              MOVS     r0,#0
0001d2  f7fffffe          BL       bsp_SetMotorSpeed
;;;122    					bsp_SetMotorSpeed(MotorRight,bsp_MotorSpeedMM2Pulse(rightVelocity));
0001d6  e000              B        |L2.474|
                  |L2.472|
0001d8  e008              B        |L2.492|
                  |L2.474|
0001da  9808              LDR      r0,[sp,#0x20]
0001dc  f7fffffe          BL       bsp_MotorSpeedMM2Pulse
0001e0  4605              MOV      r5,r0
0001e2  4629              MOV      r1,r5
0001e4  2001              MOVS     r0,#1
0001e6  f7fffffe          BL       bsp_SetMotorSpeed
;;;123    				}
0001ea  bf00              NOP      
                  |L2.492|
;;;124    				
;;;125    				/*重新开始计数*/
;;;126    				index = 0 ;
0001ec  2400              MOVS     r4,#0
                  |L2.494|
;;;127    			}
;;;128    		}
0001ee  bf00              NOP      
                  |L2.496|
0001f0  a90d              ADD      r1,sp,#0x34           ;61
0001f2  980e              LDR      r0,[sp,#0x38]         ;61
0001f4  f7fffffe          BL       comGetChar
0001f8  2800              CMP      r0,#0                 ;61
0001fa  f47faf0a          BNE      |L2.18|
;;;129    	}
;;;130    	
;;;131    	
;;;132    	/*选定串口*/
;;;133    	port = COM1;
0001fe  900e              STR      r0,[sp,#0x38]
;;;134    	
;;;135    	/*选定串口*/
;;;136    	port = COM2;
000200  2001              MOVS     r0,#1
000202  900e              STR      r0,[sp,#0x38]
;;;137    	
;;;138    	/*选定串口*/
;;;139    	port = COM3;
000204  2002              MOVS     r0,#2
000206  900e              STR      r0,[sp,#0x38]
;;;140    }
000208  b00f              ADD      sp,sp,#0x3c
00020a  e8bd8ff0          POP      {r4-r11,pc}
;;;141    
                          ENDP

00020e  0000              DCW      0x0000
                  |L2.528|
                          DCD      analysisBuf
                  |L2.532|
                          DCD      routeAnalysis
                  |L2.536|
                          DCD      0x4048f5c3
                  |L2.540|
                          DCD      0x43340000
                  |L2.544|
                          DCD      0x3e6b851f
                  |L2.548|
                          DCD      0xd2f1a9fc
                  |L2.552|
                          DCD      0x3f50624d
                  |L2.556|
                          DCD      0x3fe00000
                  |L2.560|
                          DCD      0x408f4000

                          AREA ||i.bsp_FillReportFrame||, CODE, READONLY, ALIGN=1

                  bsp_FillReportFrame PROC
;;;182    */
;;;183    void bsp_FillReportFrame(void)
000000  4770              BX       lr
;;;184    {
;;;185    //	uint16_t chk = 0 ;
;;;186    //	uint32_t len = sizeof(reportFrame);/*帧大小*/
;;;187    //	uint8_t* src = (uint8_t*)&reportFrame;
;;;188    //	int16_t angle = bsp_AngleReadRaw();                     /*角度*/
;;;189    //	int32_t odometerL = 0;//bsp_encoderGetOdometer(MotorLeft);  /*里程计 左*/
;;;190    //	int32_t odometerR = 0;//bsp_encoderGetOdometer(MotorRight); /*里程计 右*/
;;;191    //	
;;;192    //	/*消除编译器警告*/
;;;193    //	UNUSED(reportFrame);
;;;194    //	
;;;195    //	/*大小端转换*/
;;;196    //	reportFrame.sof1 = 0xAA;                     //恒定为0xAA
;;;197    //	reportFrame.sof2 = 0xAA;                     //恒定为0xAA
;;;198    //	reportFrame.sof3 = 0xAA;                     //恒定为0xAA
;;;199    //	reportFrame.identifier = MIN_ID_ENVIRONMENT; //恒定为0x25
;;;200    //	reportFrame.size_of_payload_field = 0x1B+8; 
;;;201    //	reportFrame.left_wheel_pulse_count =  BEBufToUint32((uint8_t*)&odometerL);
;;;202    //	reportFrame.right_wheel_pulse_count = BEBufToUint32((uint8_t*)&odometerR);
;;;203    //	reportFrame.button_control_cmd = 0 ;
;;;204    //	reportFrame.distance_of_left_infrared = 0 ;
;;;205    //	reportFrame.distance_of_right_infrared = 0 ;
;;;206    //	reportFrame.distance_of_front_infrared = 0 ;
;;;207    //	reportFrame.angle_deg = BEBufToUint16((uint8_t*)&angle);
;;;208    //	reportFrame.adc_1 = 0 ;
;;;209    //	reportFrame.adc_2 = 0 ;
;;;210    //	reportFrame.adc_3 = 0 ;
;;;211    //	reportFrame.adc_4 = 0 ;
;;;212    //	reportFrame.acc_x = 0 ;
;;;213    //	reportFrame.acc_y = 0 ;
;;;214    //	reportFrame.acc_z = 0 ;
;;;215    //	reportFrame.obstacle_signal = 0 ;
;;;216    //	reportFrame.battery_level_soc = 0 ;
;;;217    //	reportFrame.charge_status = 0 ;
;;;218    //	reportFrame.checksum_msb = 0 ;
;;;219    //	reportFrame.checksum_lsb = 0 ;
;;;220    //	reportFrame.end_of_falg = 0x55 ;                  /*恒定0x55*/
;;;221    //	
;;;222    //	/*计算校验*/
;;;223    //	chk = bsp_CalcChk(src+3,len-6);
;;;224    //	reportFrame.checksum_msb = chk >> 8;
;;;225    //	reportFrame.checksum_lsb = chk & 0x00FF;
;;;226    }
;;;227    
                          ENDP


                          AREA ||i.bsp_SendReportFrame||, CODE, READONLY, ALIGN=2

                  bsp_SendReportFrame PROC
;;;153    */
;;;154    void bsp_SendReportFrame(void)
000000  b570              PUSH     {r4-r6,lr}
;;;155    {
;;;156    	
;;;157    	uint32_t len = sizeof(reportFrame);/*帧大小*/
000002  2553              MOVS     r5,#0x53
;;;158    	uint8_t* src = (uint8_t*)&reportFrame;
000004  4e08              LDR      r6,|L4.40|
;;;159    	uint32_t i = 0 ;
000006  2400              MOVS     r4,#0
;;;160    	
;;;161    	/*填充数据*/
;;;162    	bsp_FillReportFrame();
000008  f7fffffe          BL       bsp_FillReportFrame
;;;163    	
;;;164    	/*填充帧*/
;;;165    	for(i=0;i<len;i++)
00000c  bf00              NOP      
00000e  e003              B        |L4.24|
                  |L4.16|
;;;166    	{
;;;167    		buf[i] = src[i];
000010  5d30              LDRB     r0,[r6,r4]
000012  4906              LDR      r1,|L4.44|
000014  5508              STRB     r0,[r1,r4]
000016  1c64              ADDS     r4,r4,#1              ;165
                  |L4.24|
000018  42ac              CMP      r4,r5                 ;165
00001a  d3f9              BCC      |L4.16|
;;;168    	}
;;;169    	
;;;170    	comSendBuf(COM4,buf,len);
00001c  b2aa              UXTH     r2,r5
00001e  4903              LDR      r1,|L4.44|
000020  2003              MOVS     r0,#3
000022  f7fffffe          BL       comSendBuf
;;;171    	
;;;172    }
000026  bd70              POP      {r4-r6,pc}
;;;173    
                          ENDP

                  |L4.40|
                          DCD      reportFrame
                  |L4.44|
                          DCD      buf

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  buf
                          %        256
                  analysisBuf
                          %        512
                  routeAnalysis
                          %        12
                  reportFrame
                          %        83

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_communication.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_bsp_communication_c_buf____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___19_bsp_communication_c_buf____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_bsp_communication_c_buf____REVSH|
#line 128
|__asm___19_bsp_communication_c_buf____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
