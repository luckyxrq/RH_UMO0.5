; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_stflash.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_stflash.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app\inc -IF:\LuckyXRQ\CleanCar\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_stflash.crf ..\..\User\app\src\bsp_stflash.c]
                          THUMB

                          AREA ||i.bsp_FlashReadPage||, CODE, READONLY, ALIGN=1

                  bsp_FlashReadPage PROC
;;;64     */
;;;65     bool bsp_FlashReadPage(uint16_t pageIndex , uint16_t buf[] , uint16_t len)
000000  b530              PUSH     {r4,r5,lr}
;;;66     {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;67     	uint16_t i = 0 ;
000006  2100              MOVS     r1,#0
;;;68     	uint32_t addr = pageIndex*STM_PAGE_SIZE+STM32_FLASH_BASE ;
000008  f04f6000          MOV      r0,#0x8000000
00000c  eb0025c3          ADD      r5,r0,r3,LSL #11
;;;69     	
;;;70     	if(pageIndex > MAX_PAGE_INDEX)
000010  2bff              CMP      r3,#0xff
000012  dd01              BLE      |L1.24|
;;;71     	{
;;;72     		return false;
000014  2000              MOVS     r0,#0
                  |L1.22|
;;;73     	}
;;;74     	
;;;75         for(i=0;i<len;i++)
;;;76         {
;;;77             buf[i] = *(volatile uint16_t*)addr;
;;;78             addr += 2;
;;;79         }
;;;80     	
;;;81     	return true;
;;;82     }
000016  bd30              POP      {r4,r5,pc}
                  |L1.24|
000018  2100              MOVS     r1,#0                 ;75
00001a  e005              B        |L1.40|
                  |L1.28|
00001c  8828              LDRH     r0,[r5,#0]            ;77
00001e  f8240011          STRH     r0,[r4,r1,LSL #1]     ;77
000022  1cad              ADDS     r5,r5,#2              ;78
000024  1c48              ADDS     r0,r1,#1              ;75
000026  b281              UXTH     r1,r0                 ;75
                  |L1.40|
000028  4291              CMP      r1,r2                 ;75
00002a  dbf7              BLT      |L1.28|
00002c  2001              MOVS     r0,#1                 ;81
00002e  e7f2              B        |L1.22|
;;;83     
                          ENDP


                          AREA ||i.bsp_FlashWritePage||, CODE, READONLY, ALIGN=1

                  bsp_FlashWritePage PROC
;;;28     */
;;;29     bool bsp_FlashWritePage(uint16_t pageIndex , uint16_t buf[] , uint16_t len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;30     {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;31     	uint16_t i = 0 ;
00000a  2500              MOVS     r5,#0
;;;32     	uint32_t addr = pageIndex*STM_PAGE_SIZE+STM32_FLASH_BASE ;
00000c  f04f6000          MOV      r0,#0x8000000
000010  eb0028c4          ADD      r8,r0,r4,LSL #11
;;;33     	
;;;34     	if(pageIndex > MAX_PAGE_INDEX)
000014  2cff              CMP      r4,#0xff
000016  dd02              BLE      |L2.30|
;;;35     	{
;;;36     		return false;
000018  2000              MOVS     r0,#0
                  |L2.26|
;;;37     	}
;;;38     	
;;;39     	/*½âËø*/
;;;40     	FLASH_Unlock();
;;;41     	/*²Á³ýÒ³*/
;;;42     	FLASH_ErasePage(addr);
;;;43     	/*Ð´£¬Ã¿´Î±ØÐëÐ´°ë×Ö*/
;;;44     	for(i=0;i<len;i++)
;;;45     	{
;;;46     		FLASH_ProgramHalfWord(addr,buf[i]);
;;;47     		addr += 2;
;;;48     	}
;;;49     	/*ÉÏËø*/
;;;50     	FLASH_Lock();
;;;51     	
;;;52     	return true;
;;;53     }
00001a  e8bd81f0          POP      {r4-r8,pc}
                  |L2.30|
00001e  f7fffffe          BL       FLASH_Unlock
000022  4640              MOV      r0,r8                 ;42
000024  f7fffffe          BL       FLASH_ErasePage
000028  2500              MOVS     r5,#0                 ;44
00002a  e008              B        |L2.62|
                  |L2.44|
00002c  f8361015          LDRH     r1,[r6,r5,LSL #1]     ;46
000030  4640              MOV      r0,r8                 ;46
000032  f7fffffe          BL       FLASH_ProgramHalfWord
000036  f1080802          ADD      r8,r8,#2              ;47
00003a  1c68              ADDS     r0,r5,#1              ;44
00003c  b285              UXTH     r5,r0                 ;44
                  |L2.62|
00003e  42bd              CMP      r5,r7                 ;44
000040  dbf4              BLT      |L2.44|
000042  f7fffffe          BL       FLASH_Lock
000046  2001              MOVS     r0,#1                 ;52
000048  e7e7              B        |L2.26|
;;;54     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_stflash.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_stflash_c_3e1d20a0____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_bsp_stflash_c_3e1d20a0____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_stflash_c_3e1d20a0____REVSH|
#line 128
|__asm___13_bsp_stflash_c_3e1d20a0____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
