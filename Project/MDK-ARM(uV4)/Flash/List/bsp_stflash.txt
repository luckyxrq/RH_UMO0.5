; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_stflash.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_stflash.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app\inc -IF:\LuckyXRQ\CleanCar\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_stflash.crf ..\..\User\app\src\bsp_stflash.c]
                          THUMB

                          AREA ||i.bsp_FlashReadPage||, CODE, READONLY, ALIGN=1

                  bsp_FlashReadPage PROC
;;;67     */
;;;68     bool bsp_FlashReadPage(uint16_t pageIndex , uint16_t buf[] , uint16_t len)
000000  b530              PUSH     {r4,r5,lr}
;;;69     {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;70     	uint16_t i = 0 ;
000006  2100              MOVS     r1,#0
;;;71     	uint32_t addr = pageIndex*STM_PAGE_SIZE+STM32_FLASH_BASE ;
000008  f04f6000          MOV      r0,#0x8000000
00000c  eb0025c3          ADD      r5,r0,r3,LSL #11
;;;72     	
;;;73     	if(pageIndex > MAX_PAGE_INDEX)
000010  2bff              CMP      r3,#0xff
000012  dd01              BLE      |L1.24|
;;;74     	{
;;;75     		return false;
000014  2000              MOVS     r0,#0
                  |L1.22|
;;;76     	}
;;;77     	
;;;78         for(i=0;i<len;i++)
;;;79         {
;;;80             buf[i] = *(volatile uint16_t*)addr;
;;;81             addr += 2;
;;;82         }
;;;83     	
;;;84     	return true;
;;;85     }
000016  bd30              POP      {r4,r5,pc}
                  |L1.24|
000018  2100              MOVS     r1,#0                 ;78
00001a  e005              B        |L1.40|
                  |L1.28|
00001c  8828              LDRH     r0,[r5,#0]            ;80
00001e  f8240011          STRH     r0,[r4,r1,LSL #1]     ;80
000022  1cad              ADDS     r5,r5,#2              ;81
000024  1c48              ADDS     r0,r1,#1              ;78
000026  b281              UXTH     r1,r0                 ;78
                  |L1.40|
000028  4291              CMP      r1,r2                 ;78
00002a  dbf7              BLT      |L1.28|
00002c  2001              MOVS     r0,#1                 ;84
00002e  e7f2              B        |L1.22|
;;;86     
                          ENDP


                          AREA ||i.bsp_FlashWritePage||, CODE, READONLY, ALIGN=1

                  bsp_FlashWritePage PROC
;;;31     */
;;;32     bool bsp_FlashWritePage(uint16_t pageIndex , uint16_t buf[] , uint16_t len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;33     {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;34     	uint16_t i = 0 ;
00000a  2500              MOVS     r5,#0
;;;35     	uint32_t addr = pageIndex*STM_PAGE_SIZE+STM32_FLASH_BASE ;
00000c  f04f6000          MOV      r0,#0x8000000
000010  eb0028c4          ADD      r8,r0,r4,LSL #11
;;;36     	
;;;37     	if(pageIndex > MAX_PAGE_INDEX)
000014  2cff              CMP      r4,#0xff
000016  dd02              BLE      |L2.30|
;;;38     	{
;;;39     		return false;
000018  2000              MOVS     r0,#0
                  |L2.26|
;;;40     	}
;;;41     	
;;;42     	/*解锁*/
;;;43     	FLASH_Unlock();
;;;44     	/*擦除页*/
;;;45     	FLASH_ErasePage(addr);
;;;46     	/*写，每次必须写半字*/
;;;47     	for(i=0;i<len;i++)
;;;48     	{
;;;49     		FLASH_ProgramHalfWord(addr,buf[i]);
;;;50     		addr += 2;
;;;51     	}
;;;52     	/*上锁*/
;;;53     	FLASH_Lock();
;;;54     	
;;;55     	return true;
;;;56     }
00001a  e8bd81f0          POP      {r4-r8,pc}
                  |L2.30|
00001e  f7fffffe          BL       FLASH_Unlock
000022  4640              MOV      r0,r8                 ;45
000024  f7fffffe          BL       FLASH_ErasePage
000028  2500              MOVS     r5,#0                 ;47
00002a  e008              B        |L2.62|
                  |L2.44|
00002c  f8361015          LDRH     r1,[r6,r5,LSL #1]     ;49
000030  4640              MOV      r0,r8                 ;49
000032  f7fffffe          BL       FLASH_ProgramHalfWord
000036  f1080802          ADD      r8,r8,#2              ;50
00003a  1c68              ADDS     r0,r5,#1              ;47
00003c  b285              UXTH     r5,r0                 ;47
                  |L2.62|
00003e  42bd              CMP      r5,r7                 ;47
000040  dbf4              BLT      |L2.44|
000042  f7fffffe          BL       FLASH_Lock
000046  2001              MOVS     r0,#1                 ;55
000048  e7e7              B        |L2.26|
;;;57     
                          ENDP


                          AREA ||i.bsp_StFlashTest||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  bsp_StFlashTest PROC
;;;95     */
;;;96     void bsp_StFlashTest(uint16_t pageIndex)
000000  b570              PUSH     {r4-r6,lr}
;;;97     {
000002  4605              MOV      r5,r0
;;;98     	uint16_t i = 0 ;
000004  2400              MOVS     r4,#0
;;;99     
;;;100    	/*填充带保存数组*/
;;;101    	for(i=0;i<1024;i++)
000006  bf00              NOP      
000008  e004              B        |L3.20|
                  |L3.10|
;;;102    	{
;;;103    		flashBuf[i] = i;
00000a  4818              LDR      r0,|L3.108|
00000c  f8204014          STRH     r4,[r0,r4,LSL #1]
000010  1c60              ADDS     r0,r4,#1              ;101
000012  b284              UXTH     r4,r0                 ;101
                  |L3.20|
000014  f5b46f80          CMP      r4,#0x400             ;101
000018  dbf7              BLT      |L3.10|
;;;104    	}
;;;105    	
;;;106    	/*写入内部FLASH*/
;;;107    	bsp_FlashWritePage(pageIndex,flashBuf,1024);
00001a  f44f6280          MOV      r2,#0x400
00001e  4913              LDR      r1,|L3.108|
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       bsp_FlashWritePage
;;;108    	
;;;109    	/*清空数组，使用memset清空，无法把512后面的内容清空，原因不知*/
;;;110    	for(i=0;i<1024;i++)
000026  2400              MOVS     r4,#0
000028  e005              B        |L3.54|
                  |L3.42|
;;;111    	{
;;;112    		flashBuf[i] = 0;
00002a  2000              MOVS     r0,#0
00002c  490f              LDR      r1,|L3.108|
00002e  f8210014          STRH     r0,[r1,r4,LSL #1]
000032  1c60              ADDS     r0,r4,#1              ;110
000034  b284              UXTH     r4,r0                 ;110
                  |L3.54|
000036  f5b46f80          CMP      r4,#0x400             ;110
00003a  dbf6              BLT      |L3.42|
;;;113    	}
;;;114    
;;;115    	/*读取内部FLASH*/
;;;116    	bsp_FlashReadPage(pageIndex,flashBuf,1024);
00003c  f44f6280          MOV      r2,#0x400
000040  490a              LDR      r1,|L3.108|
000042  4628              MOV      r0,r5
000044  f7fffffe          BL       bsp_FlashReadPage
;;;117    	
;;;118    	/*打印信息*/
;;;119    	for(i=0;i<1024;i++)
000048  2400              MOVS     r4,#0
00004a  e008              B        |L3.94|
                  |L3.76|
;;;120    	{
;;;121    		DEBUG("flashBuf[%d]:%d\r\n",i,flashBuf[i]);
00004c  4807              LDR      r0,|L3.108|
00004e  f8302014          LDRH     r2,[r0,r4,LSL #1]
000052  4621              MOV      r1,r4
000054  a006              ADR      r0,|L3.112|
000056  f7fffffe          BL       __2printf
00005a  1c60              ADDS     r0,r4,#1              ;119
00005c  b284              UXTH     r4,r0                 ;119
                  |L3.94|
00005e  f5b46f80          CMP      r4,#0x400             ;119
000062  dbf3              BLT      |L3.76|
;;;122    	}
;;;123    	
;;;124    	DEBUG("*********************************************\r\n\r\n");
000064  a007              ADR      r0,|L3.132|
000066  f7fffffe          BL       __2printf
;;;125    }
00006a  bd70              POP      {r4-r6,pc}
;;;126    
                          ENDP

                  |L3.108|
                          DCD      flashBuf
                  |L3.112|
000070  666c6173          DCB      "flashBuf[%d]:%d\r\n",0
000074  68427566
000078  5b25645d
00007c  3a25640d
000080  0a00    
000082  00                DCB      0
000083  00                DCB      0
                  |L3.132|
000084  2a2a2a2a          DCB      "*********************************************\r\n\r\n",0
000088  2a2a2a2a
00008c  2a2a2a2a
000090  2a2a2a2a
000094  2a2a2a2a
000098  2a2a2a2a
00009c  2a2a2a2a
0000a0  2a2a2a2a
0000a4  2a2a2a2a
0000a8  2a2a2a2a
0000ac  2a2a2a2a
0000b0  2a0d0a0d
0000b4  0a00    
0000b6  00                DCB      0
0000b7  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  flashBuf
                          %        2048

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_stflash.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_stflash_c_3e1d20a0____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_bsp_stflash_c_3e1d20a0____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_stflash_c_3e1d20a0____REVSH|
#line 128
|__asm___13_bsp_stflash_c_3e1d20a0____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
