; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_cliffsw.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_cliffsw.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app\inc -IF:\LuckyXRQ\BAK\CleanCar\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_cliffsw.crf ..\..\User\app\src\bsp_CliffSW.c]
                          THUMB

                          AREA ||i.bsp_InitCliffSW||, CODE, READONLY, ALIGN=2

                  bsp_InitCliffSW PROC
;;;11     */
;;;12     void bsp_InitCliffSW(void)
000000  b500              PUSH     {lr}
;;;13     {
000002  b087              SUB      sp,sp,#0x1c
;;;14     	ADC_InitTypeDef ADC_InitStructure; 
;;;15     	GPIO_InitTypeDef GPIO_InitStructure;
;;;16     	
;;;17     	/*跳崖1*/
;;;18     	{
;;;19     		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA |RCC_APB2Periph_ADC2, ENABLE );
000004  2101              MOVS     r1,#1
000006  f2404004          MOV      r0,#0x404
00000a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;20      
;;;21     		/*设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M*/
;;;22     		RCC_ADCCLKConfig(RCC_PCLK2_Div6);
00000e  f44f4000          MOV      r0,#0x8000
000012  f7fffffe          BL       RCC_ADCCLKConfig
;;;23                       
;;;24     		/*配置引脚为模拟输入模式*/
;;;25     		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;
000016  2080              MOVS     r0,#0x80
000018  f8ad0004          STRH     r0,[sp,#4]
;;;26     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
00001c  2000              MOVS     r0,#0
00001e  f88d0007          STRB     r0,[sp,#7]
;;;27     		GPIO_Init(GPIOA, &GPIO_InitStructure);	
000022  a901              ADD      r1,sp,#4
000024  485f              LDR      r0,|L1.420|
000026  f7fffffe          BL       GPIO_Init
;;;28     
;;;29     		/*复位ADC*/
;;;30     		ADC_DeInit(ADC2);
00002a  485f              LDR      r0,|L1.424|
00002c  f7fffffe          BL       ADC_DeInit
;;;31     
;;;32     		ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
000030  2000              MOVS     r0,#0
000032  9002              STR      r0,[sp,#8]
;;;33     		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
000034  f88d000c          STRB     r0,[sp,#0xc]
;;;34     		ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
000038  f88d000d          STRB     r0,[sp,#0xd]
;;;35     		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
00003c  f44f2060          MOV      r0,#0xe0000
000040  9004              STR      r0,[sp,#0x10]
;;;36     		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
000042  2000              MOVS     r0,#0
000044  9005              STR      r0,[sp,#0x14]
;;;37     		ADC_InitStructure.ADC_NbrOfChannel = 1;
000046  2001              MOVS     r0,#1
000048  f88d0018          STRB     r0,[sp,#0x18]
;;;38     		ADC_Init(ADC2, &ADC_InitStructure);  
00004c  a902              ADD      r1,sp,#8
00004e  4856              LDR      r0,|L1.424|
000050  f7fffffe          BL       ADC_Init
;;;39     
;;;40     		/*使能指定的ADC*/
;;;41     		ADC_Cmd(ADC2, ENABLE);
000054  2101              MOVS     r1,#1
000056  4854              LDR      r0,|L1.424|
000058  f7fffffe          BL       ADC_Cmd
;;;42     		
;;;43     		/*使能复位校准 */
;;;44     		ADC_ResetCalibration(ADC2);
00005c  4852              LDR      r0,|L1.424|
00005e  f7fffffe          BL       ADC_ResetCalibration
;;;45     		 
;;;46     		/*等待复位校准结束*/
;;;47     		while(ADC_GetResetCalibrationStatus(ADC2));
000062  bf00              NOP      
                  |L1.100|
000064  4850              LDR      r0,|L1.424|
000066  f7fffffe          BL       ADC_GetResetCalibrationStatus
00006a  2800              CMP      r0,#0
00006c  d1fa              BNE      |L1.100|
;;;48     		
;;;49     		/*开启AD校准*/
;;;50     		ADC_StartCalibration(ADC2);
00006e  484e              LDR      r0,|L1.424|
000070  f7fffffe          BL       ADC_StartCalibration
;;;51     	 
;;;52     		/*等待校准结束*/
;;;53     		while(ADC_GetCalibrationStatus(ADC2));
000074  bf00              NOP      
                  |L1.118|
000076  484c              LDR      r0,|L1.424|
000078  f7fffffe          BL       ADC_GetCalibrationStatus
00007c  2800              CMP      r0,#0
00007e  d1fa              BNE      |L1.118|
;;;54     		
;;;55     		/*ADC,ADC通道,采样时间为239.5周期*/
;;;56     		ADC_RegularChannelConfig(ADC2, ADC_Channel_7, 1, ADC_SampleTime_239Cycles5 );
000080  2307              MOVS     r3,#7
000082  2201              MOVS     r2,#1
000084  4619              MOV      r1,r3
000086  4848              LDR      r0,|L1.424|
000088  f7fffffe          BL       ADC_RegularChannelConfig
;;;57     	}
;;;58     	
;;;59     	
;;;60     	/*跳崖2*/
;;;61     	{
;;;62     		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA |RCC_APB2Periph_ADC2, ENABLE );
00008c  2101              MOVS     r1,#1
00008e  f2404004          MOV      r0,#0x404
000092  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;63      
;;;64     		/*设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M*/
;;;65     		RCC_ADCCLKConfig(RCC_PCLK2_Div6);
000096  f44f4000          MOV      r0,#0x8000
00009a  f7fffffe          BL       RCC_ADCCLKConfig
;;;66                       
;;;67     		/*配置引脚为模拟输入模式*/
;;;68     		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
00009e  2040              MOVS     r0,#0x40
0000a0  f8ad0004          STRH     r0,[sp,#4]
;;;69     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
0000a4  2000              MOVS     r0,#0
0000a6  f88d0007          STRB     r0,[sp,#7]
;;;70     		GPIO_Init(GPIOA, &GPIO_InitStructure);	
0000aa  a901              ADD      r1,sp,#4
0000ac  483d              LDR      r0,|L1.420|
0000ae  f7fffffe          BL       GPIO_Init
;;;71     
;;;72     		/*复位ADC*/
;;;73     		ADC_DeInit(ADC2);
0000b2  483d              LDR      r0,|L1.424|
0000b4  f7fffffe          BL       ADC_DeInit
;;;74     
;;;75     		ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
0000b8  2000              MOVS     r0,#0
0000ba  9002              STR      r0,[sp,#8]
;;;76     		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
0000bc  f88d000c          STRB     r0,[sp,#0xc]
;;;77     		ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
0000c0  f88d000d          STRB     r0,[sp,#0xd]
;;;78     		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
0000c4  f44f2060          MOV      r0,#0xe0000
0000c8  9004              STR      r0,[sp,#0x10]
;;;79     		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
0000ca  2000              MOVS     r0,#0
0000cc  9005              STR      r0,[sp,#0x14]
;;;80     		ADC_InitStructure.ADC_NbrOfChannel = 1;
0000ce  2001              MOVS     r0,#1
0000d0  f88d0018          STRB     r0,[sp,#0x18]
;;;81     		ADC_Init(ADC2, &ADC_InitStructure);  
0000d4  a902              ADD      r1,sp,#8
0000d6  4834              LDR      r0,|L1.424|
0000d8  f7fffffe          BL       ADC_Init
;;;82     
;;;83     		/*使能指定的ADC*/
;;;84     		ADC_Cmd(ADC2, ENABLE);
0000dc  2101              MOVS     r1,#1
0000de  4832              LDR      r0,|L1.424|
0000e0  f7fffffe          BL       ADC_Cmd
;;;85     		
;;;86     		/*使能复位校准 */
;;;87     		ADC_ResetCalibration(ADC2);
0000e4  4830              LDR      r0,|L1.424|
0000e6  f7fffffe          BL       ADC_ResetCalibration
;;;88     		 
;;;89     		/*等待复位校准结束*/
;;;90     		while(ADC_GetResetCalibrationStatus(ADC2));
0000ea  bf00              NOP      
                  |L1.236|
0000ec  482e              LDR      r0,|L1.424|
0000ee  f7fffffe          BL       ADC_GetResetCalibrationStatus
0000f2  2800              CMP      r0,#0
0000f4  d1fa              BNE      |L1.236|
;;;91     		
;;;92     		/*开启AD校准*/
;;;93     		ADC_StartCalibration(ADC2);
0000f6  482c              LDR      r0,|L1.424|
0000f8  f7fffffe          BL       ADC_StartCalibration
;;;94     	 
;;;95     		/*等待校准结束*/
;;;96     		while(ADC_GetCalibrationStatus(ADC2));
0000fc  bf00              NOP      
                  |L1.254|
0000fe  482a              LDR      r0,|L1.424|
000100  f7fffffe          BL       ADC_GetCalibrationStatus
000104  2800              CMP      r0,#0
000106  d1fa              BNE      |L1.254|
;;;97     		
;;;98     		/*ADC,ADC通道,采样时间为239.5周期*/
;;;99     		ADC_RegularChannelConfig(ADC2, ADC_Channel_6, 1, ADC_SampleTime_239Cycles5 );
000108  2307              MOVS     r3,#7
00010a  2201              MOVS     r2,#1
00010c  2106              MOVS     r1,#6
00010e  4826              LDR      r0,|L1.424|
000110  f7fffffe          BL       ADC_RegularChannelConfig
;;;100    	}
;;;101    	
;;;102    	/*跳崖3*/
;;;103    	{
;;;104    		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF |RCC_APB2Periph_ADC3, ENABLE );
000114  2101              MOVS     r1,#1
000116  f2480080          MOV      r0,#0x8080
00011a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;105     
;;;106    		/*设置ADC分频因子6 72M/6=12,ADC最大时间不能超过14M*/
;;;107    		RCC_ADCCLKConfig(RCC_PCLK2_Div6);
00011e  f44f4000          MOV      r0,#0x8000
000122  f7fffffe          BL       RCC_ADCCLKConfig
;;;108                      
;;;109    		/*配置引脚为模拟输入模式*/
;;;110    		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
000126  f44f7000          MOV      r0,#0x200
00012a  f8ad0004          STRH     r0,[sp,#4]
;;;111    		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
00012e  2000              MOVS     r0,#0
000130  f88d0007          STRB     r0,[sp,#7]
;;;112    		GPIO_Init(GPIOF, &GPIO_InitStructure);	
000134  a901              ADD      r1,sp,#4
000136  481d              LDR      r0,|L1.428|
000138  f7fffffe          BL       GPIO_Init
;;;113    
;;;114    		/*复位ADC*/
;;;115    		ADC_DeInit(ADC3);
00013c  481c              LDR      r0,|L1.432|
00013e  f7fffffe          BL       ADC_DeInit
;;;116    
;;;117    		ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
000142  2000              MOVS     r0,#0
000144  9002              STR      r0,[sp,#8]
;;;118    		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
000146  f88d000c          STRB     r0,[sp,#0xc]
;;;119    		ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
00014a  f88d000d          STRB     r0,[sp,#0xd]
;;;120    		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
00014e  f44f2060          MOV      r0,#0xe0000
000152  9004              STR      r0,[sp,#0x10]
;;;121    		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
000154  2000              MOVS     r0,#0
000156  9005              STR      r0,[sp,#0x14]
;;;122    		ADC_InitStructure.ADC_NbrOfChannel = 1;
000158  2001              MOVS     r0,#1
00015a  f88d0018          STRB     r0,[sp,#0x18]
;;;123    		ADC_Init(ADC3, &ADC_InitStructure);  
00015e  a902              ADD      r1,sp,#8
000160  4813              LDR      r0,|L1.432|
000162  f7fffffe          BL       ADC_Init
;;;124    
;;;125    		/*使能指定的ADC*/
;;;126    		ADC_Cmd(ADC3, ENABLE);
000166  2101              MOVS     r1,#1
000168  4811              LDR      r0,|L1.432|
00016a  f7fffffe          BL       ADC_Cmd
;;;127    		
;;;128    		/*使能复位校准 */
;;;129    		ADC_ResetCalibration(ADC3);
00016e  4810              LDR      r0,|L1.432|
000170  f7fffffe          BL       ADC_ResetCalibration
;;;130    		 
;;;131    		/*等待复位校准结束*/
;;;132    		while(ADC_GetResetCalibrationStatus(ADC3));
000174  bf00              NOP      
                  |L1.374|
000176  480e              LDR      r0,|L1.432|
000178  f7fffffe          BL       ADC_GetResetCalibrationStatus
00017c  2800              CMP      r0,#0
00017e  d1fa              BNE      |L1.374|
;;;133    		
;;;134    		/*开启AD校准*/
;;;135    		ADC_StartCalibration(ADC3);
000180  480b              LDR      r0,|L1.432|
000182  f7fffffe          BL       ADC_StartCalibration
;;;136    	 
;;;137    		/*等待校准结束*/
;;;138    		while(ADC_GetCalibrationStatus(ADC3));
000186  bf00              NOP      
                  |L1.392|
000188  4809              LDR      r0,|L1.432|
00018a  f7fffffe          BL       ADC_GetCalibrationStatus
00018e  2800              CMP      r0,#0
000190  d1fa              BNE      |L1.392|
;;;139    		
;;;140    		/*ADC,ADC通道,采样时间为239.5周期*/
;;;141    		ADC_RegularChannelConfig(ADC3, ADC_Channel_7, 1, ADC_SampleTime_239Cycles5 );
000192  2307              MOVS     r3,#7
000194  2201              MOVS     r2,#1
000196  4619              MOV      r1,r3
000198  4805              LDR      r0,|L1.432|
00019a  f7fffffe          BL       ADC_RegularChannelConfig
;;;142    	}	
;;;143    
;;;144    }
00019e  b007              ADD      sp,sp,#0x1c
0001a0  bd00              POP      {pc}
;;;145    
                          ENDP

0001a2  0000              DCW      0x0000
                  |L1.420|
                          DCD      0x40010800
                  |L1.424|
                          DCD      0x40012800
                  |L1.428|
                          DCD      0x40011c00
                  |L1.432|
                          DCD      0x40013c00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_CliffSW.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_CliffSW_c_4df603ba____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_bsp_CliffSW_c_4df603ba____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_CliffSW_c_4df603ba____REVSH|
#line 128
|__asm___13_bsp_CliffSW_c_4df603ba____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
