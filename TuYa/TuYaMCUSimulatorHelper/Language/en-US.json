{
	"form1": "TuyaMCUSimulatorHelper",
	"bt_Browse": "Browse",
	"bt_openPort": "Open",
	"bt_start": "Start",
	"bt_memQuery": "Query",
	"bt_wifi_rssi": "Query rssi",
	"bt_wifiTest": "WIFI Function Test",
	"bt_getSysTime": "Get System Time",
	"bt_getLocalTime": "Get Local Time",
	"bt_openWeatherFun": "Open weather function",
	"bt_resetModel": "reset",
	"bt_apMode": "AP mode",
	"bt_ezMode": "EZ mode",
	"bt_wifiRssi": "Query rssi",
	"bt_clearCnt": "clear",
	"bt_cmdLoadNext": 0.0,
	"bt_Addcmd": "Add cmd",
	"bt_setting": "Setting",
	"bt_clearList": "Clear cmd",
	"bt_reportCmd": "report cmd",
	"bt_saveData": "Save",
	"bt_clearData": "Clear",
	"bt_stopHeart": "stop heart",
	"bt_flow_start": "Turn on stream service functionality",
	"bt_flow_startTrans": "Enable streaming service data transfer",
	"bt_flow_trans": "Stream Data Transfer",
	"bt_flow_end": "End stream data transfer",
	"lb_currentVer": "CurrentVer:",
	"lb_upgradeVer": "CurrentVer:",
	"lb_portName": "Name:",
	"lb_memoryInfo": "unknown...",
	"lb_wifiStatus": "module state unkown...",
	"lb_rssi": "...",
	"lb_led": "LED:",
	"lb_reset": "RESET:",
	"lb_dpCmd": "DP CMD",
	"lb_cmdList": "cmd list",
	"tabPage1": "Query",
	"tabPage2": "Report",
	"tabPage3": "Stream service",
	"gb_net": "network mode",
	"gb_port": "Serial port",
	"gb_schema": "Schema path(please import corresponding file)",
	"gb_setting": "Setting",
	"gb_model": "Operating modes of the module",
	"gb_report": "report",
	"gb_gpio": "gpio",
	"gb_memory": "memory",
	"gb_modelStatus": "modelStatus",
	"gb_rssi": "rssi",
	"ra_workMode1": "cooperate with MCU",
	"ra_workMode2": "module self process",
	"ra_reportAsyn": "asyn",
	"ra_reportSync": "sync",
	"ra_mode1": "Default",
	"ra_mode2": "Low power",
	"ra_mode3": "Special",
	"portOpen": "Open",
	"portClose": "Close",
	"portErrOp": "ERR: Port Operate failed",
	"portWnName": "Please select port name!",
	"portWnBuad": "Please select port baud!",
	"workStart": "Start",
	"workStop": "Stop",
	"workWn": "Busy, please close serial port after stop working!",
	"schemaWn": "The import file is an invalid schema file!",
	"schemaErr": "schema file analysis failed!",
	"stopSend": "Stop sending",
	"startSend": "Start sending",
	"wnNumber...": "Warning: The number ",
	"dataIg...": "Data invalid: The number ",
	"dataErr...": "Data err: The number ",
	"errMsg": "error message!",
	"dp...": " dp point(",
	"onlyReport": ")data type is reportable only, no need to issue!\r\n\r\n",
	"errNumber...": "Data err: The number ",
	"dataType": ")data type is inconformity!\r\n",
	"dataLen": ")length is inconformity!\r\n",
	"dataEmpty": ")value is empty!\r\n",
	"dataEnum": ")enum value is not exist!\r\n",
	"dataTypeUnknown": ")unknown data type!\r\n",
	"rtTX": "return data TX：\r\n",
	"cmRtTX": "command return data TX：\r\n",
	"rvIgData": "recieve illegal data:\r\n",
	"rvTimeout": "Recieve timeout, data error:\r\n",
	"dataIg": "Recieve timeout, data illegal:\r\n",
	"rvData": "Recieve data RX:\r\n",
	"dataCkErr": "Data error, checksum error!\r\n",
	"heartLenErr": "data error: heartbeat data length inconformity!\r\n\r\n",
	"firstHeart": "The first heartbeat return data TX:\r\n",
	"heart": "heartbeat return data TX:\r\n",
	"pdLen": "data error: Product information query data frame length does not conform to protocol!\r\n\r\n",
	"sendPd": "Send product information(",
	"rqMCUMode": "data error: The data frame length of the module operation mode that inquires the MCU setting does not conform to the protocol!\r\n\r\n",
	"rpWifiModeCo": "Report the WiFi module working mode set by MCU (MCU and module cooperation) TX:\r\n",
	"rpWifiModeSf": "Report the WiFi module working mode set by MCU (module self processing) TX:\r\n",
	"rpWifiModeLen": "Data error: reporting WIFI working status. Data frame length does not conform to protocol!\r\n",
	"state0": "0:EZ Configuration state....",
	"state1": "1:AP Configuration state....",
	"state2": "2:WIFI configuration success, but not connected to the router...",
	"state3": "3:WIFI configuration success, and already connected to the router....",
	"state4": "4:Connected to a router and connected to the cloud....",
	"state5": "5:WIFI The device is in a state of low power consumption....",
	"stateRpTX": "Status report - send data TX:\r\n",
	"rtRpState": "Reporting WIFI working status returns data TX:\r\n",
	"noNeedRp": "Reminder: the module works in the module itself, and does not need to report WIFI status!\r\n\r\n",
	"rstLen": "Data error: resetting WIFI received data frame length does not conform to protocol!\r\n\r\n",
	"rstOK": "Reset the WIFI to receive module response and reset WIFI successfully!\r\n\r\n",
	"rstCsLen": "Data error: reset the WIFI- selection mode. The received data frame length is not consistent with the protocol!\r\n\r\n",
	"rstCsOK": "Reset the WIFI- selection mode, receive module response, reset WIFI, and succeed RX!\r\n\r\n",
	"rqLen": "Data error: the data frame received by the status query does not conform to the protocol!\r\n\r\n",
	"ugLen": "Data error: the data frame received by the upgrade query does not match the protocol!\r\n\r\n",
	"ugNotSport": "Reminder: MCU upgrade is not supported!\r\n\r\n",
	"ugNotReady": "Reminder: the module is not ready!\r\n\r\n",
	"ugRqFailed": "Reminder: cloud upgrade information query failed!\r\n\r\n",
	"ugNoNeed": "Reminder: no need to upgrade (cloud free version)!\r\n\r\n",
	"ugNeed": "Reminder: need to upgrade, wait for module to launch upgrade operation!\r\n\r\n",
	"ugRvLen": "Data error: start upgrade. The received data frame length does not match the protocol!\r\n\r\n",
	"ugStart": "Start the upgrade and return the data TX:\r\n",
	"ugRv": "Upgrade returns data TX:\r\n",
	"sysTimeLen": "Data error: access to system time received data frame length does not conform to protocol!\r\n\r\n",
	"sysTimeFailed": "ERR:Get system time failed!\r\n\r\n",
	"sysTime": "System time:",
	"year": "year",
	"month": "month",
	"day": "day",
	"hour": "hour",
	"minute": "minute",
	"second": "second",
	"lcTimeLen": "Data error: access to local time received data frame length does not meet the agreement!\r\n\r\n",
	"lcTimeFailed": "ERR:Failed to get local time!\r\n\r\n",
	"monday": "Monday",
	"tuesday": "Tuesday",
	"wednesday": "Wednesday",
	"thursday": "Thursday",
	"friday": "Friday",
	"saturday": "Saturday",
	"sunday": "Sunday",
	"lcTime": "Local time:",
	"enterLen": "Data error: the length of data frame received during production test does not conform to protocol!\r\n\r\n",
	"enterRt": "Enter the production test and return the data TX:\r\n",
	"wifiTestLen": "Data error: the data frame received by the WIFI functional test does not conform to the protocol!\r\n\r\n",
	"wifiTestFailed": "Reminder: the WIFI functionality test failed!\r\n\r\n",
	"wifiTestRssi": "WIFI functional test success signal strength is ",
	"memoryLen": "Data error: access module memory received data frame length does not comply with the agreement!\r\n\r\n",
	"memoryRest": "Module residual memory ",
	"byte": "byte",
	"rfOpen": "Open RF",
	"rfOK": "RF open successfully!\r\n\r\n",
	"rfFailed": "RF close successfully!\r\n\r\n",
	"rfClose": "Close RF",
	"stRpLen": "Data error: the data frame received by statistical class data does not conform to the protocol!\r\n\r\n",
	"stRpOK": "Receive WIFI module response, statistics class data reported successfully!\r\n\r\n",
	"stRpFailed": "ERR: statistics data reporting module failed to return!\r\n\r\n",
	"wtLen": "Data error: the length of the received data frame does not conform to the protocol!\r\n\r\n",
	"wtRvFailed": "Data error: failed to receive weather data!\r\n\r\n",
	"wtRvEmpty": "The data is empty!\r\n\r\n",
	"wtIs": "Weather data:\r\n",
	"wtType": "The weather data types are inconsistent!\r\n",
	"wtRt": "The weather data returns data TX:\r\n",
	"syncRpLen": "Data error: cmd sync report received data frame length does not conform the protocal\r\n\r\n",
	"syncRpFailed": "Data error: cmd sync report return failed\r\n\r\n",
	"syncRpOK": "cmd sync report success!\r\n\r\n",
	"rssiLen": "Data error: the data frame received by rssi data does not conform to the protocol\r\n\r\n",
	"rssiFailed": "Data error: get rssi data failed!\r\n\r\n",
	"dataInvaild": "Data error: invalid request!\r\n\r\n",
	"ackTimeout": "ERR:Receive acknowledge timeout, stop sending\r\n",
	"stateRpFailed": "ERR:State report failed....\r\n",
	"stateRpRe": "State report Resend:\r\n",
	"cmdRpTX": "Command report - send data TX:\r\n",
	"cmdRp": "Command Report",
	"plsAddCmd": "Please add commands to be reported!",
	"plsInputCmd": "Please enter the hexadecimal command in the box",
	"plsInputLess": "Please enter the command in the next box, the length is less than ",
	"strCmd": " cmd",
	"plsInput1B": "Please enter the 1 bit hexadecimal in the next box",
	"plsInput2B": "Please enter the 2 bit hexadecimal in the next box",
	"plsInput4B": "Please enter the 4 bit hexadecimal in the next box",
	"inputLen": "The length of the command does not match the protocol",
	"improveCmd": "Please improve the order to be issued!",
	"plsInputEff": "Please type a valid HEX character combination(\"0-9\",\"A-F\",\"a-f\",\" \")! One space is blank between each two characters",
	"plsBelow": "Please in the box",
	"plsImportFile": "Import the schema file for the debugging device!",
	"plsInputLedIO": "Please enter a valid LED GPIO!",
	"plsInputRestIO": "Please enter a valid RESET GPIO!",
	"enterAPTX": "Enter_AP-send dataTX：\r\n",
	"enterEZTX": "Enter_EZ-send dataTX：\r\n",
	"ugRqTX": "Upgrade query - send dataTX:\r\n",
	"rqSysTimeTX": "Get system time query - send dataTX:\r\n",
	"rqLcTimeTX": "Get local time query - send data TX:\r\n",
	"wifiTestTX": "wifi performance test - send data TX:\r\n",
	"rqMemoryTX": "Module memory query - send data TX:\r\n",
	"openRfTX": "Open RF - send data TX:\r\n",
	"closeRfTX": "Close RF - send data TX:\r\n",
	"plsCsWtPa": "The list is empty, Please select weather parameters!\r\n",
	"openingWtTX": "Opening weather function, TX:\r\n",
	"syncTimeout": "Data Error：cmd sync report timeout(6s)!\r\n\r\n",
	"rstTX": "Reset Wifi- send data TX:\r\n",
	"notConnect": "Not connected to the WiFi module....",
	"lanWarning": "Serial port opened or the system is running, \r\nthe new language will take effect after restart!",
	"stopHeartLen": "Data error: The stopHeart cmd received data frame length does not conform to the protocol!",
	"stopHeartOK": "stop heart cmd success!",
	"msg_start_flow_rsp_len_err": "Turn on the stream service function to receive the length exception!\r\n",
	"msg_start_flow_succ": "Turn on stream service function successfully!\r\n",
	"msg_start_flow_fail": "Turn on stream service function failed!\r\n",
	"msg_start_flowTrans_rsp_len_err": "Turn on stream data transmission receiving length exception!\r\n",
	"msg_start_flowTrans_succ": "Turn on streaming data transmission success!\r\n",
	"msg_start_flowTrans_fail": "Turn on streaming data transmission failure!\r\n",
	"msg_flowsvr_not_run": "Streaming data transmission is not turned on!\r\n",
	"msg_flowtrans_conn_fail": "Streaming data transmission is not connected successfully!\r\n",
	"msg_flowtrans_timeout": "Streaming data push timeout!\r\n",
	"msg_end_flowtrans_succ": "End streaming data transmission success!\r\n",
	"msg_end_flowtrans_fail": "End streaming data transmission failed!\r\n",
	"msg_end_flow_rsp_len_err": "End of stream service function receive length exception!\r\n",
	"msg_flow_send_succ": "Streaming data push success!\r\n",
	"msg_flow_send_fail": "Streaming data failed to push!\r\n"
}