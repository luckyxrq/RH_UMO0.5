{"MainForm":"TuYaCloudSerialPortHelper","bt_Browse":"Browse","bt_openPort":"Open","bt_start":"Start","bt_getStatus":"State Query","bt_enterTest":"Enter production test","bt_openWeatherFun":"Open Weather Function","bt_reportState":"Report WiFi status","bt_upgradeStart":"Upgrade","bt_upgradeBrowse":"Browse","bt_cmdNext":0.0,"bt_clearCnt":"Clear","bt_addCmd":"Add Cmd","bt_setting":"Setting","bt_clearList":"Clear Cmd","bt_comSend":"Cmd Issue","bt_saveData":"Save","bt_clearData":"Clear","ra_upgradeFalse":"No upgrade","ra_upgradeTrue":"Upgrade","ra_workMode1":"MCU and module cooperate","ra_workMode2":"MCU self process","lb_version":"version:","lb_dpCmd":"DP cmd","lb_cmdList":"list:","lb_port":"Port:","gb_setting":"Setting","gb_schema":"Schema path (please import corresponding file)","gb_model":"Operating mode of Module","gb_port":"Port","gb_workStatus":"Work status (self process mode, MCU no need to implement)","gb_upgrade":"MCU Upgarde","gb_upFileStatus":"Firmware status","gb_upFileInfo":"Fimware information","gb_gpio":"GPIO Setting","tp_common":"Common","tp_issue":"Issue","portOpen":"Open","portClose":"Close","portErrOp":"ERR: Serial port operation failed!","portWnName":"Please select the serial number!","portWnBuad":"Please select the baud rate!","workStart":"Start","workStop":"Stop","workWn":"Software is debugging, please stop debugging and then close the serial port!","schemaWn":"Loaded file is not a valid schema file!","schemaErr":"Analysis of the schema file failed!","stopSend":"stop Sending","startSend":"start Sending","wnNumber...":"Warning:No.","dataIg...":"Data illegal:No.","dataErr...":"Data error:No.","errMsg":"Error Message!","dp...":"dp point (","onlyReport":") The data type is reported only, no need to issue！\r\n","errNumber...":"Data error: the first","dataType":") The data type does not meet the definition!\r\n","dataLen":") The data length does not meet the agreement!\r\n","dataEmpty":") Data is empty!\r\n","dataEnum":") Data specified enumeration value does not exist in the device definition!\r\n","dataTypeUnknown":"Unknown data type!\r\n","rtTX":"Return data TX:\r\n","cmRtTX":"Command to return data TX:\r\n","rvIgData":"Received illegal data:\r\n","rvTimeout":"Receive timeout data error:\r\n","dataIg":"Data error: illegal data!\r\n","rvData":"Received data RX:\r\n","dataCkErr":"Data error: and check error!\r\n","heartLenErr":"Data error: heartbeat data frame length does not meet the agreement!\r\n\r\n","heartErr":"Data error: data returned by heartbeat does not meet the agreement!\r\n\r\n","firstHeart":"First heartbeat return data TX:\r\n","followHeart":"Follow-up heartbeat return TX:\r\n","heart":"Heartbeat return data TX:\r\n","heartSend":"Heartbeat detection - Send data:\r\n","heartTimeout":"ERR: Heartbeat detection timeout!\r\n","pdLen":"Data error: product information query data frame length does not meet the agreement!\r\n\r\n","sendPd":"Send product information data (","dataLenErr":"Data error: the length of the data frame returned does not meet the agreement!\r\n\r\n","pdtKeyErr":"ERR: MCU does not match the imported device (Product key is different)!\r\n","queryPdtSend":"Query Product Information - Send Data:\r\n","queryPdtTimeout":"ERR: Query product information timeout!\r\n","queryWorkState":"Query module working mode - send data:\r\n","queryWorkStateErr":"ERR: query module working mode timeout!\r\n","reportWorkStateErr":"ERR: Report wifi module working state timeout!\r\n","mcuCoo":"Module working mode: MCU and module cooperate to deal with\r\n\r\n","mcuNotMatch":"ERR: The working mode of the module set by the MCU is different from the default working mode of your debugging assistant!\r\n\r\n","mcuNoMatchMode":"Data error: the data returned does not meet the agreement, there is no matching mode of operation!\r\n\r\n","workModeSelf":"Module working mode: module self-processing\r\n","wifiLed":"WIFI status indication GPIO serial number:","wifiReset":"WIFI reset button GPIO serial number:","mcuAck":"Report wifi work status, received MCU response!\r\n\r\n","resetLenErr":"Data error: Reset WIFI received data frame length does not meet the agreement!\r\n\r\n","resetSelfErr":"ERR: The module operating mode you set is the module self-processing mode, and it is not necessary to implement this protocol\r\n\r\n","wifiStateChange":"Module wifi status change: \r\nSmartconfig configuration status -> ap configuration status \r\nap configuration status -> Smartconfig configuration status \r\nWork status (Smartconfig configuration) -> Smartconfig configuration status\r\nWork status Configuration) -> Smartconfig configuration status\r\n","enterSmartConfig":"Module into the smartconifg configuration mode\r\n","enterApConfig":"The module enters AP configuration mode\r\n","mcuAck2":"Received MCU response, the data issued successfully!\r\n\r\n","upQueryLenErr":"Data error: upgrade query received data frame length does not meet the agreement!\r\n\r\n","mcuAlreadyNew":"Reminder: MCU is the latest firmware!\r\n","warning":"Reminder","upWarnVersion":"Reminder: Please fill in the MCU upgrade firmware version number (x.x.x)!\r\n","upWarnFile":"Reminder: Please select the appropriate firmware to upgrade the MCU!\r\n","upWarnNew":"Reminder: a new firmware, you can upgrade!\r\n","upQueryReturn":"Upgrade query returns data:\r\n","upStart":"Start the upgrade:\r\n","getLcLenErr":"Data error: Get the data frame length of Green received does not meet the agreement!\r\n\r\n","getLcReturn":"Get Green time return data (","year":"year","month":"month","day":"day","hour":"hour","minute":"minute","second":"second","rfTestLen":"Data error: RF switch operation received data frame length does not meet the agreement!\r\n\r\n","rfClosed":"Turn off RF success!\r\n","rfOpened":"Open RF success!\r\n","rfSwitchReturn":"RF switch operation to return data:\r\n","sysTimeLen":"Data error: get the system time received data frame length does not meet the agreement!\r\n","monday":"monday","tuesday":"tuesday","wednesday":"wednesday","thursday":"thursday","friday":"friday","saturday":"saturday","sunday":"sunday","lcTimeReturn":"Get system time to return data (","enterLen":"Data error: Enter the measured data frame length does not meet the agreement!\r\n\r\n","enterTest":"MCU into production test mode!\r\n\r\n","enterTestSend":"Check the MCU to enter the test mode - send data:\r\n","wifiTestLen":"Data error: WIFI functionality test received data frame length does not meet the agreement!\r\n\r\n","wifiScan":"wifi functional test scan tuya_mdev_test success, return data:\r\n","memeryRrr":"Data error: module memory query received data frame length does not meet the agreement!\r\n\r\n","memeryReturn":"Module memory query success, the memory is 11136 bytes, the data is returned:\r\n","wtLen":"Data error: Open the weather to receive the data frame length does not meet the agreement!\r\n\r\n","issuWtLen":"Data error: the weather data received the data frame length does not meet the agreement!\r\n\r\n","wtData":"Weather data:\r\n","temperature":"temperature:","humidity":"humidity:","wtReturn":"Weather data return data:\r\n","dataInvaild":"Data error: invalid request!\r\n\r\n","reportWorkState":"Report Module Working Status - Send Data:\r\n","vaildVersion":"Please enter a valid version number (x.x.x)!","upChooseFile":"Please select the file needed to upgrade!","upErr1":"The file name of your selected upgrade file does not contain the version number of the upgrade file you have entered. Please check your upgrade file version and add the version number to the upgrade file name!","upErr2":"Current MCU software version is the latest version, no need to upgrade!","upStartSend":"Upgrade start - send data:\r\n","upSend":"Upgrade send data:\r\n","upFailedAck":"Upgrade failed: response timeout!\r\n","upFailed":"Upgrade failed","cmdIssue":"Order issued","cmdReport":"Order report","issueSend":"Command issued - send data:\r\n","plsAddCmd":"Please add the command to be issued!","plsInputCmd":"Please enter the hexadecimal command in the box below","plsInputLess":"Please enter the length below the box below","strCmd":"String command","upTimeout":"Retransmission overtime:\r\n","upEnd":"Upgrade is successful, send the end package:\r\n","plsInput1B":"Please enter a hexadecimal command in the box below","plsInput2B":"Please enter 2 hexadecimal command in the box below","plsInput4B":"Please enter 4 hexadecimal command in the box below","inputLen":"May lose order length does not meet the agreement","improveCmd":"Please perfect the order to be issued!","plsInputEff":"Type a valid HEX character combination (\"0-9 \", \"A-F \", \"a-f \", \"\")! A space between every two characters","plsBelow":"Please next box","stateQuerySend":"Status Inquiry - Send Data:\r\n","dpImperfect":"WANRING: DP reported incomplete, please report all DP's data!\r\n","dpAll":"WANRING: status query timeout, please report all DP's data!\r\n","rqMCUMode":"Data error: Check the data frame length of the module working mode set by the MCU does not meet the agreement!\r\n\r\n","rpWifiModeCo":"Reported the MCU set wifi module working mode (MCU and module with the processing) TX:\r\n","rpWifiModeSf":"Reported the MCU set wifi module working mode (module self-processing) TX:\r\n","rpWifiModeLen":"Data error: report WIFI work status data frame length does not meet the agreement!\r\n","netMode0":"The default distribution network","netMode1":"Low power consumption","netMode2":"Special distribution network","netMode3":"unknown","netFunc":"Distribution network:","state0":"0: EZ configuration status ....","state1":"1: AP configuration status ....","state2":"2: WIFI is configured successfully but not connected to the router ....","state3":"3: WIFI configuration is successful and connected to the router ....","state4":"4: connected to the router and connected to the cloud ....","state5":"5: WIFI device is in low power state ....","upTimeOut":"ERR: upgrade start waiting for reply overtime!\r\n","upReSend":"Upgrade Startup - Resend Data:\r\n","openWt":"Opening weather feature:\r\n","lanWarning":"Serial port is open or the system is running, the new language to take effect after the restart!"}