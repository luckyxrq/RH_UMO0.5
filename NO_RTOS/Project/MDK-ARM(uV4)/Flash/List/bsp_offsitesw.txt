; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_offsitesw.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_offsitesw.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I..\..\..\User\angle\gan_rui_Angle -I..\..\User\angle\yuan_zi_Angle -I..\..\User\dx8\inc -IF:\LuckyXRQ\CleanCar\NO_RTOS\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_offsitesw.crf ..\..\User\app\src\bsp_OffSiteSW.c]
                          THUMB

                          AREA ||i.bsp_InitOffSiteSW||, CODE, READONLY, ALIGN=2

                  bsp_InitOffSiteSW PROC
;;;22     */
;;;23     void bsp_InitOffSiteSW(void)
000000  b508              PUSH     {r3,lr}
;;;24     {
;;;25     
;;;26     	GPIO_InitTypeDef GPIO_InitStructure;
;;;27     
;;;28     	/* 打开GPIO时钟 */
;;;29     	RCC_APB2PeriphClockCmd(RCC_ALL_OFFSITE_SW, ENABLE);
000002  2101              MOVS     r1,#1
000004  2044              MOVS     r0,#0x44
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;30     
;;;31     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00000a  2003              MOVS     r0,#3
00000c  f88d0002          STRB     r0,[sp,#2]
;;;32     	
;;;33     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;	/* 浮空输入 */
000010  2004              MOVS     r0,#4
000012  f88d0003          STRB     r0,[sp,#3]
;;;34     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_OFFSITE_SW_L;
000016  0280              LSLS     r0,r0,#10
000018  f8ad0000          STRH     r0,[sp,#0]
;;;35     	GPIO_Init(GPIO_PORT_OFFSITE_SW_L, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  4807              LDR      r0,|L1.60|
000020  f7fffffe          BL       GPIO_Init
;;;36     	
;;;37     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;	/* 浮空输入 */
000024  2004              MOVS     r0,#4
000026  f88d0003          STRB     r0,[sp,#3]
;;;38     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_OFFSITE_SW_R;
00002a  0280              LSLS     r0,r0,#10
00002c  f8ad0000          STRH     r0,[sp,#0]
;;;39     	GPIO_Init(GPIO_PORT_OFFSITE_SW_R, &GPIO_InitStructure);
000030  4669              MOV      r1,sp
000032  4803              LDR      r0,|L1.64|
000034  f7fffffe          BL       GPIO_Init
;;;40     
;;;41     }
000038  bd08              POP      {r3,pc}
;;;42     
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x40010800
                  |L1.64|
                          DCD      0x40011800

                          AREA ||i.bsp_OffSiteGetState||, CODE, READONLY, ALIGN=2

                  bsp_OffSiteGetState PROC
;;;51     */
;;;52     OffSiteState bsp_OffSiteGetState(void)
000000  b510              PUSH     {r4,lr}
;;;53     {
;;;54     	OffSiteState ret ;
;;;55     	
;;;56     	if(!GPIO_ReadInputDataBit(GPIO_PORT_OFFSITE_SW_L,GPIO_PIN_OFFSITE_SW_L)&&
000002  f44f5180          MOV      r1,#0x1000
000006  480f              LDR      r0,|L2.68|
000008  f7fffffe          BL       GPIO_ReadInputDataBit
00000c  b938              CBNZ     r0,|L2.30|
;;;57     		!GPIO_ReadInputDataBit(GPIO_PORT_OFFSITE_SW_R,GPIO_PIN_OFFSITE_SW_R))
00000e  f44f5180          MOV      r1,#0x1000
000012  480d              LDR      r0,|L2.72|
000014  f7fffffe          BL       GPIO_ReadInputDataBit
000018  b908              CBNZ     r0,|L2.30|
;;;58     	{
;;;59     		ret = OffSiteBoth;
00001a  2403              MOVS     r4,#3
00001c  e010              B        |L2.64|
                  |L2.30|
;;;60     	}
;;;61     	else if(!GPIO_ReadInputDataBit(GPIO_PORT_OFFSITE_SW_L,GPIO_PIN_OFFSITE_SW_L))
00001e  f44f5180          MOV      r1,#0x1000
000022  4808              LDR      r0,|L2.68|
000024  f7fffffe          BL       GPIO_ReadInputDataBit
000028  b908              CBNZ     r0,|L2.46|
;;;62     	{
;;;63     		ret = OffSiteLeft;
00002a  2401              MOVS     r4,#1
00002c  e008              B        |L2.64|
                  |L2.46|
;;;64     	}
;;;65     	else if(!GPIO_ReadInputDataBit(GPIO_PORT_OFFSITE_SW_R,GPIO_PIN_OFFSITE_SW_R))
00002e  f44f5180          MOV      r1,#0x1000
000032  4805              LDR      r0,|L2.72|
000034  f7fffffe          BL       GPIO_ReadInputDataBit
000038  b908              CBNZ     r0,|L2.62|
;;;66     	{
;;;67     		ret = OffSiteRight;
00003a  2402              MOVS     r4,#2
00003c  e000              B        |L2.64|
                  |L2.62|
;;;68     	}
;;;69     	else
;;;70     	{
;;;71     		ret = OffSiteNone;
00003e  2400              MOVS     r4,#0
                  |L2.64|
;;;72     	}
;;;73     	
;;;74     	return ret;
000040  4620              MOV      r0,r4
;;;75     }
000042  bd10              POP      {r4,pc}
;;;76     
                          ENDP

                  |L2.68|
                          DCD      0x40010800
                  |L2.72|
                          DCD      0x40011800

                          AREA ||i.bsp_OffSiteProc||, CODE, READONLY, ALIGN=2

                  bsp_OffSiteProc PROC
;;;111    */
;;;112    void bsp_OffSiteProc(void)
000000  b510              PUSH     {r4,lr}
;;;113    {
;;;114    	OffSiteState state;
;;;115    	
;;;116    	if(!offSiteProc.isRunning)
000002  4813              LDR      r0,|L3.80|
000004  7800              LDRB     r0,[r0,#0]  ; offSiteProc
000006  b900              CBNZ     r0,|L3.10|
                  |L3.8|
;;;117    		return;
;;;118    	
;;;119    	switch(offSiteProc.action)
;;;120    	{
;;;121    		case 0:
;;;122    		{
;;;123    			state = bsp_OffSiteGetState();
;;;124    			if(state == OffSiteBoth)
;;;125    			{
;;;126    				/*语音报警*/
;;;127    				bsp_SperkerPlay(Song16);
;;;128    				DEBUG("离地开关\r\n");
;;;129    	
;;;130    				offSiteProc.action++;
;;;131    			}
;;;132    		}break;
;;;133    		
;;;134    		case 1: /*等待主机不悬空*/
;;;135    		{
;;;136    			state = bsp_OffSiteGetState();
;;;137    			if(state == OffSiteNone)
;;;138    			{
;;;139    				offSiteProc.action = 0 ;
;;;140    			}
;;;141    		}break;
;;;142    	}
;;;143    }
000008  bd10              POP      {r4,pc}
                  |L3.10|
00000a  4811              LDR      r0,|L3.80|
00000c  6840              LDR      r0,[r0,#4]            ;119  ; offSiteProc
00000e  b110              CBZ      r0,|L3.22|
000010  2801              CMP      r0,#1                 ;119
000012  d119              BNE      |L3.72|
000014  e010              B        |L3.56|
                  |L3.22|
000016  f7fffffe          BL       bsp_OffSiteGetState
00001a  4604              MOV      r4,r0                 ;123
00001c  2c03              CMP      r4,#3                 ;124
00001e  d10a              BNE      |L3.54|
000020  2013              MOVS     r0,#0x13              ;127
000022  f7fffffe          BL       bsp_SperkerPlay
000026  a00b              ADR      r0,|L3.84|
000028  f7fffffe          BL       __2printf
00002c  4808              LDR      r0,|L3.80|
00002e  6840              LDR      r0,[r0,#4]            ;130  ; offSiteProc
000030  1c40              ADDS     r0,r0,#1              ;130
000032  4907              LDR      r1,|L3.80|
000034  6048              STR      r0,[r1,#4]            ;130  ; offSiteProc
                  |L3.54|
000036  e007              B        |L3.72|
                  |L3.56|
000038  f7fffffe          BL       bsp_OffSiteGetState
00003c  4604              MOV      r4,r0                 ;136
00003e  b914              CBNZ     r4,|L3.70|
000040  2000              MOVS     r0,#0                 ;139
000042  4903              LDR      r1,|L3.80|
000044  6048              STR      r0,[r1,#4]            ;139  ; offSiteProc
                  |L3.70|
000046  bf00              NOP                            ;141
                  |L3.72|
000048  bf00              NOP                            ;132
00004a  bf00              NOP      
00004c  e7dc              B        |L3.8|
;;;144    
                          ENDP

00004e  0000              DCW      0x0000
                  |L3.80|
                          DCD      offSiteProc
                  |L3.84|
000054  c0ebb5d8          DCB      192,235,181,216,191,170,185,216,"\r\n",0
000058  bfaab9d8
00005c  0d0a00  
00005f  00                DCB      0

                          AREA ||i.bsp_StartOffSiteProc||, CODE, READONLY, ALIGN=2

                  bsp_StartOffSiteProc PROC
;;;87     
;;;88     void bsp_StartOffSiteProc(void)
000000  2000              MOVS     r0,#0
;;;89     {
;;;90     	offSiteProc.action = 0 ;
000002  4903              LDR      r1,|L4.16|
000004  6048              STR      r0,[r1,#4]  ; offSiteProc
;;;91     	offSiteProc.delay = 0 ;
000006  6088              STR      r0,[r1,#8]  ; offSiteProc
;;;92     	offSiteProc.isRunning = true;
000008  2001              MOVS     r0,#1
00000a  7008              STRB     r0,[r1,#0]
;;;93     }
00000c  4770              BX       lr
;;;94     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      offSiteProc

                          AREA ||i.bsp_StopOffSiteProc||, CODE, READONLY, ALIGN=2

                  bsp_StopOffSiteProc PROC
;;;94     
;;;95     void bsp_StopOffSiteProc(void)
000000  2000              MOVS     r0,#0
;;;96     {
;;;97     	offSiteProc.isRunning = false;
000002  4902              LDR      r1,|L5.12|
000004  7008              STRB     r0,[r1,#0]
;;;98     	offSiteProc.action = 0 ;
000006  6048              STR      r0,[r1,#4]  ; offSiteProc
;;;99     	offSiteProc.delay = 0 ;
000008  6088              STR      r0,[r1,#8]  ; offSiteProc
;;;100    }
00000a  4770              BX       lr
;;;101    
                          ENDP

                  |L5.12|
                          DCD      offSiteProc

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  offSiteProc
                          %        12

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_OffSiteSW.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_OffSiteSW_c_ef32bac2____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_bsp_OffSiteSW_c_ef32bac2____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_OffSiteSW_c_ef32bac2____REVSH|
#line 128
|__asm___15_bsp_OffSiteSW_c_ef32bac2____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
