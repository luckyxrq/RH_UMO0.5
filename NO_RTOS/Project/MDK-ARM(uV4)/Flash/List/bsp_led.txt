; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_led.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I..\..\..\User\angle\gan_rui_Angle -I..\..\User\angle\yuan_zi_Angle -I..\..\User\dx8\inc -IF:\LuckyXRQ\CleanCar\NO_RTOS\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_led.crf ..\..\User\bsp\src\bsp_led.c]
                          THUMB

                          AREA ||i.bsp_InitLed||, CODE, READONLY, ALIGN=2

                  bsp_InitLed PROC
;;;77     */
;;;78     void bsp_InitLed(void)
000000  b508              PUSH     {r3,lr}
;;;79     {
;;;80     	GPIO_InitTypeDef GPIO_InitStructure;
;;;81     
;;;82     	/* 打开GPIO时钟 */
;;;83     	RCC_APB2PeriphClockCmd(RCC_ALL_LED, ENABLE);
000002  2101              MOVS     r1,#1
000004  2088              MOVS     r0,#0x88
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;84     
;;;85     	/*
;;;86     		配置所有的LED指示灯GPIO为推挽输出模式
;;;87     		由于将GPIO设置为输出时，GPIO输出寄存器的值缺省是0，因此会驱动LED点亮.
;;;88     		这是我不希望的，因此在改变GPIO为输出前，先关闭LED指示灯
;;;89     	*/
;;;90     	bsp_LedOff(LED_LOGO_CLEAN);
00000a  2004              MOVS     r0,#4
00000c  f7fffffe          BL       bsp_LedOff
;;;91     	bsp_LedOff(LED_LOGO_POWER);
000010  2005              MOVS     r0,#5
000012  f7fffffe          BL       bsp_LedOff
;;;92     	bsp_LedOff(LED_LOGO_CHARGE);
000016  2006              MOVS     r0,#6
000018  f7fffffe          BL       bsp_LedOff
;;;93     	bsp_LedOff(LED_COLOR_YELLOW);
00001c  2002              MOVS     r0,#2
00001e  f7fffffe          BL       bsp_LedOff
;;;94     	bsp_LedOff(LED_COLOR_GREEN);
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       bsp_LedOff
;;;95     	bsp_LedOff(LED_COLOR_RED);
000028  2003              MOVS     r0,#3
00002a  f7fffffe          BL       bsp_LedOff
;;;96     	
;;;97     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00002e  2003              MOVS     r0,#3
000030  f88d0002          STRB     r0,[sp,#2]
;;;98     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000034  2010              MOVS     r0,#0x10
000036  f88d0003          STRB     r0,[sp,#3]
;;;99     	
;;;100    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED1;
00003a  2008              MOVS     r0,#8
00003c  f8ad0000          STRH     r0,[sp,#0]
;;;101    	GPIO_Init(GPIO_PORT_LED1, &GPIO_InitStructure);
000040  4669              MOV      r1,sp
000042  4814              LDR      r0,|L1.148|
000044  f7fffffe          BL       GPIO_Init
;;;102    
;;;103    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED2;
000048  2004              MOVS     r0,#4
00004a  f8ad0000          STRH     r0,[sp,#0]
;;;104    	GPIO_Init(GPIO_PORT_LED2, &GPIO_InitStructure);
00004e  4669              MOV      r1,sp
000050  4810              LDR      r0,|L1.148|
000052  f7fffffe          BL       GPIO_Init
;;;105    
;;;106    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED3;
000056  2002              MOVS     r0,#2
000058  f8ad0000          STRH     r0,[sp,#0]
;;;107    	GPIO_Init(GPIO_PORT_LED3, &GPIO_InitStructure);
00005c  4669              MOV      r1,sp
00005e  480d              LDR      r0,|L1.148|
000060  f7fffffe          BL       GPIO_Init
;;;108    
;;;109    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED4;
000064  f44f4000          MOV      r0,#0x8000
000068  f8ad0000          STRH     r0,[sp,#0]
;;;110    	GPIO_Init(GPIO_PORT_LED4, &GPIO_InitStructure);
00006c  4669              MOV      r1,sp
00006e  480a              LDR      r0,|L1.152|
000070  f7fffffe          BL       GPIO_Init
;;;111    	
;;;112    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED5;
000074  f44f5080          MOV      r0,#0x1000
000078  f8ad0000          STRH     r0,[sp,#0]
;;;113    	GPIO_Init(GPIO_PORT_LED5, &GPIO_InitStructure);
00007c  4669              MOV      r1,sp
00007e  4805              LDR      r0,|L1.148|
000080  f7fffffe          BL       GPIO_Init
;;;114    	
;;;115    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED6;
000084  2010              MOVS     r0,#0x10
000086  f8ad0000          STRH     r0,[sp,#0]
;;;116    	GPIO_Init(GPIO_PORT_LED6, &GPIO_InitStructure);
00008a  4669              MOV      r1,sp
00008c  4801              LDR      r0,|L1.148|
00008e  f7fffffe          BL       GPIO_Init
;;;117    	
;;;118    }
000092  bd08              POP      {r3,pc}
;;;119    
                          ENDP

                  |L1.148|
                          DCD      0x40011c00
                  |L1.152|
                          DCD      0x40010c00

                          AREA ||i.bsp_IsLedOn||, CODE, READONLY, ALIGN=2

                  bsp_IsLedOn PROC
;;;239    */
;;;240    uint8_t bsp_IsLedOn(LED_SN _no)
000000  4601              MOV      r1,r0
;;;241    {
;;;242    	if (_no == 1)
000002  2901              CMP      r1,#1
000004  d108              BNE      |L2.24|
;;;243    	{
;;;244    		if ((GPIO_PORT_LED1->ODR & GPIO_PIN_LED1) == 0)
000006  4821              LDR      r0,|L2.140|
000008  6800              LDR      r0,[r0,#0]
00000a  f0000008          AND      r0,r0,#8
00000e  b908              CBNZ     r0,|L2.20|
;;;245    		{
;;;246    			return 1;
000010  2001              MOVS     r0,#1
                  |L2.18|
;;;247    		}
;;;248    		return 0;
;;;249    	}
;;;250    	else if (_no == 2)
;;;251    	{
;;;252    		if ((GPIO_PORT_LED2->ODR & GPIO_PIN_LED2) == 0)
;;;253    		{
;;;254    			return 1;
;;;255    		}
;;;256    		return 0;
;;;257    	}
;;;258    	else if (_no == 3)
;;;259    	{
;;;260    		if ((GPIO_PORT_LED3->ODR & GPIO_PIN_LED3) == 0)
;;;261    		{
;;;262    			return 1;
;;;263    		}
;;;264    		return 0;
;;;265    	}
;;;266    	else if (_no == 4)
;;;267    	{
;;;268    		if ((GPIO_PORT_LED4->ODR & GPIO_PIN_LED4) == 0)
;;;269    		{
;;;270    			return 1;
;;;271    		}
;;;272    		return 0;
;;;273    	}
;;;274    	else if (_no == 5)
;;;275    	{
;;;276    		if ((GPIO_PORT_LED5->ODR & GPIO_PIN_LED5) == 0)
;;;277    		{
;;;278    			return 1;
;;;279    		}
;;;280    		return 0;
;;;281    	}
;;;282    	else if (_no == 6)
;;;283    	{
;;;284    		if ((GPIO_PORT_LED6->ODR & GPIO_PIN_LED6) == 0)
;;;285    		{
;;;286    			return 1;
;;;287    		}
;;;288    		return 0;
;;;289    	}
;;;290    
;;;291    	return 0;
;;;292    }
000012  4770              BX       lr
                  |L2.20|
000014  2000              MOVS     r0,#0                 ;248
000016  e7fc              B        |L2.18|
                  |L2.24|
000018  2902              CMP      r1,#2                 ;250
00001a  d108              BNE      |L2.46|
00001c  481b              LDR      r0,|L2.140|
00001e  6800              LDR      r0,[r0,#0]            ;252
000020  f0000004          AND      r0,r0,#4              ;252
000024  b908              CBNZ     r0,|L2.42|
000026  2001              MOVS     r0,#1                 ;254
000028  e7f3              B        |L2.18|
                  |L2.42|
00002a  2000              MOVS     r0,#0                 ;256
00002c  e7f1              B        |L2.18|
                  |L2.46|
00002e  2903              CMP      r1,#3                 ;258
000030  d108              BNE      |L2.68|
000032  4816              LDR      r0,|L2.140|
000034  6800              LDR      r0,[r0,#0]            ;260
000036  f0000002          AND      r0,r0,#2              ;260
00003a  b908              CBNZ     r0,|L2.64|
00003c  2001              MOVS     r0,#1                 ;262
00003e  e7e8              B        |L2.18|
                  |L2.64|
000040  2000              MOVS     r0,#0                 ;264
000042  e7e6              B        |L2.18|
                  |L2.68|
000044  2904              CMP      r1,#4                 ;266
000046  d108              BNE      |L2.90|
000048  4811              LDR      r0,|L2.144|
00004a  6800              LDR      r0,[r0,#0]            ;268
00004c  f4004000          AND      r0,r0,#0x8000         ;268
000050  b908              CBNZ     r0,|L2.86|
000052  2001              MOVS     r0,#1                 ;270
000054  e7dd              B        |L2.18|
                  |L2.86|
000056  2000              MOVS     r0,#0                 ;272
000058  e7db              B        |L2.18|
                  |L2.90|
00005a  2905              CMP      r1,#5                 ;274
00005c  d108              BNE      |L2.112|
00005e  480b              LDR      r0,|L2.140|
000060  6800              LDR      r0,[r0,#0]            ;276
000062  f4005080          AND      r0,r0,#0x1000         ;276
000066  b908              CBNZ     r0,|L2.108|
000068  2001              MOVS     r0,#1                 ;278
00006a  e7d2              B        |L2.18|
                  |L2.108|
00006c  2000              MOVS     r0,#0                 ;280
00006e  e7d0              B        |L2.18|
                  |L2.112|
000070  2906              CMP      r1,#6                 ;282
000072  d108              BNE      |L2.134|
000074  4805              LDR      r0,|L2.140|
000076  6800              LDR      r0,[r0,#0]            ;284
000078  f0000010          AND      r0,r0,#0x10           ;284
00007c  b908              CBNZ     r0,|L2.130|
00007e  2001              MOVS     r0,#1                 ;286
000080  e7c7              B        |L2.18|
                  |L2.130|
000082  2000              MOVS     r0,#0                 ;288
000084  e7c5              B        |L2.18|
                  |L2.134|
000086  2000              MOVS     r0,#0                 ;291
000088  e7c3              B        |L2.18|
;;;293    
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      0x40011c0c
                  |L2.144|
                          DCD      0x40010c0c

                          AREA ||i.bsp_LedOff||, CODE, READONLY, ALIGN=2

                  bsp_LedOff PROC
;;;165    */
;;;166    void bsp_LedOff(LED_SN _no)
000000  1e41              SUBS     r1,r0,#1
;;;167    {
;;;168    	_no--;
000002  b2c8              UXTB     r0,r1
;;;169    
;;;170    	if (_no == 0)
000004  b918              CBNZ     r0,|L3.14|
;;;171    	{
;;;172    		GPIO_PORT_LED1->BSRR = GPIO_PIN_LED1;
000006  2108              MOVS     r1,#8
000008  4a10              LDR      r2,|L3.76|
00000a  6011              STR      r1,[r2,#0]
00000c  e01d              B        |L3.74|
                  |L3.14|
;;;173    	}
;;;174    	else if (_no == 1)
00000e  2801              CMP      r0,#1
000010  d103              BNE      |L3.26|
;;;175    	{
;;;176    		GPIO_PORT_LED2->BSRR = GPIO_PIN_LED2;
000012  2104              MOVS     r1,#4
000014  4a0d              LDR      r2,|L3.76|
000016  6011              STR      r1,[r2,#0]
000018  e017              B        |L3.74|
                  |L3.26|
;;;177    	}
;;;178    	else if (_no == 2)
00001a  2802              CMP      r0,#2
00001c  d103              BNE      |L3.38|
;;;179    	{
;;;180    		GPIO_PORT_LED3->BSRR = GPIO_PIN_LED3;
00001e  2102              MOVS     r1,#2
000020  4a0a              LDR      r2,|L3.76|
000022  6011              STR      r1,[r2,#0]
000024  e011              B        |L3.74|
                  |L3.38|
;;;181    	}
;;;182    	else if (_no == 3)
000026  2803              CMP      r0,#3
000028  d104              BNE      |L3.52|
;;;183    	{
;;;184    		GPIO_PORT_LED4->BSRR = GPIO_PIN_LED4;
00002a  f44f4100          MOV      r1,#0x8000
00002e  4a08              LDR      r2,|L3.80|
000030  6011              STR      r1,[r2,#0]
000032  e00a              B        |L3.74|
                  |L3.52|
;;;185    	}
;;;186    	else if (_no == 4)
000034  2804              CMP      r0,#4
000036  d103              BNE      |L3.64|
;;;187    	{
;;;188    		GPIO_PORT_LED5->BSRR = GPIO_PIN_LED5;
000038  0281              LSLS     r1,r0,#10
00003a  4a04              LDR      r2,|L3.76|
00003c  6011              STR      r1,[r2,#0]
00003e  e004              B        |L3.74|
                  |L3.64|
;;;189    	}
;;;190    	else if (_no == 5)
000040  2805              CMP      r0,#5
000042  d102              BNE      |L3.74|
;;;191    	{
;;;192    		GPIO_PORT_LED6->BSRR = GPIO_PIN_LED6;
000044  2110              MOVS     r1,#0x10
000046  4a01              LDR      r2,|L3.76|
000048  6011              STR      r1,[r2,#0]
                  |L3.74|
;;;193    	}
;;;194    }
00004a  4770              BX       lr
;;;195    
                          ENDP

                  |L3.76|
                          DCD      0x40011c10
                  |L3.80|
                          DCD      0x40010c10

                          AREA ||i.bsp_LedOn||, CODE, READONLY, ALIGN=2

                  bsp_LedOn PROC
;;;127    */
;;;128    void bsp_LedOn(LED_SN _no)
000000  1e41              SUBS     r1,r0,#1
;;;129    {
;;;130    	_no--;
000002  b2c8              UXTB     r0,r1
;;;131    
;;;132    	if (_no == 0)
000004  b918              CBNZ     r0,|L4.14|
;;;133    	{
;;;134    		GPIO_PORT_LED1->BRR = GPIO_PIN_LED1;
000006  2108              MOVS     r1,#8
000008  4a10              LDR      r2,|L4.76|
00000a  6011              STR      r1,[r2,#0]
00000c  e01d              B        |L4.74|
                  |L4.14|
;;;135    	}
;;;136    	else if (_no == 1)
00000e  2801              CMP      r0,#1
000010  d103              BNE      |L4.26|
;;;137    	{
;;;138    		GPIO_PORT_LED2->BRR = GPIO_PIN_LED2;
000012  2104              MOVS     r1,#4
000014  4a0d              LDR      r2,|L4.76|
000016  6011              STR      r1,[r2,#0]
000018  e017              B        |L4.74|
                  |L4.26|
;;;139    	}
;;;140    	else if (_no == 2)
00001a  2802              CMP      r0,#2
00001c  d103              BNE      |L4.38|
;;;141    	{
;;;142    		GPIO_PORT_LED3->BRR = GPIO_PIN_LED3;
00001e  2102              MOVS     r1,#2
000020  4a0a              LDR      r2,|L4.76|
000022  6011              STR      r1,[r2,#0]
000024  e011              B        |L4.74|
                  |L4.38|
;;;143    	}
;;;144    	else if (_no == 3)
000026  2803              CMP      r0,#3
000028  d104              BNE      |L4.52|
;;;145    	{
;;;146    		GPIO_PORT_LED4->BRR = GPIO_PIN_LED4;
00002a  f44f4100          MOV      r1,#0x8000
00002e  4a08              LDR      r2,|L4.80|
000030  6011              STR      r1,[r2,#0]
000032  e00a              B        |L4.74|
                  |L4.52|
;;;147    	}
;;;148    	else if (_no == 4)
000034  2804              CMP      r0,#4
000036  d103              BNE      |L4.64|
;;;149    	{
;;;150    		GPIO_PORT_LED5->BRR = GPIO_PIN_LED5;
000038  0281              LSLS     r1,r0,#10
00003a  4a04              LDR      r2,|L4.76|
00003c  6011              STR      r1,[r2,#0]
00003e  e004              B        |L4.74|
                  |L4.64|
;;;151    	}
;;;152    	else if (_no == 5)
000040  2805              CMP      r0,#5
000042  d102              BNE      |L4.74|
;;;153    	{
;;;154    		GPIO_PORT_LED6->BRR = GPIO_PIN_LED6;
000044  2110              MOVS     r1,#0x10
000046  4a01              LDR      r2,|L4.76|
000048  6011              STR      r1,[r2,#0]
                  |L4.74|
;;;155    	}
;;;156    }
00004a  4770              BX       lr
;;;157    
                          ENDP

                  |L4.76|
                          DCD      0x40011c14
                  |L4.80|
                          DCD      0x40010c14

                          AREA ||i.bsp_LedToggle||, CODE, READONLY, ALIGN=2

                  bsp_LedToggle PROC
;;;203    */
;;;204    void bsp_LedToggle(LED_SN _no)
000000  2801              CMP      r0,#1
;;;205    {
;;;206    	if (_no == 1)
000002  d106              BNE      |L5.18|
;;;207    	{
;;;208    		GPIO_PORT_LED1->ODR ^= GPIO_PIN_LED1;
000004  4919              LDR      r1,|L5.108|
000006  6809              LDR      r1,[r1,#0]
000008  f0810108          EOR      r1,r1,#8
00000c  4a17              LDR      r2,|L5.108|
00000e  6011              STR      r1,[r2,#0]
000010  e02b              B        |L5.106|
                  |L5.18|
;;;209    	}
;;;210    	else if (_no == 2)
000012  2802              CMP      r0,#2
000014  d106              BNE      |L5.36|
;;;211    	{
;;;212    		GPIO_PORT_LED2->ODR ^= GPIO_PIN_LED2;
000016  4915              LDR      r1,|L5.108|
000018  6809              LDR      r1,[r1,#0]
00001a  f0810104          EOR      r1,r1,#4
00001e  4a13              LDR      r2,|L5.108|
000020  6011              STR      r1,[r2,#0]
000022  e022              B        |L5.106|
                  |L5.36|
;;;213    	}
;;;214    	else if (_no == 3)
000024  2803              CMP      r0,#3
000026  d106              BNE      |L5.54|
;;;215    	{
;;;216    		GPIO_PORT_LED3->ODR ^= GPIO_PIN_LED3;
000028  4910              LDR      r1,|L5.108|
00002a  6809              LDR      r1,[r1,#0]
00002c  f0810102          EOR      r1,r1,#2
000030  4a0e              LDR      r2,|L5.108|
000032  6011              STR      r1,[r2,#0]
000034  e019              B        |L5.106|
                  |L5.54|
;;;217    	}
;;;218    	else if (_no == 4)
000036  2804              CMP      r0,#4
000038  d106              BNE      |L5.72|
;;;219    	{
;;;220    		GPIO_PORT_LED4->ODR ^= GPIO_PIN_LED4;
00003a  490d              LDR      r1,|L5.112|
00003c  6809              LDR      r1,[r1,#0]
00003e  f4814100          EOR      r1,r1,#0x8000
000042  4a0b              LDR      r2,|L5.112|
000044  6011              STR      r1,[r2,#0]
000046  e010              B        |L5.106|
                  |L5.72|
;;;221    	}
;;;222    	else if (_no == 5)
000048  2805              CMP      r0,#5
00004a  d106              BNE      |L5.90|
;;;223    	{
;;;224    		GPIO_PORT_LED5->ODR ^= GPIO_PIN_LED5;
00004c  4907              LDR      r1,|L5.108|
00004e  6809              LDR      r1,[r1,#0]
000050  f4815180          EOR      r1,r1,#0x1000
000054  4a05              LDR      r2,|L5.108|
000056  6011              STR      r1,[r2,#0]
000058  e007              B        |L5.106|
                  |L5.90|
;;;225    	}
;;;226    	else if (_no == 6)
00005a  2806              CMP      r0,#6
00005c  d105              BNE      |L5.106|
;;;227    	{
;;;228    		GPIO_PORT_LED6->ODR ^= GPIO_PIN_LED6;
00005e  4903              LDR      r1,|L5.108|
000060  6809              LDR      r1,[r1,#0]
000062  f0810110          EOR      r1,r1,#0x10
000066  4a01              LDR      r2,|L5.108|
000068  6011              STR      r1,[r2,#0]
                  |L5.106|
;;;229    	}
;;;230    }
00006a  4770              BX       lr
;;;231    
                          ENDP

                  |L5.108|
                          DCD      0x40011c0c
                  |L5.112|
                          DCD      0x40010c0c

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_led.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_led_c_ba23b041____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REVSH|
#line 128
|__asm___9_bsp_led_c_ba23b041____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
