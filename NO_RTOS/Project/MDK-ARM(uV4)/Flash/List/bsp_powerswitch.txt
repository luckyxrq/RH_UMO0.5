; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_powerswitch.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_powerswitch.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -IF:\LuckyXRQ\CleanCar\NO_RTOS\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_powerswitch.crf ..\..\User\app\src\bsp_PowerSwitch.c]
                          THUMB

                          AREA ||i.bsp_InitSW||, CODE, READONLY, ALIGN=2

                  bsp_InitSW PROC
;;;16     */
;;;17     void bsp_InitSW(void)
000000  b508              PUSH     {r3,lr}
;;;18     {
;;;19     
;;;20     	GPIO_InitTypeDef GPIO_InitStructure;
;;;21     
;;;22     	/* 打开GPIO时钟 */
;;;23     	RCC_APB2PeriphClockCmd(RCC_ALL_SW, ENABLE);
000002  2101              MOVS     r1,#1
000004  20f4              MOVS     r0,#0xf4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;24     
;;;25     	/*
;;;26     		初始状态先关闭
;;;27     	*/
;;;28     	bsp_SwOff(SW_5V_EN_CTRL);
00000a  2000              MOVS     r0,#0
00000c  f7fffffe          BL       bsp_SwOff
;;;29     	bsp_SwOff(SW_IR_POWER);
000010  2002              MOVS     r0,#2
000012  f7fffffe          BL       bsp_SwOff
;;;30     	bsp_SwOff(SW_MOTOR_POWER);
000016  2003              MOVS     r0,#3
000018  f7fffffe          BL       bsp_SwOff
;;;31     	bsp_SwOff(SW_VSLAM_POWER);
00001c  2004              MOVS     r0,#4
00001e  f7fffffe          BL       bsp_SwOff
;;;32     	bsp_SwOff(SW_WIFI_POWER);
000022  2005              MOVS     r0,#5
000024  f7fffffe          BL       bsp_SwOff
;;;33     	bsp_SwOff(SW_3V3_EN_CTRL);
000028  2001              MOVS     r0,#1
00002a  f7fffffe          BL       bsp_SwOff
;;;34     
;;;35     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00002e  2003              MOVS     r0,#3
000030  f88d0002          STRB     r0,[sp,#2]
;;;36     	
;;;37     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000034  2010              MOVS     r0,#0x10
000036  f88d0003          STRB     r0,[sp,#3]
;;;38     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_5V_EN_CTR;
00003a  0240              LSLS     r0,r0,#9
00003c  f8ad0000          STRH     r0,[sp,#0]
;;;39     	GPIO_Init(GPIO_PORT_5V_EN_CTR, &GPIO_InitStructure);
000040  4669              MOV      r1,sp
000042  481b              LDR      r0,|L1.176|
000044  f7fffffe          BL       GPIO_Init
;;;40     	
;;;41     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;	/* 开漏输出模式 */
000048  2014              MOVS     r0,#0x14
00004a  f88d0003          STRB     r0,[sp,#3]
;;;42     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_IR_POWER;
00004e  2001              MOVS     r0,#1
000050  f8ad0000          STRH     r0,[sp,#0]
;;;43     	GPIO_Init(GPIO_PORT_IR_POWER, &GPIO_InitStructure);
000054  4669              MOV      r1,sp
000056  4817              LDR      r0,|L1.180|
000058  f7fffffe          BL       GPIO_Init
;;;44     	
;;;45     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
00005c  2010              MOVS     r0,#0x10
00005e  f88d0003          STRB     r0,[sp,#3]
;;;46     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_MOTOR_POWER;
000062  2040              MOVS     r0,#0x40
000064  f8ad0000          STRH     r0,[sp,#0]
;;;47     	GPIO_Init(GPIO_PORT_MOTOR_POWER, &GPIO_InitStructure);
000068  4669              MOV      r1,sp
00006a  4813              LDR      r0,|L1.184|
00006c  f7fffffe          BL       GPIO_Init
;;;48     	
;;;49     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000070  2010              MOVS     r0,#0x10
000072  f88d0003          STRB     r0,[sp,#3]
;;;50     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_VSLAM_POWER;
000076  01c0              LSLS     r0,r0,#7
000078  f8ad0000          STRH     r0,[sp,#0]
;;;51     	GPIO_Init(GPIO_PORT_VSLAM_POWER, &GPIO_InitStructure);
00007c  4669              MOV      r1,sp
00007e  480f              LDR      r0,|L1.188|
000080  f7fffffe          BL       GPIO_Init
;;;52     	
;;;53     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000084  2010              MOVS     r0,#0x10
000086  f88d0003          STRB     r0,[sp,#3]
;;;54     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_WIFI_POWER;
00008a  2080              MOVS     r0,#0x80
00008c  f8ad0000          STRH     r0,[sp,#0]
;;;55     	GPIO_Init(GPIO_PORT_WIFI_POWER, &GPIO_InitStructure);
000090  4669              MOV      r1,sp
000092  480b              LDR      r0,|L1.192|
000094  f7fffffe          BL       GPIO_Init
;;;56     	
;;;57     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000098  2010              MOVS     r0,#0x10
00009a  f88d0003          STRB     r0,[sp,#3]
;;;58     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_3V3_EN_CTR;
00009e  2020              MOVS     r0,#0x20
0000a0  f8ad0000          STRH     r0,[sp,#0]
;;;59     	GPIO_Init(GPIO_PORT_3V3_EN_CTR, &GPIO_InitStructure);
0000a4  4669              MOV      r1,sp
0000a6  4804              LDR      r0,|L1.184|
0000a8  f7fffffe          BL       GPIO_Init
;;;60     	
;;;61     }
0000ac  bd08              POP      {r3,pc}
;;;62     
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      0x40011000
                  |L1.180|
                          DCD      0x40011c00
                  |L1.184|
                          DCD      0x40011800
                  |L1.188|
                          DCD      0x40010800
                  |L1.192|
                          DCD      0x40011400

                          AREA ||i.bsp_SwOff||, CODE, READONLY, ALIGN=2

                  bsp_SwOff PROC
;;;119    */
;;;120    void bsp_SwOff(SW_ID sw)
000000  b510              PUSH     {r4,lr}
;;;121    {
000002  4604              MOV      r4,r0
;;;122    	switch(sw)
000004  2c06              CMP      r4,#6
000006  d224              BCS      |L2.82|
000008  e8dff004          TBB      [pc,r4]
00000c  031e090e          DCB      0x03,0x1e,0x09,0x0e
000010  1319              DCB      0x13,0x19
;;;123    	{
;;;124    		case SW_5V_EN_CTRL:
;;;125    		{
;;;126    			GPIO_ResetBits(GPIO_PORT_5V_EN_CTR,GPIO_PIN_5V_EN_CTR);
000012  f44f5100          MOV      r1,#0x2000
000016  4810              LDR      r0,|L2.88|
000018  f7fffffe          BL       GPIO_ResetBits
;;;127    		}break;
00001c  e01a              B        |L2.84|
;;;128    		
;;;129    		case SW_IR_POWER:
;;;130    		{
;;;131    			GPIO_SetBits(GPIO_PORT_IR_POWER,GPIO_PIN_IR_POWER);
00001e  2101              MOVS     r1,#1
000020  480e              LDR      r0,|L2.92|
000022  f7fffffe          BL       GPIO_SetBits
;;;132    		}break;
000026  e015              B        |L2.84|
;;;133    		
;;;134    		case SW_MOTOR_POWER:
;;;135    		{
;;;136    			GPIO_ResetBits(GPIO_PORT_MOTOR_POWER,GPIO_PIN_MOTOR_POWER);
000028  2140              MOVS     r1,#0x40
00002a  480d              LDR      r0,|L2.96|
00002c  f7fffffe          BL       GPIO_ResetBits
;;;137    		}break;
000030  e010              B        |L2.84|
;;;138    		
;;;139    		case SW_VSLAM_POWER:
;;;140    		{
;;;141    			GPIO_SetBits(GPIO_PORT_VSLAM_POWER,GPIO_PIN_VSLAM_POWER);
000032  f44f6100          MOV      r1,#0x800
000036  480b              LDR      r0,|L2.100|
000038  f7fffffe          BL       GPIO_SetBits
;;;142    		}break;
00003c  e00a              B        |L2.84|
;;;143    		
;;;144    		case SW_WIFI_POWER:
;;;145    		{
;;;146    			GPIO_ResetBits(GPIO_PORT_WIFI_POWER,GPIO_PIN_WIFI_POWER);
00003e  2180              MOVS     r1,#0x80
000040  4809              LDR      r0,|L2.104|
000042  f7fffffe          BL       GPIO_ResetBits
;;;147    		}break;
000046  e005              B        |L2.84|
;;;148    		
;;;149    		case SW_3V3_EN_CTRL:
;;;150    		{
;;;151    			GPIO_SetBits(GPIO_PORT_3V3_EN_CTR,GPIO_PIN_3V3_EN_CTR);
000048  2120              MOVS     r1,#0x20
00004a  4805              LDR      r0,|L2.96|
00004c  f7fffffe          BL       GPIO_SetBits
;;;152    		}break;
000050  e000              B        |L2.84|
                  |L2.82|
;;;153    		
;;;154    		default: break;
000052  bf00              NOP      
                  |L2.84|
000054  bf00              NOP                            ;127
;;;155    	}
;;;156    
;;;157    }
000056  bd10              POP      {r4,pc}
;;;158    
                          ENDP

                  |L2.88|
                          DCD      0x40011000
                  |L2.92|
                          DCD      0x40011c00
                  |L2.96|
                          DCD      0x40011800
                  |L2.100|
                          DCD      0x40010800
                  |L2.104|
                          DCD      0x40011400

                          AREA ||i.bsp_SwOn||, CODE, READONLY, ALIGN=2

                  bsp_SwOn PROC
;;;72     */
;;;73     void bsp_SwOn(SW_ID sw)
000000  b510              PUSH     {r4,lr}
;;;74     {
000002  4604              MOV      r4,r0
;;;75     	switch(sw)
000004  2c06              CMP      r4,#6
000006  d224              BCS      |L3.82|
000008  e8dff004          TBB      [pc,r4]
00000c  031e090e          DCB      0x03,0x1e,0x09,0x0e
000010  1319              DCB      0x13,0x19
;;;76     	{
;;;77     		case SW_5V_EN_CTRL:
;;;78     		{
;;;79     			GPIO_SetBits(GPIO_PORT_5V_EN_CTR,GPIO_PIN_5V_EN_CTR);
000012  f44f5100          MOV      r1,#0x2000
000016  4810              LDR      r0,|L3.88|
000018  f7fffffe          BL       GPIO_SetBits
;;;80     		}break;
00001c  e01a              B        |L3.84|
;;;81     		
;;;82     		case SW_IR_POWER:
;;;83     		{
;;;84     			GPIO_ResetBits(GPIO_PORT_IR_POWER,GPIO_PIN_IR_POWER);
00001e  2101              MOVS     r1,#1
000020  480e              LDR      r0,|L3.92|
000022  f7fffffe          BL       GPIO_ResetBits
;;;85     		}break;
000026  e015              B        |L3.84|
;;;86     		
;;;87     		case SW_MOTOR_POWER:
;;;88     		{
;;;89     			GPIO_SetBits(GPIO_PORT_MOTOR_POWER,GPIO_PIN_MOTOR_POWER);
000028  2140              MOVS     r1,#0x40
00002a  480d              LDR      r0,|L3.96|
00002c  f7fffffe          BL       GPIO_SetBits
;;;90     		}break;
000030  e010              B        |L3.84|
;;;91     		
;;;92     		case SW_VSLAM_POWER:
;;;93     		{
;;;94     			GPIO_ResetBits(GPIO_PORT_VSLAM_POWER,GPIO_PIN_VSLAM_POWER);
000032  f44f6100          MOV      r1,#0x800
000036  480b              LDR      r0,|L3.100|
000038  f7fffffe          BL       GPIO_ResetBits
;;;95     		}break;
00003c  e00a              B        |L3.84|
;;;96     		
;;;97     		case SW_WIFI_POWER:
;;;98     		{
;;;99     			GPIO_SetBits(GPIO_PORT_WIFI_POWER,GPIO_PIN_WIFI_POWER);
00003e  2180              MOVS     r1,#0x80
000040  4809              LDR      r0,|L3.104|
000042  f7fffffe          BL       GPIO_SetBits
;;;100    		}break;
000046  e005              B        |L3.84|
;;;101    		
;;;102    		case SW_3V3_EN_CTRL:
;;;103    		{
;;;104    			GPIO_ResetBits(GPIO_PORT_3V3_EN_CTR,GPIO_PIN_3V3_EN_CTR);
000048  2120              MOVS     r1,#0x20
00004a  4805              LDR      r0,|L3.96|
00004c  f7fffffe          BL       GPIO_ResetBits
;;;105    		}break;
000050  e000              B        |L3.84|
                  |L3.82|
;;;106    		
;;;107    		default: break;
000052  bf00              NOP      
                  |L3.84|
000054  bf00              NOP                            ;80
;;;108    	}
;;;109    
;;;110    }
000056  bd10              POP      {r4,pc}
;;;111    
                          ENDP

                  |L3.88|
                          DCD      0x40011000
                  |L3.92|
                          DCD      0x40011c00
                  |L3.96|
                          DCD      0x40011800
                  |L3.100|
                          DCD      0x40010800
                  |L3.104|
                          DCD      0x40011400

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_PowerSwitch.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_bsp_PowerSwitch_c_f9616ba8____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_bsp_PowerSwitch_c_f9616ba8____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_bsp_PowerSwitch_c_f9616ba8____REVSH|
#line 128
|__asm___17_bsp_PowerSwitch_c_f9616ba8____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
