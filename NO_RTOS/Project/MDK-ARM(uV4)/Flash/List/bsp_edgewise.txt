; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_edgewise.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_edgewise.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I..\..\..\User\angle\gan_rui_Angle -I..\..\User\angle\yuan_zi_Angle -IF:\LuckyXRQ\CleanCar\NO_RTOS\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_edgewise.crf ..\..\User\app\src\bsp_Edgewise.c]
                          THUMB

                          AREA ||i.bsp_EdgewiseRun||, CODE, READONLY, ALIGN=2

                  bsp_EdgewiseRun PROC
;;;120    */
;;;121    void bsp_EdgewiseRun(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;122    {
;;;123    	if(!edgewiseRun.isRunning)
000004  4895              LDR      r0,|L1.604|
000006  7800              LDRB     r0,[r0,#0]  ; edgewiseRun
000008  b908              CBNZ     r0,|L1.14|
                  |L1.10|
;;;124    		return ;
;;;125    	
;;;126    	switch(edgewiseRun.action)
;;;127    	{
;;;128    		case 0:/*进入沿边模式，首先直走*/
;;;129    		{
;;;130    			if(bsp_GetInfraRedAdcVoltage(IR7) >= 1.0F )
;;;131    			{
;;;132    				edgewiseRun.ErlangGodStartTime = bsp_GetRunTime() ;
;;;133    				bsp_EdgewiseRunStraightSlow();
;;;134    			}
;;;135    			else
;;;136    			{
;;;137    				if(bsp_GetRunTime() - edgewiseRun.ErlangGodStartTime >= 1000)
;;;138    				{
;;;139    					bsp_EdgewiseRunStraightFast();
;;;140    				}
;;;141    			}
;;;142    			if(bsp_CollisionScan() != CollisionNone)
;;;143    			{
;;;144    				edgewiseRun.action++;
;;;145    			}
;;;146    		}break;
;;;147    		
;;;148    		case 1:/*如果发生了碰撞，碰撞后退*/
;;;149    		{
;;;150    			float vol = bsp_GetInfraredVoltageRight();
;;;151    			edgewiseRun.collision = bsp_CollisionScan();
;;;152    			
;;;153    			if(edgewiseRun.collision != CollisionNone)
;;;154    			{
;;;155    				bsp_GoBackward();
;;;156    				/*记录下当前的脉冲，用于退后指定脉冲数（距离），同时记录下当前时间，放置退了很久还没知道*/
;;;157    				edgewiseRun.pulse = bsp_GetCurrentBothPulse();
;;;158    				edgewiseRun.delay = bsp_GetRunTime();
;;;159    				edgewiseRun.action++;
;;;160    			}
;;;161    			else if(vol >= 1.5F && vol <=2.0F )
;;;162    			{
;;;163    				bsp_EdgewiseRunStraightSlow();
;;;164    				edgewiseRun.possibleEnd = 0 ;
;;;165    			}
;;;166    			/*向右靠近的过程中还需要检测靠近的时间，如果靠近了很久还是没能找到电压值，那么就是走到了尽头*/
;;;167    			else if(vol < 1.5F)
;;;168    			{
;;;169    				bsp_EdgewiseTurnRightSlow();
;;;170    				if(vol < 0.2F)
;;;171    				{
;;;172    					if(edgewiseRun.possibleEnd++ >= 500)
;;;173    					{
;;;174    						edgewiseRun.possibleEnd = 0 ;
;;;175    						edgewiseRun.action = 4 ;
;;;176    					}
;;;177    				}
;;;178    			}
;;;179    			else if(vol > 2.0F)
;;;180    			{
;;;181    				bsp_EdgewiseTurnLeftSlow();
;;;182    				edgewiseRun.possibleEnd = 0 ;
;;;183    			}
;;;184    
;;;185    		}break;
;;;186    		
;;;187    		case 2:/*后退完了再原地旋转，左右都动*/
;;;188    		{
;;;189    			if((bsp_GetRunTime() - edgewiseRun.delay >= 2000) || (bsp_GetCurrentBothPulse()-edgewiseRun.pulse)>=GO_BACK_PULSE)
;;;190    			{
;;;191    				bsp_RotateCCW();
;;;192    				/*获取角度和时间，转动固定角度，时间太久还没转到代表异常*/
;;;193    				edgewiseRun.angle = bsp_AngleRead();
;;;194    				edgewiseRun.delay = bsp_GetRunTime();
;;;195    				edgewiseRun.action++;
;;;196    			}
;;;197    		}break;
;;;198    		
;;;199    		case 3:/*旋转一会儿，继续直行，回到状态1*/
;;;200    		{
;;;201    			float val = bsp_GetInfraredVoltageRight();
;;;202    			if(myabs(bsp_AngleAdd(edgewiseRun.angle ,20) - (bsp_AngleRead())) <= 2.0F ||
;;;203    				(val>=1.0F && val<=3.3F && myabs(bsp_AngleRead()-edgewiseRun.angle)>=10.0F ))
;;;204    			{
;;;205    				bsp_EdgewiseRunStraightSlow();
;;;206    				edgewiseRun.action = 1;
;;;207    			}
;;;208    
;;;209    		}break;
;;;210    
;;;211    		case 4: /*完全丢失，画大弧线，最大旋转角度*/
;;;212    		{
;;;213    			edgewiseRun.angle = bsp_AngleRead();
;;;214    			edgewiseRun.delay = bsp_GetRunTime();
;;;215    			
;;;216    			
;;;217    			bsp_PirouetteCW();
;;;218    			edgewiseRun.action++;
;;;219    		}break;
;;;220    		
;;;221    		case 5:
;;;222    		{
;;;223    			float vol = bsp_GetInfraredVoltageRight();
;;;224    			
;;;225    			
;;;226    			/*判断下旋转了太久了*/
;;;227    			if((bsp_GetRunTime() - edgewiseRun.delay)>= 3000 && 
;;;228    				myabs(bsp_AngleAdd(edgewiseRun.angle ,360) - (bsp_AngleRead())) <= 10.0F)
;;;229    			{
;;;230    				edgewiseRun.action = 0 ;
;;;231    			}
;;;232    			
;;;233    
;;;234    			if(bsp_CollisionScan()!=CollisionNone || (vol >= 1.2F && vol <=3.3F ))
;;;235    			{
;;;236    				edgewiseRun.action = 1 ;
;;;237    			}
;;;238    		}break;
;;;239    		
;;;240    	}
;;;241    }
00000a  e8bd81f0          POP      {r4-r8,pc}
                  |L1.14|
00000e  4893              LDR      r0,|L1.604|
000010  6840              LDR      r0,[r0,#4]            ;126  ; edgewiseRun
000012  2806              CMP      r0,#6                 ;126
000014  d227              BCS      |L1.102|
000016  e8dff000          TBB      [pc,r0]               ;126
00001a  0327              DCB      0x03,0x27
00001c  7b9fd8e8          DCB      0x7b,0x9f,0xd8,0xe8
000020  2007              MOVS     r0,#7                 ;130
000022  f7fffffe          BL       bsp_GetInfraRedAdcVoltage
000026  4604              MOV      r4,r0                 ;130
000028  f04f517e          MOV      r1,#0x3f800000        ;130
00002c  f7fffffe          BL       __aeabi_cfrcmple
000030  d806              BHI      |L1.64|
000032  f7fffffe          BL       bsp_GetRunTime
000036  4989              LDR      r1,|L1.604|
000038  61c8              STR      r0,[r1,#0x1c]         ;132  ; edgewiseRun
00003a  f7fffffe          BL       bsp_EdgewiseRunStraightSlow
00003e  e009              B        |L1.84|
                  |L1.64|
000040  f7fffffe          BL       bsp_GetRunTime
000044  4985              LDR      r1,|L1.604|
000046  69c9              LDR      r1,[r1,#0x1c]         ;137  ; edgewiseRun
000048  1a40              SUBS     r0,r0,r1              ;137
00004a  f5b07f7a          CMP      r0,#0x3e8             ;137
00004e  d301              BCC      |L1.84|
000050  f7fffffe          BL       bsp_EdgewiseRunStraightFast
                  |L1.84|
000054  f7fffffe          BL       bsp_CollisionScan
000058  2803              CMP      r0,#3                 ;142
00005a  d004              BEQ      |L1.102|
00005c  487f              LDR      r0,|L1.604|
00005e  6840              LDR      r0,[r0,#4]            ;144  ; edgewiseRun
000060  1c40              ADDS     r0,r0,#1              ;144
000062  497e              LDR      r1,|L1.604|
000064  6048              STR      r0,[r1,#4]            ;144  ; edgewiseRun
                  |L1.102|
000066  e0f5              B        |L1.596|
000068  f7fffffe          BL       bsp_GetInfraredVoltageRight
00006c  4604              MOV      r4,r0                 ;150
00006e  f7fffffe          BL       bsp_CollisionScan
000072  497a              LDR      r1,|L1.604|
000074  7508              STRB     r0,[r1,#0x14]         ;151
000076  4608              MOV      r0,r1                 ;153
000078  7d00              LDRB     r0,[r0,#0x14]         ;153  ; edgewiseRun
00007a  2803              CMP      r0,#3                 ;153
00007c  d00e              BEQ      |L1.156|
00007e  f7fffffe          BL       bsp_GoBackward
000082  f7fffffe          BL       bsp_GetCurrentBothPulse
000086  4975              LDR      r1,|L1.604|
000088  60c8              STR      r0,[r1,#0xc]          ;157  ; edgewiseRun
00008a  f7fffffe          BL       bsp_GetRunTime
00008e  4973              LDR      r1,|L1.604|
000090  6088              STR      r0,[r1,#8]            ;158  ; edgewiseRun
000092  4608              MOV      r0,r1                 ;159
000094  6840              LDR      r0,[r0,#4]            ;159  ; edgewiseRun
000096  1c40              ADDS     r0,r0,#1              ;159
000098  6048              STR      r0,[r1,#4]            ;159  ; edgewiseRun
00009a  e038              B        |L1.270|
                  |L1.156|
00009c  f04f517f          MOV      r1,#0x3fc00000        ;161
0000a0  4620              MOV      r0,r4                 ;161
0000a2  f7fffffe          BL       __aeabi_cfrcmple
0000a6  d80b              BHI      |L1.192|
0000a8  f04f4180          MOV      r1,#0x40000000        ;161
0000ac  4620              MOV      r0,r4                 ;161
0000ae  f7fffffe          BL       __aeabi_cfcmple
0000b2  d805              BHI      |L1.192|
0000b4  f7fffffe          BL       bsp_EdgewiseRunStraightSlow
0000b8  2000              MOVS     r0,#0                 ;164
0000ba  4968              LDR      r1,|L1.604|
0000bc  6188              STR      r0,[r1,#0x18]         ;164  ; edgewiseRun
0000be  e026              B        |L1.270|
                  |L1.192|
0000c0  f04f517f          MOV      r1,#0x3fc00000        ;167
0000c4  4620              MOV      r0,r4                 ;167
0000c6  f7fffffe          BL       __aeabi_cfcmple
0000ca  d215              BCS      |L1.248|
0000cc  f7fffffe          BL       bsp_EdgewiseTurnRightSlow
0000d0  4963              LDR      r1,|L1.608|
0000d2  4620              MOV      r0,r4                 ;170
0000d4  f7fffffe          BL       __aeabi_cfcmple
0000d8  d219              BCS      |L1.270|
0000da  4860              LDR      r0,|L1.604|
0000dc  6981              LDR      r1,[r0,#0x18]         ;172  ; edgewiseRun
0000de  6980              LDR      r0,[r0,#0x18]         ;172  ; edgewiseRun
0000e0  1c40              ADDS     r0,r0,#1              ;172
0000e2  4a5e              LDR      r2,|L1.604|
0000e4  6190              STR      r0,[r2,#0x18]         ;172  ; edgewiseRun
0000e6  f5b17ffa          CMP      r1,#0x1f4             ;172
0000ea  d310              BCC      |L1.270|
0000ec  2000              MOVS     r0,#0                 ;174
0000ee  4611              MOV      r1,r2                 ;174
0000f0  6188              STR      r0,[r1,#0x18]         ;174  ; edgewiseRun
0000f2  2004              MOVS     r0,#4                 ;175
0000f4  6048              STR      r0,[r1,#4]            ;175  ; edgewiseRun
0000f6  e00a              B        |L1.270|
                  |L1.248|
0000f8  f04f4180          MOV      r1,#0x40000000        ;179
0000fc  4620              MOV      r0,r4                 ;179
0000fe  f7fffffe          BL       __aeabi_cfrcmple
000102  d204              BCS      |L1.270|
000104  f7fffffe          BL       bsp_EdgewiseTurnLeftSlow
000108  2000              MOVS     r0,#0                 ;182
00010a  4954              LDR      r1,|L1.604|
00010c  6188              STR      r0,[r1,#0x18]         ;182  ; edgewiseRun
                  |L1.270|
00010e  e0a1              B        |L1.596|
000110  f7fffffe          BL       bsp_GetRunTime
000114  4951              LDR      r1,|L1.604|
000116  6889              LDR      r1,[r1,#8]            ;189  ; edgewiseRun
000118  1a40              SUBS     r0,r0,r1              ;189
00011a  f5b06ffa          CMP      r0,#0x7d0             ;189
00011e  d20c              BCS      |L1.314|
000120  f7fffffe          BL       bsp_GetCurrentBothPulse
000124  494d              LDR      r1,|L1.604|
000126  68c9              LDR      r1,[r1,#0xc]          ;189  ; edgewiseRun
000128  1a45              SUBS     r5,r0,r1              ;189
00012a  4628              MOV      r0,r5                 ;189
00012c  f7fffffe          BL       __aeabi_ui2f
000130  4604              MOV      r4,r0                 ;189
000132  494c              LDR      r1,|L1.612|
000134  f7fffffe          BL       __aeabi_cfrcmple
000138  d80d              BHI      |L1.342|
                  |L1.314|
00013a  f7fffffe          BL       bsp_RotateCCW
00013e  f7fffffe          BL       bsp_AngleRead
000142  4946              LDR      r1,|L1.604|
000144  6108              STR      r0,[r1,#0x10]         ;193  ; edgewiseRun
000146  f7fffffe          BL       bsp_GetRunTime
00014a  4944              LDR      r1,|L1.604|
00014c  6088              STR      r0,[r1,#8]            ;194  ; edgewiseRun
00014e  4608              MOV      r0,r1                 ;195
000150  6840              LDR      r0,[r0,#4]            ;195  ; edgewiseRun
000152  1c40              ADDS     r0,r0,#1              ;195
000154  6048              STR      r0,[r1,#4]            ;195  ; edgewiseRun
                  |L1.342|
000156  e07d              B        |L1.596|
000158  f7fffffe          BL       bsp_GetInfraredVoltageRight
00015c  4606              MOV      r6,r0                 ;201
00015e  f7fffffe          BL       bsp_AngleRead
000162  4607              MOV      r7,r0                 ;202
000164  493d              LDR      r1,|L1.604|
000166  6908              LDR      r0,[r1,#0x10]         ;202  ; edgewiseRun
000168  493f              LDR      r1,|L1.616|
00016a  f7fffffe          BL       bsp_AngleAdd
00016e  4680              MOV      r8,r0                 ;202
000170  4639              MOV      r1,r7                 ;202
000172  f7fffffe          BL       __aeabi_fsub
000176  4605              MOV      r5,r0                 ;202
000178  f7fffffe          BL       myabs
00017c  4604              MOV      r4,r0                 ;202
00017e  f04f4180          MOV      r1,#0x40000000        ;202
000182  f7fffffe          BL       __aeabi_cfcmple
000186  d91a              BLS      |L1.446|
000188  f04f517e          MOV      r1,#0x3f800000        ;203
00018c  4630              MOV      r0,r6                 ;203
00018e  f7fffffe          BL       __aeabi_cfrcmple
000192  d819              BHI      |L1.456|
000194  4935              LDR      r1,|L1.620|
000196  4630              MOV      r0,r6                 ;203
000198  f7fffffe          BL       __aeabi_cfcmple
00019c  d814              BHI      |L1.456|
00019e  f7fffffe          BL       bsp_AngleRead
0001a2  4607              MOV      r7,r0                 ;203
0001a4  482d              LDR      r0,|L1.604|
0001a6  6901              LDR      r1,[r0,#0x10]         ;203  ; edgewiseRun
0001a8  4638              MOV      r0,r7                 ;203
0001aa  f7fffffe          BL       __aeabi_fsub
0001ae  4605              MOV      r5,r0                 ;203
0001b0  f7fffffe          BL       myabs
0001b4  4604              MOV      r4,r0                 ;203
0001b6  492e              LDR      r1,|L1.624|
0001b8  f7fffffe          BL       __aeabi_cfrcmple
0001bc  d804              BHI      |L1.456|
                  |L1.446|
0001be  f7fffffe          BL       bsp_EdgewiseRunStraightSlow
0001c2  2001              MOVS     r0,#1                 ;206
0001c4  4925              LDR      r1,|L1.604|
0001c6  6048              STR      r0,[r1,#4]            ;206  ; edgewiseRun
                  |L1.456|
0001c8  e044              B        |L1.596|
0001ca  f7fffffe          BL       bsp_AngleRead
0001ce  4923              LDR      r1,|L1.604|
0001d0  6108              STR      r0,[r1,#0x10]         ;213  ; edgewiseRun
0001d2  f7fffffe          BL       bsp_GetRunTime
0001d6  4921              LDR      r1,|L1.604|
0001d8  6088              STR      r0,[r1,#8]            ;214  ; edgewiseRun
0001da  f7fffffe          BL       bsp_PirouetteCW
0001de  481f              LDR      r0,|L1.604|
0001e0  6840              LDR      r0,[r0,#4]            ;218  ; edgewiseRun
0001e2  1c40              ADDS     r0,r0,#1              ;218
0001e4  491d              LDR      r1,|L1.604|
0001e6  6048              STR      r0,[r1,#4]            ;218  ; edgewiseRun
0001e8  e034              B        |L1.596|
0001ea  f7fffffe          BL       bsp_GetInfraredVoltageRight
0001ee  4606              MOV      r6,r0                 ;223
0001f0  f7fffffe          BL       bsp_GetRunTime
0001f4  4919              LDR      r1,|L1.604|
0001f6  6889              LDR      r1,[r1,#8]            ;227  ; edgewiseRun
0001f8  1a40              SUBS     r0,r0,r1              ;227
0001fa  f64031b8          MOV      r1,#0xbb8             ;227
0001fe  4288              CMP      r0,r1                 ;227
000200  d316              BCC      |L1.560|
000202  f7fffffe          BL       bsp_AngleRead
000206  4607              MOV      r7,r0                 ;228
000208  4914              LDR      r1,|L1.604|
00020a  6908              LDR      r0,[r1,#0x10]         ;228  ; edgewiseRun
00020c  4919              LDR      r1,|L1.628|
00020e  f7fffffe          BL       bsp_AngleAdd
000212  4680              MOV      r8,r0                 ;228
000214  4639              MOV      r1,r7                 ;228
000216  f7fffffe          BL       __aeabi_fsub
00021a  4605              MOV      r5,r0                 ;228
00021c  f7fffffe          BL       myabs
000220  4604              MOV      r4,r0                 ;228
000222  4913              LDR      r1,|L1.624|
000224  f7fffffe          BL       __aeabi_cfcmple
000228  d802              BHI      |L1.560|
00022a  2000              MOVS     r0,#0                 ;230
00022c  490b              LDR      r1,|L1.604|
00022e  6048              STR      r0,[r1,#4]            ;230  ; edgewiseRun
                  |L1.560|
000230  f7fffffe          BL       bsp_CollisionScan
000234  2803              CMP      r0,#3                 ;234
000236  d109              BNE      |L1.588|
000238  490f              LDR      r1,|L1.632|
00023a  4630              MOV      r0,r6                 ;234
00023c  f7fffffe          BL       __aeabi_cfrcmple
000240  d807              BHI      |L1.594|
000242  490a              LDR      r1,|L1.620|
000244  4630              MOV      r0,r6                 ;234
000246  f7fffffe          BL       __aeabi_cfcmple
00024a  d802              BHI      |L1.594|
                  |L1.588|
00024c  2001              MOVS     r0,#1                 ;236
00024e  4903              LDR      r1,|L1.604|
000250  6048              STR      r0,[r1,#4]            ;236  ; edgewiseRun
                  |L1.594|
000252  bf00              NOP                            ;238
                  |L1.596|
000254  bf00              NOP                            ;146
000256  bf00              NOP      
000258  e6d7              B        |L1.10|
;;;242    
                          ENDP

00025a  0000              DCW      0x0000
                  |L1.604|
                          DCD      edgewiseRun
                  |L1.608|
                          DCD      0x3e4ccccd
                  |L1.612|
                          DCD      0x423a59ea
                  |L1.616|
                          DCD      0x41a00000
                  |L1.620|
                          DCD      0x40533333
                  |L1.624|
                          DCD      0x41200000
                  |L1.628|
                          DCD      0x43b40000
                  |L1.632|
                          DCD      0x3f99999a

                          AREA ||i.bsp_EdgewiseRunStraightFast||, CODE, READONLY, ALIGN=1

                  bsp_EdgewiseRunStraightFast PROC
;;;254    */
;;;255    static void bsp_EdgewiseRunStraightFast(void)
000000  b510              PUSH     {r4,lr}
;;;256    {
;;;257    	bsp_SetMotorSpeed(MotorLeft, STRAIGHT_SPEED_FAST);
000002  210c              MOVS     r1,#0xc
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       bsp_SetMotorSpeed
;;;258    	bsp_SetMotorSpeed(MotorRight,STRAIGHT_SPEED_FAST);
00000a  210c              MOVS     r1,#0xc
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       bsp_SetMotorSpeed
;;;259    }
000012  bd10              POP      {r4,pc}
;;;260    
                          ENDP


                          AREA ||i.bsp_EdgewiseRunStraightSlow||, CODE, READONLY, ALIGN=1

                  bsp_EdgewiseRunStraightSlow PROC
;;;268    */
;;;269    static void bsp_EdgewiseRunStraightSlow(void)
000000  b510              PUSH     {r4,lr}
;;;270    {
;;;271    	bsp_SetMotorSpeed(MotorLeft, STRAIGHT_SPEED_SLOW);
000002  2106              MOVS     r1,#6
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       bsp_SetMotorSpeed
;;;272    	bsp_SetMotorSpeed(MotorRight,STRAIGHT_SPEED_SLOW);
00000a  2106              MOVS     r1,#6
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       bsp_SetMotorSpeed
;;;273    }
000012  bd10              POP      {r4,pc}
;;;274    
                          ENDP


                          AREA ||i.bsp_EdgewiseTurnLeftFast||, CODE, READONLY, ALIGN=1

                  bsp_EdgewiseTurnLeftFast PROC
;;;310    */
;;;311    static void bsp_EdgewiseTurnLeftFast(void)
000000  b510              PUSH     {r4,lr}
;;;312    {
;;;313    	bsp_SetMotorSpeed(MotorLeft, TURN_LEFT_SPEED_FAST_L);
000002  2101              MOVS     r1,#1
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       bsp_SetMotorSpeed
;;;314    	bsp_SetMotorSpeed(MotorRight,TURN_LEFT_SPEED_FAST_R);
00000a  2103              MOVS     r1,#3
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       bsp_SetMotorSpeed
;;;315    }
000012  bd10              POP      {r4,pc}
;;;316    
                          ENDP


                          AREA ||i.bsp_EdgewiseTurnLeftSlow||, CODE, READONLY, ALIGN=1

                  bsp_EdgewiseTurnLeftSlow PROC
;;;324    */
;;;325    static void bsp_EdgewiseTurnLeftSlow(void)
000000  b510              PUSH     {r4,lr}
;;;326    {
;;;327    	bsp_SetMotorSpeed(MotorLeft, TURN_LEFT_SPEED_SLOW_L);
000002  2105              MOVS     r1,#5
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       bsp_SetMotorSpeed
;;;328    	bsp_SetMotorSpeed(MotorRight,TURN_LEFT_SPEED_SLOW_R);
00000a  2106              MOVS     r1,#6
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       bsp_SetMotorSpeed
;;;329    }
000012  bd10              POP      {r4,pc}
;;;330    
                          ENDP


                          AREA ||i.bsp_EdgewiseTurnRightFast||, CODE, READONLY, ALIGN=1

                  bsp_EdgewiseTurnRightFast PROC
;;;282    */
;;;283    static void bsp_EdgewiseTurnRightFast(void)
000000  b510              PUSH     {r4,lr}
;;;284    {
;;;285    	bsp_SetMotorSpeed(MotorLeft, TURN_RIGHT_SPEED_FAST_L);
000002  2103              MOVS     r1,#3
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       bsp_SetMotorSpeed
;;;286    	bsp_SetMotorSpeed(MotorRight,TURN_RIGHT_SPEED_FAST_R);
00000a  2101              MOVS     r1,#1
00000c  4608              MOV      r0,r1
00000e  f7fffffe          BL       bsp_SetMotorSpeed
;;;287    }
000012  bd10              POP      {r4,pc}
;;;288    
                          ENDP


                          AREA ||i.bsp_EdgewiseTurnRightSlow||, CODE, READONLY, ALIGN=1

                  bsp_EdgewiseTurnRightSlow PROC
;;;296    */
;;;297    static void bsp_EdgewiseTurnRightSlow(void)
000000  b510              PUSH     {r4,lr}
;;;298    {
;;;299    	bsp_SetMotorSpeed(MotorLeft, TURN_RIGHT_SPEED_SLOW_L);
000002  2106              MOVS     r1,#6
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       bsp_SetMotorSpeed
;;;300    	bsp_SetMotorSpeed(MotorRight,TURN_RIGHT_SPEED_SLOW_R);
00000a  2105              MOVS     r1,#5
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       bsp_SetMotorSpeed
;;;301    }
000012  bd10              POP      {r4,pc}
;;;302    
                          ENDP


                          AREA ||i.bsp_GoBackward||, CODE, READONLY, ALIGN=1

                  bsp_GoBackward PROC
;;;366    */
;;;367    static void bsp_GoBackward(void)
000000  b510              PUSH     {r4,lr}
;;;368    {
;;;369    	bsp_SetMotorSpeed(MotorLeft, BACKWARD_SPEED);
000002  f06f0105          MVN      r1,#5
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       bsp_SetMotorSpeed
;;;370    	bsp_SetMotorSpeed(MotorRight,BACKWARD_SPEED);
00000c  f06f0105          MVN      r1,#5
000010  2001              MOVS     r0,#1
000012  f7fffffe          BL       bsp_SetMotorSpeed
;;;371    }
000016  bd10              POP      {r4,pc}
;;;372    
                          ENDP


                          AREA ||i.bsp_PirouetteCCW||, CODE, READONLY, ALIGN=1

                  bsp_PirouetteCCW PROC
;;;352    */
;;;353    static void bsp_PirouetteCCW(void)
000000  b510              PUSH     {r4,lr}
;;;354    {
;;;355    	bsp_SetMotorSpeed(MotorLeft, 0);
000002  2100              MOVS     r1,#0
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       bsp_SetMotorSpeed
;;;356    	bsp_SetMotorSpeed(MotorRight,PIROUETTE_SPEED);
00000a  2106              MOVS     r1,#6
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       bsp_SetMotorSpeed
;;;357    }
000012  bd10              POP      {r4,pc}
;;;358    
                          ENDP


                          AREA ||i.bsp_PirouetteCW||, CODE, READONLY, ALIGN=1

                  bsp_PirouetteCW PROC
;;;338    */
;;;339    static void bsp_PirouetteCW(void)
000000  b510              PUSH     {r4,lr}
;;;340    {
;;;341    	bsp_SetMotorSpeed(MotorLeft, PIROUETTE_SPEED);
000002  2106              MOVS     r1,#6
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       bsp_SetMotorSpeed
;;;342    	bsp_SetMotorSpeed(MotorRight,0);
00000a  2100              MOVS     r1,#0
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       bsp_SetMotorSpeed
;;;343    }
000012  bd10              POP      {r4,pc}
;;;344    
                          ENDP


                          AREA ||i.bsp_RotateCCW||, CODE, READONLY, ALIGN=1

                  bsp_RotateCCW PROC
;;;395    */
;;;396    static void bsp_RotateCCW(void)
000000  b510              PUSH     {r4,lr}
;;;397    {
;;;398    #if 1
;;;399    	
;;;400    	bsp_SetMotorSpeed(MotorLeft, ROTATE_CCW_SPEED_L);
000002  f06f0104          MVN      r1,#4
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       bsp_SetMotorSpeed
;;;401    	bsp_SetMotorSpeed(MotorRight,ROTATE_CCW_SPEED_R);
00000c  2105              MOVS     r1,#5
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       bsp_SetMotorSpeed
;;;402    
;;;403    #else
;;;404    	
;;;405    /*
;;;406    	linearVelocity   线速度（毫米/s）
;;;407    	angularVelocity  角速度（度/s）
;;;408    	r                后退距离，也是转弯半径（毫米）
;;;409    */
;;;410    	
;;;411    	/*基本参数，计算合理的线速度和角速度*/
;;;412    	double r = 15;
;;;413    	double linearVelocity = 20;
;;;414    	double angularVelocity = Deg2Rad(linearVelocity / r);
;;;415    
;;;416    	/*计算出速度，单位MM/S */
;;;417    	int16_t leftVelocity = (int16_t)((0.5*(2*linearVelocity*0.001 - Deg2Rad(angularVelocity)*WHEEL_LENGTH))* 1000);
;;;418    	int16_t rightVelocity = (int16_t)((0.5*(2*linearVelocity*0.001 + Deg2Rad(angularVelocity)*WHEEL_LENGTH))* 1000);
;;;419    	
;;;420    	/*设置速度，单位MM/S */
;;;421    	bsp_SetMotorSpeed(MotorLeft,bsp_MotorSpeedMM2Pulse(leftVelocity));
;;;422    	bsp_SetMotorSpeed(MotorRight,bsp_MotorSpeedMM2Pulse(rightVelocity));
;;;423    	
;;;424    #endif
;;;425    
;;;426    }
000014  bd10              POP      {r4,pc}
;;;427    
                          ENDP


                          AREA ||i.bsp_RotateCW||, CODE, READONLY, ALIGN=1

                  bsp_RotateCW PROC
;;;381    */
;;;382    static void bsp_RotateCW(void)
000000  b510              PUSH     {r4,lr}
;;;383    {
;;;384    	bsp_SetMotorSpeed(MotorLeft, ROTATE_CW_SPEED_L);
000002  2105              MOVS     r1,#5
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       bsp_SetMotorSpeed
;;;385    	bsp_SetMotorSpeed(MotorRight,ROTATE_CW_SPEED_R);
00000a  f06f0104          MVN      r1,#4
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       bsp_SetMotorSpeed
;;;386    }
000014  bd10              POP      {r4,pc}
;;;387    
                          ENDP


                          AREA ||i.bsp_StartEdgewiseRun||, CODE, READONLY, ALIGN=2

                  bsp_StartEdgewiseRun PROC
;;;68     */
;;;69     void bsp_StartEdgewiseRun(void)
000000  2000              MOVS     r0,#0
;;;70     {
;;;71     	edgewiseRun.action = 0 ;
000002  4905              LDR      r1,|L13.24|
000004  6048              STR      r0,[r1,#4]  ; edgewiseRun
;;;72     	edgewiseRun.delay = 0 ;
000006  6088              STR      r0,[r1,#8]  ; edgewiseRun
;;;73     	edgewiseRun.collision = CollisionNone;
000008  2003              MOVS     r0,#3
00000a  7508              STRB     r0,[r1,#0x14]
;;;74     	edgewiseRun.possibleEnd = 0 ;
00000c  2000              MOVS     r0,#0
00000e  6188              STR      r0,[r1,#0x18]  ; edgewiseRun
;;;75     	edgewiseRun.ErlangGodStartTime = 0 ;
000010  61c8              STR      r0,[r1,#0x1c]  ; edgewiseRun
;;;76     	edgewiseRun.isRunning = true;
000012  2001              MOVS     r0,#1
000014  7008              STRB     r0,[r1,#0]
;;;77     	
;;;78     	/*消除编译器警告*/
;;;79     	UNUSED(bsp_EdgewiseRunStraightFast) ;
;;;80     	UNUSED(bsp_EdgewiseRunStraightSlow) ;
;;;81     	UNUSED(bsp_EdgewiseTurnRightFast)   ;
;;;82     	UNUSED(bsp_EdgewiseTurnRightSlow)   ;
;;;83     	UNUSED(bsp_EdgewiseTurnLeftFast)    ;
;;;84     	UNUSED(bsp_EdgewiseTurnLeftSlow)    ;
;;;85     	UNUSED(bsp_PirouetteCW)             ;
;;;86     	UNUSED(bsp_PirouetteCCW)            ;
;;;87     	UNUSED(bsp_GoBackward)              ;
;;;88     	UNUSED(bsp_RotateCW)                ;
;;;89     	UNUSED(bsp_RotateCCW)               ;
;;;90     }
000016  4770              BX       lr
;;;91     
                          ENDP

                  |L13.24|
                          DCD      edgewiseRun

                          AREA ||i.bsp_StopEdgewiseRun||, CODE, READONLY, ALIGN=2

                  bsp_StopEdgewiseRun PROC
;;;99     */
;;;100    void bsp_StopEdgewiseRun(void)
000000  2000              MOVS     r0,#0
;;;101    {
;;;102    	edgewiseRun.isRunning = false;
000002  4905              LDR      r1,|L14.24|
000004  7008              STRB     r0,[r1,#0]
;;;103    	edgewiseRun.action = 0 ;
000006  6048              STR      r0,[r1,#4]  ; edgewiseRun
;;;104    	edgewiseRun.delay = 0 ;
000008  6088              STR      r0,[r1,#8]  ; edgewiseRun
;;;105    	edgewiseRun.collision = CollisionNone;
00000a  2003              MOVS     r0,#3
00000c  7508              STRB     r0,[r1,#0x14]
;;;106    	edgewiseRun.possibleEnd = 0 ;
00000e  2000              MOVS     r0,#0
000010  6188              STR      r0,[r1,#0x18]  ; edgewiseRun
;;;107    	edgewiseRun.ErlangGodStartTime = 0 ;
000012  61c8              STR      r0,[r1,#0x1c]  ; edgewiseRun
;;;108    
;;;109    }
000014  4770              BX       lr
;;;110    
                          ENDP

000016  0000              DCW      0x0000
                  |L14.24|
                          DCD      edgewiseRun

                          AREA ||i.myabs||, CODE, READONLY, ALIGN=1

                  myabs PROC
;;;429    
;;;430    static float myabs(float val)
000000  b510              PUSH     {r4,lr}
;;;431    {
000002  4604              MOV      r4,r0
;;;432    	if(val < 0)
000004  2100              MOVS     r1,#0
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       __aeabi_cfcmple
00000c  d201              BCS      |L15.18|
;;;433    	{
;;;434    		val = - val;
00000e  f0844400          EOR      r4,r4,#0x80000000
                  |L15.18|
;;;435    	}
;;;436    	
;;;437    	return val;
000012  4620              MOV      r0,r4
;;;438    }
000014  bd10              POP      {r4,pc}
;;;439    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  edgewiseRun
                          %        32

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_Edgewise.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_bsp_Edgewise_c_0923faeb____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_bsp_Edgewise_c_0923faeb____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_bsp_Edgewise_c_0923faeb____REVSH|
#line 128
|__asm___14_bsp_Edgewise_c_0923faeb____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
