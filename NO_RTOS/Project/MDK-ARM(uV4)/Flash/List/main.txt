; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I..\..\..\User\angle\gan_rui_Angle -I..\..\User\angle\yuan_zi_Angle -I..\..\User\dx8\inc -IF:\LuckyXRQ\CleanCar\NO_RTOS\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\main.crf ..\..\User\app\src\main.c]
                          THUMB

                          AREA ||i.bsp_KeyProc||, CODE, READONLY, ALIGN=2

                  bsp_KeyProc PROC
;;;68     */
;;;69     static void bsp_KeyProc(void)
000000  b510              PUSH     {r4,lr}
;;;70     {
;;;71     	uint8_t ucKeyCode;	
;;;72     	
;;;73     	ucKeyCode = bsp_GetKey();
000002  f7fffffe          BL       bsp_GetKey
000006  4604              MOV      r4,r0
;;;74     	if (ucKeyCode > 0)
000008  2c00              CMP      r4,#0
00000a  dd30              BLE      |L1.110|
;;;75     	{
;;;76     		/* 有键按下 */
;;;77     		switch (ucKeyCode)
00000c  2c07              CMP      r4,#7
00000e  d010              BEQ      |L1.50|
000010  dc08              BGT      |L1.36|
000012  2c01              CMP      r4,#1
000014  d015              BEQ      |L1.66|
000016  2c03              CMP      r4,#3
000018  d01f              BEQ      |L1.90|
00001a  2c04              CMP      r4,#4
00001c  d00d              BEQ      |L1.58|
00001e  2c06              CMP      r4,#6
000020  d124              BNE      |L1.108|
000022  e016              B        |L1.82|
                  |L1.36|
000024  2c09              CMP      r4,#9
000026  d010              BEQ      |L1.74|
000028  2c19              CMP      r4,#0x19
00002a  d01a              BEQ      |L1.98|
00002c  2c1c              CMP      r4,#0x1c
00002e  d11d              BNE      |L1.108|
000030  e018              B        |L1.100|
                  |L1.50|
;;;78     		{
;;;79     			case KEY_DOWN_POWER:
;;;80     			{
;;;81     				DEBUG("电源按键按下\r\n");
000032  a00f              ADR      r0,|L1.112|
000034  f7fffffe          BL       __2printf
;;;82     
;;;83     			}break;
000038  e018              B        |L1.108|
                  |L1.58|
;;;84     				
;;;85     			case KEY_DOWN_CHARGE:
;;;86     			{
;;;87     				DEBUG("充电按键按下\r\n");
00003a  a011              ADR      r0,|L1.128|
00003c  f7fffffe          BL       __2printf
;;;88     
;;;89     			}break;
000040  e014              B        |L1.108|
                  |L1.66|
;;;90     				
;;;91     			case KEY_DOWN_CLEAN:	
;;;92     			{
;;;93     				DEBUG("清扫按键按下\r\n");
000042  a013              ADR      r0,|L1.144|
000044  f7fffffe          BL       __2printf
;;;94     
;;;95     			}break;
000048  e010              B        |L1.108|
                  |L1.74|
;;;96     
;;;97     			case KEY_LONG_POWER:
;;;98     			{
;;;99     				DEBUG("电源按键长按\r\n");
00004a  a015              ADR      r0,|L1.160|
00004c  f7fffffe          BL       __2printf
;;;100    				
;;;101    				
;;;102    			}break;
000050  e00c              B        |L1.108|
                  |L1.82|
;;;103    			
;;;104    			case KEY_LONG_CHARGE:
;;;105    			{
;;;106    				DEBUG("充电按键长按\r\n");
000052  a017              ADR      r0,|L1.176|
000054  f7fffffe          BL       __2printf
;;;107    				
;;;108    				
;;;109    			}break;
000058  e008              B        |L1.108|
                  |L1.90|
;;;110    			
;;;111    			case KEY_LONG_CLEAN:
;;;112    			{
;;;113    				DEBUG("清扫按键长按\r\n");
00005a  a019              ADR      r0,|L1.192|
00005c  f7fffffe          BL       __2printf
;;;114    				
;;;115    				
;;;116    			}break;
000060  e004              B        |L1.108|
                  |L1.98|
;;;117    			
;;;118    			case KEY_9_DOWN:
;;;119    			{
;;;120    				
;;;121    				
;;;122    			}break;
000062  e003              B        |L1.108|
                  |L1.100|
;;;123    			
;;;124    			
;;;125    			case KEY_10_DOWN:
;;;126    			{
;;;127    				DEBUG("重新配网：同时按充电和清扫\r\n");
000064  a01a              ADR      r0,|L1.208|
000066  f7fffffe          BL       __2printf
;;;128    
;;;129    			}break;
00006a  bf00              NOP      
                  |L1.108|
00006c  bf00              NOP                            ;83
                  |L1.110|
;;;130    		}   
;;;131    	}
;;;132    }
00006e  bd10              POP      {r4,pc}
;;;133    
                          ENDP

                  |L1.112|
000070  b5e7d4b4          DCB      181,231,212,180,176,180,188,252,176,180,207,194,"\r\n",0
000074  b0b4bcfc
000078  b0b4cfc2
00007c  0d0a00  
00007f  00                DCB      0
                  |L1.128|
000080  b3e4b5e7          DCB      179,228,181,231,176,180,188,252,176,180,207,194,"\r\n",0
000084  b0b4bcfc
000088  b0b4cfc2
00008c  0d0a00  
00008f  00                DCB      0
                  |L1.144|
000090  c7e5c9a8          DCB      199,229,201,168,176,180,188,252,176,180,207,194,"\r\n",0
000094  b0b4bcfc
000098  b0b4cfc2
00009c  0d0a00  
00009f  00                DCB      0
                  |L1.160|
0000a0  b5e7d4b4          DCB      181,231,212,180,176,180,188,252,179,164,176,180,"\r\n",0
0000a4  b0b4bcfc
0000a8  b3a4b0b4
0000ac  0d0a00  
0000af  00                DCB      0
                  |L1.176|
0000b0  b3e4b5e7          DCB      179,228,181,231,176,180,188,252,179,164,176,180,"\r\n",0
0000b4  b0b4bcfc
0000b8  b3a4b0b4
0000bc  0d0a00  
0000bf  00                DCB      0
                  |L1.192|
0000c0  c7e5c9a8          DCB      199,229,201,168,176,180,188,252,179,164,176,180,"\r\n",0
0000c4  b0b4bcfc
0000c8  b3a4b0b4
0000cc  0d0a00  
0000cf  00                DCB      0
                  |L1.208|
0000d0  d6d8d0c2          DCB      214,216,208,194,197,228,205,248,163,186,205,172,202,177,176
0000d4  c5e4cdf8
0000d8  a3bacdac
0000dc  cab1b0  
0000df  b4b3e4b5          DCB      180,179,228,181,231,186,205,199,229,201,168,"\r\n",0
0000e3  e7bacdc7
0000e7  e5c9a80d
0000eb  0a00    
0000ed  00                DCB      0
0000ee  00                DCB      0
0000ef  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;13     */
;;;14     int main(void)
000000  2400              MOVS     r4,#0
;;;15     {
;;;16     	uint32_t tick = 0 ;
;;;17     	/*
;;;18     		ST固件库中的启动文件已经执行了 SystemInit() 函数，该函数在 system_stm32f4xx.c 文件，主要功能是
;;;19     	配置CPU系统的时钟，内部Flash访问时序，配置FSMC用于外部SRAM
;;;20     	*/
;;;21     	bsp_Init();		/* 硬件初始化 */
000002  f7fffffe          BL       bsp_Init
;;;22     	
;;;23     	
;;;24     	
;;;25     //	bsp_SetMotorSpeed(MotorLeft,bsp_MotorSpeedMM2Pulse(100));
;;;26     //	bsp_SetMotorSpeed(MotorRight,bsp_MotorSpeedMM2Pulse(100));
;;;27     
;;;28     	bsp_IRD_StartWork();
000006  f7fffffe          BL       bsp_IRD_StartWork
;;;29     
;;;30     	
;;;31     	/* 主程序大循环 */
;;;32     	while (1)
00000a  e01b              B        |L2.68|
                  |L2.12|
;;;33     	{
;;;34     	
;;;35     		bsp_PositionUpdate();
00000c  f7fffffe          BL       bsp_PositionUpdate
;;;36     		bsp_LedAppProc();
000010  f7fffffe          BL       bsp_LedAppProc
;;;37     		bsp_KeyProc();
000014  f7fffffe          BL       bsp_KeyProc
;;;38     		bsp_SearchChargePile();
000018  f7fffffe          BL       bsp_SearchChargePile
;;;39     		bsp_EdgewiseRun();
00001c  f7fffffe          BL       bsp_EdgewiseRun
;;;40     		
;;;41     		if(tick % 100 == 0)
;;;42     		{
;;;43     			//bsp_PrintIR_Rev();
;;;44     			
;;;45     		}
;;;46     		
;;;47     		/*下面内容不修改*/
;;;48     		++tick;
000020  1c64              ADDS     r4,r4,#1
;;;49     		bsp_DelayMS(1);
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       bsp_DelayMS
;;;50     		
;;;51     		
;;;52     		bsp_LedOff(1);
000028  2001              MOVS     r0,#1
00002a  f7fffffe          BL       bsp_LedOff
;;;53     		bsp_DelayUS(260);
00002e  f44f7082          MOV      r0,#0x104
000032  f7fffffe          BL       bsp_DelayUS
;;;54     		bsp_LedOn(1);
000036  2001              MOVS     r0,#1
000038  f7fffffe          BL       bsp_LedOn
;;;55     		bsp_DelayUS(1740);
00003c  f24060cc          MOV      r0,#0x6cc
000040  f7fffffe          BL       bsp_DelayUS
                  |L2.68|
000044  e7e2              B        |L2.12|
;;;56     	}
;;;57     }
;;;58     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 128
|__asm___6_main_c_main____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
