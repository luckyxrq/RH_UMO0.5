; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_collision.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_collision.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -IF:\LuckyXRQ\CleanCar\NO_RTOS\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_collision.crf ..\..\User\app\src\bsp_Collision.c]
                          THUMB

                          AREA ||i.bsp_CollisionScan||, CODE, READONLY, ALIGN=2

                  bsp_CollisionScan PROC
;;;50     */
;;;51     Collision bsp_CollisionScan(void)
000000  b510              PUSH     {r4,lr}
;;;52     {
;;;53     	uint8_t ret = 0 ;
000002  2400              MOVS     r4,#0
;;;54     	
;;;55     	/* 左边撞上了 */
;;;56     	if(GPIO_ReadInputDataBit(GPIO_PORT_LEFT,GPIO_PIN_LEFT))
000004  2120              MOVS     r1,#0x20
000006  4811              LDR      r0,|L1.76|
000008  f7fffffe          BL       GPIO_ReadInputDataBit
00000c  b108              CBZ      r0,|L1.18|
;;;57     	{
;;;58     		ret |= 1<<0;
00000e  f0440401          ORR      r4,r4,#1
                  |L1.18|
;;;59     	}
;;;60     	
;;;61     	
;;;62     	/* 右边撞上了 */
;;;63     	if(GPIO_ReadInputDataBit(GPIO_PORT_RIGHT,GPIO_PIN_RIGHT))
000012  f44f7180          MOV      r1,#0x100
000016  480e              LDR      r0,|L1.80|
000018  f7fffffe          BL       GPIO_ReadInputDataBit
00001c  b108              CBZ      r0,|L1.34|
;;;64     	{
;;;65     		ret |= 1<<1;
00001e  f0440402          ORR      r4,r4,#2
                  |L1.34|
;;;66     	}
;;;67     	
;;;68     	if(ret == 0x00)
000022  b90c              CBNZ     r4,|L1.40|
;;;69     	{
;;;70     		return CollisionNone;
000024  2003              MOVS     r0,#3
                  |L1.38|
;;;71     	}
;;;72     	else if(ret == 0x01)
;;;73     	{
;;;74     		return CollisionLeft;
;;;75     	}
;;;76     	else if(ret == 0x02)
;;;77     	{
;;;78     		return CollisionRight;
;;;79     	}
;;;80     	else if(ret == 0x03)
;;;81     	{
;;;82     		return CollisionAll;
;;;83     	}
;;;84     	else
;;;85     	{
;;;86     		WARNING("不合理的碰撞结果\r\n");
;;;87     		return CollisionNone;
;;;88     	}
;;;89     
;;;90     }
000026  bd10              POP      {r4,pc}
                  |L1.40|
000028  2c01              CMP      r4,#1                 ;72
00002a  d101              BNE      |L1.48|
00002c  2000              MOVS     r0,#0                 ;74
00002e  e7fa              B        |L1.38|
                  |L1.48|
000030  2c02              CMP      r4,#2                 ;76
000032  d101              BNE      |L1.56|
000034  2001              MOVS     r0,#1                 ;78
000036  e7f6              B        |L1.38|
                  |L1.56|
000038  2c03              CMP      r4,#3                 ;80
00003a  d101              BNE      |L1.64|
00003c  2002              MOVS     r0,#2                 ;82
00003e  e7f2              B        |L1.38|
                  |L1.64|
000040  a004              ADR      r0,|L1.84|
000042  f7fffffe          BL       __2printf
000046  2003              MOVS     r0,#3                 ;87
000048  e7ed              B        |L1.38|
;;;91     
                          ENDP

00004a  0000              DCW      0x0000
                  |L1.76|
                          DCD      0x40010800
                  |L1.80|
                          DCD      0x40011c00
                  |L1.84|
000054  b2bbbacf          DCB      178,187,186,207,192,237,181,196,197,246,215,178,189,225,185
000058  c0edb5c4
00005c  c5f6d7b2
000060  bde1b9  
000063  fb0d0a00          DCB      251,"\r\n",0
000067  00                DCB      0

                          AREA ||i.bsp_InitCollision||, CODE, READONLY, ALIGN=2

                  bsp_InitCollision PROC
;;;23     */
;;;24     void bsp_InitCollision(void)
000000  b508              PUSH     {r3,lr}
;;;25     {
;;;26     	GPIO_InitTypeDef GPIO_InitStructure;
;;;27     
;;;28     	/* 打开GPIO时钟 */
;;;29     	RCC_APB2PeriphClockCmd(RCC_ALL_ANTICOLLISION, ENABLE);
000002  2101              MOVS     r1,#1
000004  2084              MOVS     r0,#0x84
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;30     
;;;31     
;;;32     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00000a  2003              MOVS     r0,#3
00000c  f88d0002          STRB     r0,[sp,#2]
;;;33     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; /* 上拉输入，但是闲时被外部拉低，碰撞时恢复高电平 */
000010  2048              MOVS     r0,#0x48
000012  f88d0003          STRB     r0,[sp,#3]
;;;34     	
;;;35     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LEFT;
000016  2020              MOVS     r0,#0x20
000018  f8ad0000          STRH     r0,[sp,#0]
;;;36     	GPIO_Init(GPIO_PORT_LEFT, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  4806              LDR      r0,|L2.56|
000020  f7fffffe          BL       GPIO_Init
;;;37     
;;;38     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_RIGHT;
000024  f44f7080          MOV      r0,#0x100
000028  f8ad0000          STRH     r0,[sp,#0]
;;;39     	GPIO_Init(GPIO_PORT_RIGHT, &GPIO_InitStructure);
00002c  4669              MOV      r1,sp
00002e  4803              LDR      r0,|L2.60|
000030  f7fffffe          BL       GPIO_Init
;;;40     }
000034  bd08              POP      {r3,pc}
;;;41     
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      0x40010800
                  |L2.60|
                          DCD      0x40011c00

                          AREA ||i.bsp_PrintCollision||, CODE, READONLY, ALIGN=2

                  bsp_PrintCollision PROC
;;;101    */
;;;102    void bsp_PrintCollision(void)
000000  b510              PUSH     {r4,lr}
;;;103    {
;;;104    	if(bsp_CollisionScan() == CollisionLeft)
000002  f7fffffe          BL       bsp_CollisionScan
000006  b918              CBNZ     r0,|L3.16|
;;;105    	{
;;;106    		DEBUG("左边\r\n");
000008  a009              ADR      r0,|L3.48|
00000a  f7fffffe          BL       __2printf
00000e  e00e              B        |L3.46|
                  |L3.16|
;;;107    	}
;;;108    	else if(bsp_CollisionScan() == CollisionRight)
000010  f7fffffe          BL       bsp_CollisionScan
000014  2801              CMP      r0,#1
000016  d103              BNE      |L3.32|
;;;109    	{
;;;110    		DEBUG("右边\r\n");
000018  a007              ADR      r0,|L3.56|
00001a  f7fffffe          BL       __2printf
00001e  e006              B        |L3.46|
                  |L3.32|
;;;111    	}
;;;112    	else if(bsp_CollisionScan() == CollisionAll)
000020  f7fffffe          BL       bsp_CollisionScan
000024  2802              CMP      r0,#2
000026  d102              BNE      |L3.46|
;;;113    	{
;;;114    		DEBUG("两边\r\n");
000028  a005              ADR      r0,|L3.64|
00002a  f7fffffe          BL       __2printf
                  |L3.46|
;;;115    	}
;;;116    }
00002e  bd10              POP      {r4,pc}
;;;117    
                          ENDP

                  |L3.48|
000030  d7f3b1df          DCB      215,243,177,223,"\r\n",0
000034  0d0a00  
000037  00                DCB      0
                  |L3.56|
000038  d3d2b1df          DCB      211,210,177,223,"\r\n",0
00003c  0d0a00  
00003f  00                DCB      0
                  |L3.64|
000040  c1bdb1df          DCB      193,189,177,223,"\r\n",0
000044  0d0a00  
000047  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_Collision.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_Collision_c_ff2e88e1____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_bsp_Collision_c_ff2e88e1____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_Collision_c_ff2e88e1____REVSH|
#line 128
|__asm___15_bsp_Collision_c_ff2e88e1____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
