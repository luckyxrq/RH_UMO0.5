; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_speaker.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_speaker.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I..\..\..\User\angle\gan_rui_Angle -I..\..\User\angle\yuan_zi_Angle -IF:\LuckyXRQ\CleanCar\NO_RTOS\Project\MDK-ARM(uV4)\RTE -ID:\soft\MDK5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\soft\MDK5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_speaker.crf ..\..\User\app\src\bsp_speaker.c]
                          THUMB

                          AREA ||i.bsp_InitSpeaker||, CODE, READONLY, ALIGN=2

                  bsp_InitSpeaker PROC
;;;24     */
;;;25     void bsp_InitSpeaker(void)
000000  b508              PUSH     {r3,lr}
;;;26     {
;;;27     	GPIO_InitTypeDef GPIO_InitStructure;
;;;28     
;;;29     	/* 打开GPIO时钟 */
;;;30     	RCC_APB2PeriphClockCmd(RCC_ALL_SPEAKER, ENABLE);
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;31     
;;;32     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00000a  2003              MOVS     r0,#3
00000c  f88d0002          STRB     r0,[sp,#2]
;;;33     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;34     	
;;;35     	/*DI引脚*/
;;;36     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_SPEAKER_DI;
000016  0180              LSLS     r0,r0,#6
000018  f8ad0000          STRH     r0,[sp,#0]
;;;37     	GPIO_Init(GPIO_PORT_SPEAKER_DI, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  480b              LDR      r0,|L1.76|
000020  f7fffffe          BL       GPIO_Init
;;;38     
;;;39     	/*RST引脚*/
;;;40     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_SPEAKER_RST;
000024  f44f7000          MOV      r0,#0x200
000028  f8ad0000          STRH     r0,[sp,#0]
;;;41     	GPIO_Init(GPIO_PORT_SPEAKER_RST, &GPIO_InitStructure);
00002c  4669              MOV      r1,sp
00002e  4807              LDR      r0,|L1.76|
000030  f7fffffe          BL       GPIO_Init
;;;42     	
;;;43     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; 
000034  2028              MOVS     r0,#0x28
000036  f88d0003          STRB     r0,[sp,#3]
;;;44     	/*BUSY引脚*/
;;;45     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_SPEAKER_BUSY;
00003a  f44f7080          MOV      r0,#0x100
00003e  f8ad0000          STRH     r0,[sp,#0]
;;;46     	GPIO_Init(GPIO_PORT_SPEAKER_BUSY, &GPIO_InitStructure);
000042  4669              MOV      r1,sp
000044  4801              LDR      r0,|L1.76|
000046  f7fffffe          BL       GPIO_Init
;;;47     }
00004a  bd08              POP      {r3,pc}
;;;48     
                          ENDP

                  |L1.76|
                          DCD      0x40010800

                          AREA ||i.bsp_SpeakerIsBusy||, CODE, READONLY, ALIGN=2

                  bsp_SpeakerIsBusy PROC
;;;84     */
;;;85     bool bsp_SpeakerIsBusy(void)
000000  b510              PUSH     {r4,lr}
;;;86     {
;;;87     	bool ret = 0 ;
000002  2400              MOVS     r4,#0
;;;88     	
;;;89     	if(GPIO_ReadInputDataBit(GPIO_PORT_SPEAKER_BUSY,GPIO_PIN_SPEAKER_BUSY))
000004  f44f7180          MOV      r1,#0x100
000008  4804              LDR      r0,|L2.28|
00000a  f7fffffe          BL       GPIO_ReadInputDataBit
00000e  b108              CBZ      r0,|L2.20|
;;;90     	{
;;;91     		ret = true;
000010  2401              MOVS     r4,#1
000012  e000              B        |L2.22|
                  |L2.20|
;;;92     	}
;;;93     	else
;;;94     	{
;;;95     		ret = false;
000014  2400              MOVS     r4,#0
                  |L2.22|
;;;96     	}
;;;97     	
;;;98     	return ret;
000016  4620              MOV      r0,r4
;;;99     }
000018  bd10              POP      {r4,pc}
;;;100    
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      0x40010800

                          AREA ||i.bsp_SperkerPlay||, CODE, READONLY, ALIGN=2

                  bsp_SperkerPlay PROC
;;;56     */
;;;57     void bsp_SperkerPlay(SongSN sn)
000000  b570              PUSH     {r4-r6,lr}
;;;58     {
000002  4604              MOV      r4,r0
;;;59     	uint16_t i = 0 ;
000004  2500              MOVS     r5,#0
;;;60     	
;;;61     	/*复位*/
;;;62     	GPIO_SetBits(GPIO_PORT_SPEAKER_RST,GPIO_PIN_SPEAKER_RST);
000006  f44f7100          MOV      r1,#0x200
00000a  4812              LDR      r0,|L3.84|
00000c  f7fffffe          BL       GPIO_SetBits
;;;63     	bsp_DelayUS(100);
000010  2064              MOVS     r0,#0x64
000012  f7fffffe          BL       bsp_DelayUS
;;;64     	GPIO_ResetBits(GPIO_PORT_SPEAKER_RST,GPIO_PIN_SPEAKER_RST);
000016  f44f7100          MOV      r1,#0x200
00001a  480e              LDR      r0,|L3.84|
00001c  f7fffffe          BL       GPIO_ResetBits
;;;65     	bsp_DelayUS(100);
000020  2064              MOVS     r0,#0x64
000022  f7fffffe          BL       bsp_DelayUS
;;;66     	
;;;67     	/*根据曲目信息，发送曲目*/
;;;68     	for(i=0;i<sn;i++)
000026  bf00              NOP      
000028  e011              B        |L3.78|
                  |L3.42|
;;;69     	{
;;;70     		GPIO_SetBits(GPIO_PORT_SPEAKER_DI,GPIO_PIN_SPEAKER_DI);
00002a  f44f6180          MOV      r1,#0x400
00002e  4809              LDR      r0,|L3.84|
000030  f7fffffe          BL       GPIO_SetBits
;;;71     		bsp_DelayUS(100);
000034  2064              MOVS     r0,#0x64
000036  f7fffffe          BL       bsp_DelayUS
;;;72     		GPIO_ResetBits(GPIO_PORT_SPEAKER_DI,GPIO_PIN_SPEAKER_DI);
00003a  f44f6180          MOV      r1,#0x400
00003e  4805              LDR      r0,|L3.84|
000040  f7fffffe          BL       GPIO_ResetBits
;;;73     		bsp_DelayUS(100);
000044  2064              MOVS     r0,#0x64
000046  f7fffffe          BL       bsp_DelayUS
00004a  1c68              ADDS     r0,r5,#1              ;68
00004c  b285              UXTH     r5,r0                 ;68
                  |L3.78|
00004e  42a5              CMP      r5,r4                 ;68
000050  dbeb              BLT      |L3.42|
;;;74     	}
;;;75     }
000052  bd70              POP      {r4-r6,pc}
;;;76     
                          ENDP

                  |L3.84|
                          DCD      0x40010800

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\bsp_speaker.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_speaker_c_ccdb5e4d____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_bsp_speaker_c_ccdb5e4d____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_speaker_c_ccdb5e4d____REVSH|
#line 128
|__asm___13_bsp_speaker_c_ccdb5e4d____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
